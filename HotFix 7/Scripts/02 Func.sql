IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
           WHERE TABLE_NAME = N'DBVER')
BEGIN
	CREATE TABLE [dbo].[DBVER](
		[VERNO] [int] NOT NULL,
	)
END
GO
DELETE FROM DBVER
INSERT INTO DBVER SELECT 7
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_ChallanSQL_PA_TMB')
DROP PROCEDURE USP_TDS_ChallanSQL_PA_TMB
GO
CREATE PROCEDURE USP_TDS_ChallanSQL_PA_TMB  
@MONTHYEAR INT   
AS  
	BEGIN   
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '26QI', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='26QI' AND MONTHYEAR=@MONTHYEAR  
		 )P  
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '194C', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='194C' AND MONTHYEAR=@MONTHYEAR  
		 )P  
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '194H', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='194H' AND MONTHYEAR=@MONTHYEAR  
		 )P 
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '194I', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='194I' AND MONTHYEAR=@MONTHYEAR  
		 )P 
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '194J', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='194J' AND MONTHYEAR=@MONTHYEAR  
		 )P 
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '27Q', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='27Q' AND MONTHYEAR=@MONTHYEAR  
		 )P  
		 
		 INSERT INTO PARKEDAMOUNT   
		 SELECT @MONTHYEAR AS MONTHYEAR, BRANCHID, '24Q', '' AS ACCOUNTNO, 0 AS AMOUNT FROM  
		 (  
		  SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE BRANCHID <> 1  
		  EXCEPT  
		  SELECT BRANCHID FROM PARKEDAMOUNT WITH(NOLOCK) WHERE FORMTYPE='24Q' AND MONTHYEAR=@MONTHYEAR  
		 )P  
	END
GO  
  
IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GETREQUIREDAMOUNTTMB')
DROP PROCEDURE USP_TDS_GETREQUIREDAMOUNTTMB
GO
CREATE PROCEDURE USP_TDS_GETREQUIREDAMOUNTTMB 
@MONTHID INT,
@CLIENTID INT
AS
	BEGIN
	--194N Related Changes Begin
	DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End	
	
	CREATE TABLE #TEMP(FORMTYPE VARCHAR(10),BRANCHID INT, DEDTOTAL NUMERIC(17,2))
	
		SELECT * 
		INTO #UNLINKED 
		FROM
			(
				SELECT DEDUCTIONID 
				FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
					INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
				WHERE MONTH(DEDUCTEDDATE) = @MONTHID 
					AND D.PAN LIKE CASE WHEN (@CLIENTID <> 3 
						OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
					THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END 
				AND NOT EXISTS
					(
						SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
					)
			)U
		
		CREATE TABLE #TEMP26Q(FORMTYPE VARCHAR(10),BRANCHID INT, DEDTOTAL NUMERIC(17,2))
		
		IF(@26QCALLOWED = 1)
			BEGIN
				INSERT INTO #TEMP26Q
				SELECT '26QI' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE FORMID = 2 AND SECTIONID = 5 
				GROUP BY D.BRANCHID
				UNION 
				SELECT '26QC' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
				GROUP BY D.BRANCHID
				UNION 				
				SELECT CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END AS FORMTYPE, 
					D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				INNER JOIN TAXSECTIONS TS ON D.SECTIONID = TS.SECTIONID
				WHERE D.FORMID = 2 AND D.SECTIONID NOT IN (5,@194NSECTIONID) 
				GROUP BY D.BRANCHID, CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END
			END
		ELSE
			BEGIN
				INSERT INTO #TEMP26Q
				SELECT '26QI' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE FORMID = 2 AND SECTIONID = 5 
				GROUP BY D.BRANCHID
				UNION 			
				SELECT CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END FORMTYPE, 
					D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				INNER JOIN TAXSECTIONS TS ON D.SECTIONID = TS.SECTIONID
				WHERE D.FORMID = 2 AND D.SECTIONID <> 5 
				GROUP BY D.BRANCHID, CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END
			END		
				
		
		SELECT CB.BRANCHCODE, CB.BRANCHNAME, DD.FORMTYPE, DD.DEDTOTAL
		INTO #REQDATA
		FROM 
		(
			SELECT '24Q' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
			FROM DEDUCTIONDETAIL D WITH(NOLOCK)
			INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID 
			WHERE FORMID = 1 
			GROUP BY D.BRANCHID
			UNION
			SELECT '27Q' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL
			FROM DEDUCTIONDETAIL D WITH(NOLOCK)
			INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
			WHERE FORMID = 3 
			GROUP BY D.BRANCHID
			UNION
			SELECT  FORMTYPE, BRANCHID, DEDTOTAL FROM #TEMP26Q
		) DD
		INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON DD.BRANCHID = CB.BRANCHID 
		
		IF(@26QCALLOWED = 1)
			BEGIN
				SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
					ISNULL([24Q],0) '24Q',  
					ISNULL([26QI],0) '26QI',  
					ISNULL([194C],0) '194C', 
					ISNULL([194H],0) '194H', 
					ISNULL([194I],0) '194I', 
					ISNULL([194J],0) '194J', 
					ISNULL([27Q],0) '27Q',
					ISNULL([26QC],0) '26QC'
				INTO #VIEWDATA
				FROM #REQDATA
				PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[194C],[194H],[194I],[194J],[27Q],[26QC])) AS DV
				ORDER BY BRANCHCODE 
				
				SELECT * FROM #VIEWDATA
				IF OBJECT_ID('TEMPDB..#VIEWDATA') IS NOT NULL
					DROP TABLE #VIEWDATA
			END
		ELSE
			BEGIN
				SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
					ISNULL([24Q],0) '24Q',  
					ISNULL([26QI],0) '26QI',  
					ISNULL([194C],0) '194C', 
					ISNULL([194H],0) '194H', 
					ISNULL([194I],0) '194I', 
					ISNULL([194J],0) '194J', 
					ISNULL([27Q],0) '27Q'
				INTO #VIEWDATA1
				FROM #REQDATA
				PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[194C],[194H],[194I],[194J],[27Q])) AS DV
				ORDER BY BRANCHCODE 
				
				SELECT * FROM #VIEWDATA1	
				
				IF OBJECT_ID('TEMPDB..#VIEWDATA1') IS NOT NULL
					DROP TABLE #VIEWDATA1		
			END
			
		IF OBJECT_ID('TEMPDB..#REQDATA') IS NOT NULL
		DROP TABLE #REQDATA				
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetDeductionMismatchDetailTMB')
DROP PROCEDURE USP_TDS_GetDeductionMismatchDetailTMB
GO
CREATE PROCEDURE USP_TDS_GetDeductionMismatchDetailTMB 
    @MONTHID INT,  
    @FINYEAR INT,
    @CLIENTID INT  
AS  
    BEGIN 		
	   	--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End	
				 
	   DECLARE @MONTHYEAR VARCHAR(10);
	   CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT, BRANCHID INT, FORMTYPE VARCHAR(10),
		  ACCOUNTNO VARCHAR(20), AMOUNT NUMERIC(17,2))
	   CREATE TABLE #TEMPFORMTYPE(FORMTYPE VARCHAR(10), BRANCHID INT, DEDCOUNT INT, DEDAMOUNT NUMERIC(17,2)) 
	   CREATE TABLE #UNLINKED (DEDUCTIONID INT)
	   IF(@MONTHID < 4)
			BEGIN	  
				SET @MONTHYEAR = CAST(@MONTHID AS VARCHAR) + CAST((@FINYEAR + 1) AS VARCHAR) 
			END 
		ELSE
			BEGIN  
				SET @MONTHYEAR = CAST(@MONTHID AS VARCHAR) + CAST(@FINYEAR AS VARCHAR) 
			END
		IF(@CLIENTID = 6 OR @CLIENTID = 14)
			BEGIN	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
				EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTHID
			END
			
		IF(@CLIENTID = 15)
			BEGIN	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
				EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTHID
			END
			
		IF(@CLIENTID = 16)
			BEGIN	
				EXEC USP_TDS_ChallanSQL_PA_TMB @MONTHYEAR
			END	
			
		IF(@CLIENTID = -1)
			BEGIN
				INSERT INTO #TEMPPARKEDAMOUNT 
				EXEC USP_TDS_GETREMAININGPARKEDAMOUNT @MONTHID,@MONTHYEAR
			END
		ELSE
			BEGIN
				INSERT INTO #TEMPPARKEDAMOUNT
				SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT 
				FROM PARKEDAMOUNT WITH(NOLOCK) 
				WHERE MONTHYEAR = @MONTHYEAR
			END
	   
		SELECT DD.DEDUCTIONID, DD.FORMID, DD.ENTRYTYPE, DD.SECTIONID 
		INTO #DEDTEMP 
		FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
			INNER JOIN DEDUCTEE D WITH(NOLOCK) 
				ON D.DEDUCTEEID = DD.DEDUCTEEID
		WHERE MONTH(DEDUCTEDDATE) = @MONTHID 
			AND D.PAN LIKE 
				CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
					THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END 
			AND NOT EXISTS
				(
					SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
				)
		
		INSERT INTO #UNLINKED
		SELECT DEDUCTIONID FROM #DEDTEMP
		
		IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
			DROP TABLE #DEDTEMP
					
		IF(@26QCALLOWED = 1)
			BEGIN
				INSERT  INTO #TEMPFORMTYPE	
				SELECT '26QC' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
				GROUP BY BRANCHID
				UNION	
				SELECT CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END AS FORMTYPE, 
					D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				   INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				   INNER JOIN TAXSECTIONS TS ON D.SECTIONID = TS.SECTIONID
				 WHERE D.SECTIONID NOT IN (5, @194NSECTIONID) AND D.FORMID = 2 
				GROUP BY BRANCHID, CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END 
			END
		ELSE
			BEGIN	
				INSERT  INTO #TEMPFORMTYPE	
				SELECT CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END AS FORMTYPE, 
					D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				   INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				   INNER JOIN TAXSECTIONS TS ON D.SECTIONID = TS.SECTIONID
				WHERE D.SECTIONID <> 5 AND D.FORMID = 2 
				GROUP BY BRANCHID, CASE WHEN D.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END 
			 END
			 		 
			 SELECT '26QI' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 INTO #DEDAVB  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID  
			 WHERE 
				SECTIONID = 5 AND ENTRYTYPE = 4 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID  
			 UNION  
			 SELECT '27Q' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID   
			 WHERE
				FORMID = 3 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID
			 UNION  
			 SELECT FORMTYPE, BRANCHID,DEDCOUNT,DEDAMOUNT FROM #TEMPFORMTYPE 
			 UNION  
			 SELECT '24Q' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID   
			 WHERE
				FORMID = 1 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID  
			 
			 SELECT CB.BRANCHNAME + ' (' + CB.BRANCHCODE + ')' AS BRANCH, 
				D.FORMTYPE, D.DEDCOUNT, D.DEDAMOUNT, P.AMOUNT, 
				(D.DEDAMOUNT - P.AMOUNT) DIFFAMOUNT
			 FROM #DEDAVB D  
				INNER JOIN #TEMPPARKEDAMOUNT P WITH(NOLOCK)  
				    ON D.BRANCHID = P.BRANCHID AND D.FORMTYPE = P.FORMTYPE   
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = D.BRANCHID  
			 WHERE P.MONTHYEAR = @MONTHYEAR 
				AND ((D.DEDAMOUNT > P.AMOUNT) 
					OR (FLOOR(P.AMOUNT) > P.AMOUNT))

	   IF OBJECT_ID('TEMPDB..#TEMPPARKEDAMOUNT') IS NOT NULL
		  DROP TABLE #TEMPPARKEDAMOUNT  
	   IF OBJECT_ID('TEMPDB..#TEMPFORMTYPE') IS NOT NULL
		  DROP TABLE #TEMPFORMTYPE
	   IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL
		  DROP TABLE #UNLINKED
	   IF OBJECT_ID('TEMPDB..#DEDAVB') IS NOT NULL
		  DROP TABLE #DEDAVB
	   IF OBJECT_ID('TEMPDB..#TDSRATE') IS NOT NULL
		  DROP TABLE #TDSRATE
	   IF OBJECT_ID('TEMPDB..#DEDAVBL') IS NOT NULL
		  DROP TABLE #DEDAVBL
	   IF OBJECT_ID('TEMPDB..#BGUPD') IS NOT NULL
		  DROP TABLE #BGUPD
    END   
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetTTUMMonthList')
DROP PROCEDURE USP_TDS_GetTTUMMonthList
GO 
CREATE PROCEDURE USP_TDS_GetTTUMMonthList 
@CLIENTID INT,
@ABCONCEPT BIT = 0,
@STAFFBRANCHCODE VARCHAR(10),
@VENDORBRANCHCODE VARCHAR(10)
AS  	
    BEGIN 
		DECLARE @VENDORBRANCHID INT = (SELECT BRANCHID FROM COMPANYBRANCH WHERE BRANCHCODE = @VENDORBRANCHCODE);	
		DECLARE @STAFFBRANCHID INT = (SELECT BRANCHID FROM COMPANYBRANCH WHERE BRANCHCODE = @STAFFBRANCHCODE);	
		
		--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
			OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
			OR @CLIENTID = 14)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End
		 
		IF(@CLIENTID = 7)
			BEGIN
				 SELECT DISTINCT CASE WHEN MONTH(DEDUCTEDDATE) < 10 THEN '0' ELSE '' END + CAST(MONTH(DEDUCTEDDATE) AS VARCHAR) + SUBSTRING(CAST(YEAR(DEDUCTEDDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,D.BRANCHID,BGLCODE AS FORMTYPE
				FROM DEDUCTIONDETAIL D WITH (NOLOCK)  
					INNER JOIN DEDCHALINK L WITH (NOLOCK) ON D.DEDUCTIONID = L.DEDUCTIONID  
					INNER JOIN TDSRATE TR WITH(NOLOCK) ON TR.BGLCODEID = D.BGLCODEID
					INNER JOIN CHALLANDETAIL C WITH (NOLOCK) ON L.CHALLANID = C.CHALLANID  
				WHERE    
					C.ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND C.BANKCHALLANNO IS NULL 
			END
		ELSE
			IF(@CLIENTID = 14)
				BEGIN
					SELECT CASE WHEN (MONTH(TEMPDATE)- 1) < 10 THEN '0' ELSE '' END 
						+ CAST((MONTH(TEMPDATE)- 1) AS VARCHAR) 
						+ SUBSTRING(CAST(YEAR(TEMPDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,
						BRANCHID, 'All' AS FORMTYPE
					FROM CHALLANDETAIL CD WITH(NOLOCK) 					
					WHERE ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND BANKCHALLANNO IS NULL 
					GROUP BY BRANCHID,TEMPDATE
				END
			ELSE IF(@CLIENTID = 15)
				BEGIN
					SELECT DISTINCT CASE WHEN MONTH(DEDUCTEDDATE) < 10 THEN '0' ELSE '' 
									END + CAST(MONTH(DEDUCTEDDATE) AS VARCHAR) + SUBSTRING(CAST(YEAR(DEDUCTEDDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,
						D.BRANCHID, 'All' AS FORMTYPE
					FROM DEDUCTIONDETAIL D WITH (NOLOCK)  
					INNER JOIN DEDCHALINK L WITH (NOLOCK) ON D.DEDUCTIONID = L.DEDUCTIONID  
					INNER JOIN CHALLANDETAIL C WITH (NOLOCK) ON L.CHALLANID = C.CHALLANID  
					WHERE C.ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND C.BANKCHALLANNO IS NULL 
				END
			ELSE
				IF(@CLIENTID = 8 OR @CLIENTID = 17 OR @CLIENTID = 5 OR @CLIENTID = 3 OR (@CLIENTID = 1 AND @ABCONCEPT = 1))
					BEGIN
						SELECT DISTINCT CASE WHEN MONTH(DEDUCTEDDATE) < 10 THEN '0' 
											 ELSE '' END + CAST(MONTH(DEDUCTEDDATE) AS VARCHAR) 
											 + SUBSTRING(CAST(YEAR(DEDUCTEDDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,
							D.RTBRANCHID AS BRANCHID,
							(
								CASE WHEN C.FORMID = 3 THEN '27Q' 
									 WHEN (C.FORMID = 2 AND C.SECTIONID = 5 AND D.ENTRYTYPE = 4) THEN '26QI' 
									 WHEN C.FORMID = 1 THEN '24Q' 
									 WHEN (@26QCALLOWED = 1 AND C.FORMID = 2 AND C.SECTIONID = @194NSECTIONID) THEN '26QC'
									 WHEN (@CLIENTID = 1 AND C.FORMID = 2 AND D.ENTRYTYPE = 4 AND C.SECTIONID <> 5) THEN '26QVS'									  
								ELSE '26QV' END
							) FORMTYPE
						INTO #FINAL
						FROM DEDUCTIONDETAIL D WITH (NOLOCK)  
							INNER JOIN DEDCHALINK L WITH (NOLOCK) ON D.DEDUCTIONID = L.DEDUCTIONID  
							INNER JOIN CHALLANDETAIL C WITH (NOLOCK) ON L.CHALLANID = C.CHALLANID  
						WHERE  C.ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND C.BANKCHALLANNO IS NULL 
						
						IF(@CLIENTID = 3)
							BEGIN
								SELECT * FROM #FINAL
								UNION
								SELECT TOP 1 MONTHYEAR, @VENDORBRANCHID AS BRANCHID, '26QV' FORMTYPE FROM #FINAL
								UNION
								SELECT TOP 1 MONTHYEAR, @VENDORBRANCHID AS BRANCHID, '26QVS' FORMTYPE FROM #FINAL
								UNION
								SELECT TOP 1 MONTHYEAR, @VENDORBRANCHID AS BRANCHID, '26QC' FORMTYPE FROM #FINAL
								UNION
								SELECT TOP 1 MONTHYEAR, @STAFFBRANCHID AS BRANCHID, '24Q' FORMTYPE FROM #FINAL
							END
						ELSE
							BEGIN
								SELECT * FROM #FINAL
							END
						
					 END
				ELSE
					IF(@CLIENTID = 16)
						BEGIN
							SELECT DISTINCT 
									CASE WHEN MONTH(DEDUCTEDDATE) < 10 THEN '0' ELSE '' END 
										+ CAST(MONTH(DEDUCTEDDATE) AS VARCHAR) 
										+ SUBSTRING(CAST(YEAR(DEDUCTEDDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,
									D.BRANCHID,
									(CASE WHEN C.FORMID = 3 THEN '27Q' 
										  WHEN (C.FORMID = 2 AND C.SECTIONID = 5 AND D.ENTRYTYPE = 4) THEN '26QI' 
										  WHEN C.FORMID = 1 THEN '24Q' 
										  WHEN (@26QCALLOWED = 1 AND C.FORMID = 2 AND C.SECTIONID = @194NSECTIONID) THEN '26QC'
										  WHEN (@CLIENTID = 1 AND C.FORMID = 2 AND D.ENTRYTYPE = 4 AND C.SECTIONID <> 5) THEN '26QVS'									    
										  ELSE TS.SECTIONNAME END) FORMTYPE
							FROM DEDUCTIONDETAIL D WITH (NOLOCK)  
								INNER JOIN DEDCHALINK L WITH (NOLOCK) ON D.DEDUCTIONID = L.DEDUCTIONID  
								INNER JOIN CHALLANDETAIL C WITH (NOLOCK) ON L.CHALLANID = C.CHALLANID  
								INNER JOIN TAXSECTIONS TS WITH (NOLOCK) ON C.SECTIONID = TS.SECTIONID
							WHERE  C.ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND C.BANKCHALLANNO IS NULL 
						END
					ELSE					
						BEGIN
							SELECT DISTINCT 
									CASE WHEN MONTH(DEDUCTEDDATE) < 10 THEN '0' ELSE '' END 
										+ CAST(MONTH(DEDUCTEDDATE) AS VARCHAR) 
										+ SUBSTRING(CAST(YEAR(DEDUCTEDDATE) AS VARCHAR), 3, 2) AS MONTHYEAR,
									D.BRANCHID,
									(CASE WHEN C.FORMID = 3 THEN '27Q' 
										  WHEN (C.FORMID = 2 AND C.SECTIONID = 5 AND D.ENTRYTYPE = 4) THEN '26QI' 
										  WHEN C.FORMID = 1 THEN '24Q' 
										  WHEN (@26QCALLOWED = 1 AND C.FORMID = 2 AND C.SECTIONID = @194NSECTIONID) THEN '26QC'
										  WHEN (@CLIENTID = 1 AND C.FORMID = 2 AND D.ENTRYTYPE = 4 AND C.SECTIONID <> 5) THEN '26QVS'									    
										  ELSE '26QV' END) FORMTYPE
							FROM DEDUCTIONDETAIL D WITH (NOLOCK)  
								INNER JOIN DEDCHALINK L WITH (NOLOCK) ON D.DEDUCTIONID = L.DEDUCTIONID  
								INNER JOIN CHALLANDETAIL C WITH (NOLOCK) ON L.CHALLANID = C.CHALLANID  
							WHERE  C.ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 AND C.BANKCHALLANNO IS NULL 
						 END
    END
   
  GO
  
  IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_CreateChallanForPaymentTMB')
DROP PROCEDURE USP_TDS_CreateChallanForPaymentTMB
GO 
CREATE PROCEDURE USP_TDS_CreateChallanForPaymentTMB 
	@MONTH INT,
	@FINANCIALYEAR INT,
	@ACCOUNTTYPE1 INT,
	@ACCOUNTTYPE2 INT,
	@ACCOUNTTYPE3 INT,
	@CLIENTID INT = 0
AS
BEGIN
	--194N Related Changes Begin
	DECLARE @194SECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194SECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End
	
	DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
	DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);	
	DECLARE @FORMS TABLE(FORMID INT);
	DECLARE @RESULT INT,@DBNAME VARCHAR(MAX), @FORMID INT,@VAR INT, @QUARTER INT,@MONTHYEAR VARCHAR(6) ;
	CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT,BRANCHID INT,FORMTYPE VARCHAR(10),ACCOUNTNO VARCHAR(20),AMOUNT NUMERIC(17,2))
	SET @RESULT = 0;
	SELECT @DBNAME = DB_NAME()
	
	SET NOCOUNT OFF
  
	IF @MONTH > 9   
		SET @VAR = 2
	ELSE  
		SET @VAR = 1
		
	IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)
		SET @QUARTER = 1
	ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)
		SET @QUARTER = 2
	ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)
		SET @QUARTER = 3
	ELSE 
		SET @QUARTER = 4
		
	IF(@MONTH < 4)
		SET @FINANCIALYEAR = @FINANCIALYEAR + 1
	
	SET @MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)
	
	BEGIN TRANSACTION 
		BEGIN TRY	
				DELETE FROM CHALLANMAKEPAYMENT
				DELETE FROM DEDCHALLANMAKEPAYMENT	
				
				IF(@CLIENTID = 6 OR @CLIENTID = 14)
					BEGIN	
						EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
						EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTH
					END
					
				IF(@CLIENTID = 15)
					BEGIN	
						EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
						EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTH
					END
					
				IF(@CLIENTID = 16)
					BEGIN	
						EXEC USP_TDS_ChallanSQL_PA_TMB @MONTHYEAR
					END	
								
				INSERT INTO #TEMPPARKEDAMOUNT
				SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT 
				FROM PARKEDAMOUNT 
				WHERE MONTHYEAR = @MONTHYEAR AND ISNULL(FORMTYPE,'') <> ''
				
				
				
			IF(@ACCOUNTTYPE1 = 101 OR @ACCOUNTTYPE2 = 102) 
				BEGIN 
					INSERT INTO @NONEMPLOYEE
					SELECT D.DEDUCTEEID, NE.DEDUCTEECODE 
					FROM DEDUCTEE D WITH(NOLOCK)
						INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID 
						INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
					WHERE FORMID IN (2,3) AND DD.PAYMENTMADE > 0
					GROUP BY D.DEDUCTEEID, NE.DEDUCTEECODE

					INSERT INTO @FORMS 
					SELECT 2 AS FORMID
					UNION 
					SELECT 3 AS FORMID
				END

			IF(@ACCOUNTTYPE3 = 103) 
				BEGIN 
					INSERT INTO @EMPLOYEE
					SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE 
					FROM DEDUCTEE D WITH(NOLOCK)
						INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID 
						INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
					WHERE FORMID = 1 AND DD.PAYMENTMADE > 0
					GROUP BY D.DEDUCTEEID 

					INSERT INTO @FORMS 
					SELECT 1 AS FORMID				
				END    

			SELECT * INTO #UNLINKED FROM
			(
				SELECT DEDUCTIONID 
				FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
					INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
					INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
				WHERE MONTH(DEDUCTEDDATE) = @MONTH AND DD.PAYMENTMADE > 0
					AND D.PAN LIKE 
								CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
								THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') 
								END 
					AND NOT EXISTS
					(
						SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
					)
			)U
			
			SELECT * INTO #DEDUCTEE FROM
			(
				SELECT * FROM @EMPLOYEE
				UNION 
				SELECT * FROM @NONEMPLOYEE  
			)DE
			
			
			SELECT BRANCHID 
			INTO #BRANCHES
			FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK)
				INNER JOIN DEDUCTOR D1 WITH(NOLOCK) ON BD1.DEDUCTORID = D1.DEDUCTORID 
			WHERE BD1.QUARTER = @QUARTER AND UPPER(D1.TAN) <> 'TANAPPLIED'
			GROUP BY BRANCHID 
			
		SELECT CB.BRANCHID, CB.PARENTBRANCHID, DD.FORMID,
			 CASE WHEN DD.FORMID = 1 THEN '24Q' WHEN DD.FORMID = 3 THEN '27Q' 
				  WHEN (DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI' 	
				  WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN '26QC'
				  WHEN DD.SECTIONID IN (23,24) THEN '194I' 
				ELSE TS.SECTIONNAME END AS FORMTYPE,
			SUM(DD.TOTALDEDUCTED) AS TDS 
		INTO #RESULT
		FROM COMPANYBRANCH CB WITH (NOLOCK)
			INNER JOIN DEDUCTIONDETAIL DD WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID  
			INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
			INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID = DD.SECTIONID 
			INNER JOIN #UNLINKED DCL WITH(NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID  
		WHERE MONTH(DEDUCTEDDATE) = @MONTH AND (DD.EXCLUDEINAC IS NULL OR DD.EXCLUDEINAC = 0) 	
		GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID, 
				CASE WHEN DD.FORMID = 1 THEN '24Q' WHEN DD.FORMID = 3 THEN '27Q' 
					 WHEN (DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI' 													 
					 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN '26QC'
					 WHEN DD.SECTIONID IN (23,24) THEN '194I' 
					 ELSE TS.SECTIONNAME END  
					 
		SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, RESULT.FORMTYPE, 
			RESULT.FORMID, SUM(RESULT.TDS) AS TDS 
		INTO #FINAL
		FROM   
			(  
				SELECT BRANCHID,PARENTBRANCHID,FORMID,FORMTYPE,TDS 
				FROM #RESULT
			) AS RESULT 
		GROUP BY RESULT.BRANCHID, RESULT.FORMTYPE, RESULT.FORMID, RESULT.PARENTBRANCHID


		SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, 
			FINAL.FORMID, ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT 
		INTO #SUPERFINAL
		FROM    
			(  
				SELECT BRANCHID, PARENTBRANCHID, FORMTYPE, FORMID, TDS
				FROM #FINAL
			) FINAL
				LEFT JOIN #TEMPPARKEDAMOUNT PA WITH (NOLOCK) 
					ON PA.BRANCHID = FINAL.BRANCHID 
						AND PA.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
							= FINAL.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS  
		WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0 
			AND (MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR) OR  PA.MONTHYEAR IS NULL) 

		SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE, 
			 SUPERFINAL.FORMID 
		INTO #DIFFERCMP 
		FROM
			(  
				SELECT BRANCHID, PARENTBRANCHID, FORMTYPE, 
					FORMID, BALANCEAMOUNT 
				FROM #SUPERFINAL
					
			) SUPERFINAL
				INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON SUPERFINAL.BRANCHID = CB.BRANCHID
				INNER JOIN COMPANYBRANCH CB1 WITH (NOLOCK) ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID 
		ORDER BY CB1.BRANCHID


			SELECT DD.DEDUCTEEID, DD.DEDUCTIONID, BRANCHID, DD.SECTIONID, INCOMETAX, 
				SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED, DEDUCTEDDATE, DD.FORMID, 
				QUARTER,EXCLUDEINAC,DEDUCTEECODE,
				CASE WHEN DD.FORMID = 1 THEN '24Q' 
					 WHEN DD.FORMID = 3 THEN '27Q' 
					 WHEN (DD.FORMID = 2 AND DD.SECTIONID = 5) THEN '26QI' 	
					 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND DD.SECTIONID = @194SECTIONID) THEN '26QC'
					 WHEN DD.SECTIONID IN (23,24) THEN '194I' 
					 ELSE TS.SECTIONNAME END AS FORMTYPE,
				CASE WHEN DD.FORMID = 1 THEN 103 
					 WHEN DD.FORMID = 3 THEN 101 
					 WHEN (@CLIENTID = 14 AND DD.FORMID = 2 AND DD.SECTIONID = 5 AND ENTRYTYPE = 4) THEN 101 
					 WHEN (@CLIENTID <> 14 AND DD.FORMID = 2 AND DD.SECTIONID = 5) THEN 101 
				ELSE 102 END AS ACCOUNTTYPE, 
				CASE WHEN ENTRYTYPE=4 THEN 1 ELSE 0 END ISFINACLE 
			INTO #REQDATA
			FROM DEDUCTIONDETAIL DD WITH (NOLOCK)
				INNER JOIN #UNLINKED DL ON DD.DEDUCTIONID = DL.DEDUCTIONID 
				INNER JOIN #DEDUCTEE DE ON DD.DEDUCTEEID = DE.DEDUCTEEID
				INNER JOIN TAXSECTIONS TS ON DD.SECTIONID = TS.SECTIONID
			WHERE (EXCLUDEINAC IS NULL OR EXCLUDEINAC = 0) 
				AND DD.FORMID IN (1,2,3) AND MONTH(DD.DEDUCTEDDATE) = @MONTH

		SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, ISNULL(DEDUCTEECODE, 2) AS DEDUCTEECODE,
			SUM(INCOMETAX)INCOMETAX, SUM(SURCHARGE)SURCHARGE, SUM(EDUCATIONCESS)EDUCATIONCESS, 
			SUM(TOTALDEDUCTED)TOTALDEDUCTED, MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID
			--, ISFINACLE 
		INTO #TEMPCMP
		FROM 
			(
				SELECT BRANCHNAME, BRANCHID, SECTIONID,	SECTIONNAME, DEDUCTEECODE,
					ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,
					ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS, 
					(	ISNULL(CEILING(SUM(INCOMETAX)), 0)
						+ ISNULL(CEILING(SUM(SURCHARGE)), 0)
						+ ISNULL(CEILING(SUM(EDUCATIONCESS)),0)
					) TOTALDEDUCTED, 
					--ISNULL(CEILING(SUM(TOTALDEDUCTED)), 0)
					MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID
					--, ISFINACLE
				FROM 
					(
						SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, 
							CB.BRANCHID, DD.SECTIONID,TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, 
							DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX, SUM(DD.SURCHARGE) SURCHARGE, 
							SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(TOTALDEDUCTED) TOTALDEDUCTED,
							0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID, ISFINACLE
						FROM #REQDATA DD
							INNER JOIN #BRANCHES B ON B.BRANCHID = DD.BRANCHID
							INNER JOIN TAXSECTIONS TS WITH (NOLOCK) ON DD.SECTIONID = TS.SECTIONID 
								--AND TS.FORMID = DD.FORMID	
							INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID 
							LEFT JOIN #DIFFERCMP DFL ON DD.BRANCHID = DFL.BRANCHID AND DD.FORMTYPE = DFL.FORMTYPE
						WHERE DD.TOTALDEDUCTED > 0 AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
							AND (ISNULL(CB.NOCHALLANPAY,0)=0) AND DFL.BRANCHID IS NULL 
							AND ( DD.ACCOUNTTYPE = @ACCOUNTTYPE1 
								OR DD.ACCOUNTTYPE = @ACCOUNTTYPE2 
								OR DD.ACCOUNTTYPE = @ACCOUNTTYPE3)
						GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, 
							CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID, ISFINACLE
					) RESULT --WHERE FORMID <> 1 
				GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID
				--, ISFINACLE
			) Q
		GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID
		--, ISFINACLE

		EXEC('ALTER TABLE #TEMPCMP ADD ID INT IDENTITY(1, 1)')  

		/* INSERT INTO CHALLANMAKEPAYMENT */
		INSERT INTO CHALLANMAKEPAYMENT (ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE,TOTALDEDUCTED)
		SELECT ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE, TOTALDEDUCTED
		FROM
			(
				SELECT T.ID,T.BRANCHID,SECTIONID, DEDUCTEECODE, 
					INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,
					T.FORMID, T.QUARTER
				FROM #TEMPCMP T 
			) DATA				

		UPDATE DEFAULTSETTINGS SET SET1 = NULL 
		WHERE ID = (SELECT TOP 1 ID FROM DEFAULTSETTINGS WITH(NOLOCK))		
		
		SET @RESULT = 1
		COMMIT 

	END TRY	
	BEGIN CATCH
		SET @RESULT=-1
		ROLLBACK
	END CATCH
	IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL
		DROP TABLE #RESULT
	IF OBJECT_ID('TEMPDB..#FINAL') IS NOT NULL
		DROP TABLE #FINAL
	IF OBJECT_ID('TEMPDB..#SUPERFINAL') IS NOT NULL
		DROP TABLE #SUPERFINAL
	SET NOCOUNT ON
	SELECT @RESULT	
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetTTUMDataTMB')
DROP PROCEDURE USP_TDS_GetTTUMDataTMB
GO
CREATE PROCEDURE USP_TDS_GetTTUMDataTMB 
    @MONTH INT ,     
    @ISNULL BIT,    
    @FINYEAR INT,  
    @CLIENTID INT    
AS      
	BEGIN
		--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End
		CREATE TABLE #TEMPFINAL(CHALLANID INT, MONTH INT, ENTRYTYPE INT, FORMTYPE VARCHAR(5));
			      
		IF (@MONTH < 4)    
			SET @FINYEAR = @FINYEAR + 1    
		DECLARE @SQLQUERY NVARCHAR(MAX) 
		    
		SELECT CHALLANID, MONTH(DEDUCTEDDATE) MONTH, 
			CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 4
				 WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND ENTRYTYPE <> 4 AND DD.SECTIONID NOT IN (5, 17)) THEN 1
				 WHEN (@CLIENTID = 15 AND (ENTRYTYPE = 4 OR ENTRYTYPE = 1)) THEN 4  
				 WHEN (@CLIENTID <> 1 AND (ENTRYTYPE = 4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5,17)))) THEN 4 
				 ELSE 1 END AS ENTRYTYPE
		INTO #TEMP   
		FROM DEDUCTIONDETAIL DD WITH (NOLOCK)   
			INNER JOIN DEDCHALINK DCL WITH (NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID     
		WHERE MONTH(DEDUCTEDDATE) = @MONTH AND DD.PAYMENTMADE > 0  
		GROUP BY CHALLANID, MONTH(DEDUCTEDDATE),
			(CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 4 
				  WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND ENTRYTYPE <> 4 AND DD.SECTIONID NOT IN (5, 17)) THEN 1 
			      WHEN (@CLIENTID = 15 AND (ENTRYTYPE = 4 OR ENTRYTYPE = 1)) THEN 4 
			      WHEN (@CLIENTID <> 1 AND (ENTRYTYPE = 4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5, 17)))) THEN 4
			      ELSE 1 END)
			      
		
		INSERT INTO #TEMPFINAL
		SELECT CHALLANID, MONTH, ENTRYTYPE,'' AS FORMTYPE
		FROM #TEMP 
		
		IF OBJECT_ID('TEMPDB..#TEMP') IS NOT NULL
			DROP TABLE #TEMP
				
			SET @SQLQUERY = 'SELECT ACCOUNTNO, CB.BRANCHID, CB.BRANCHCODE, PA.FORMTYPE, SUM(Q.AMOUNT) AS AMOUNT, Q.MONTH
							 INTO #FINALRESULT  
							 FROM PARKEDAMOUNT PA WITH (NOLOCK) 
								INNER JOIN 
								(    
									SELECT CD.CHALLANID, CD.QUARTER, CD.SECTIONID, CD.BRANCHID,  
									CASE WHEN CD.FORMID = 3 THEN ''27Q'' 
										 WHEN (CD.FORMID = 2 AND ENTRYTYPE = 4 AND CD.SECTIONID = 5) THEN ''26QI''  
										 WHEN CD.FORMID = 1 THEN ''24Q'' 
										 WHEN (' + CAST(@26QCALLOWED AS VARCHAR) + ' = 1 AND CD.FORMID = 2 
											AND CD.SECTIONID = ' + CAST(@194NSECTIONID AS VARCHAR) + ') THEN ''26QC''										 							      
										 ELSE TS.SECTIONNAME END AS FORMTYPE,  
										 SUM(CD.CHALLANTOTAL) AS AMOUNT, T.MONTH 
									FROM CHALLANDETAIL CD WITH (NOLOCK)   
										INNER JOIN #TEMPFINAL T ON T.CHALLANID = CD.CHALLANID 
										INNER JOIN TAXSECTIONS TS ON TS.SECTIONID = CD.SECTIONID     
									WHERE ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 '    
									IF (@ISNULL = 1)    
										SET @SQLQUERY = @SQLQUERY + ' AND BANKCHALLANNO IS NULL AND CHALLANPAIDDATE IS NULL '     
									SET @SQLQUERY = @SQLQUERY + ' GROUP BY CD.BRANCHID, CD.FORMID, CD.SECTIONID, 
												CD.CHALLANID, CD.QUARTER, T.ENTRYTYPE, T.MONTH, TS.SECTIONNAME    
								) Q    
								ON PA.FORMTYPE = Q.FORMTYPE AND PA.BRANCHID = Q.BRANCHID 
									AND SUBSTRING(CAST(MONTHYEAR AS VARCHAR), CASE WHEN LEN(MONTHYEAR) = 6 THEN 1 ELSE 0 END, 2) = Q.MONTH  
								INNER JOIN COMPANYBRANCH CB ON CB.BRANCHID = PA.BRANCHID 
							GROUP BY ACCOUNTNO, CB.BRANCHCODE, PA.FORMTYPE, CB.BRANCHID, Q.MONTH '
								

			SET @SQLQUERY = @SQLQUERY + 'SELECT * FROM  #FINALRESULT WITH(NOLOCK)' 
			  
			  --PRINT @SQLQUERY   
			EXEC SP_EXECUTESQL @SQLQUERY 								
		
		IF OBJECT_ID('TEMPDB..#TEMPFINAL') IS NOT NULL
			DROP TABLE #TEMPFINAL
	END  
GO
IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetDifferedAmountTMB')
DROP PROCEDURE USP_TDS_GetDifferedAmountTMB
GO
CREATE PROCEDURE USP_TDS_GetDifferedAmountTMB 
 @MONTH INT ,
 @BRANCHID INT,
 @FORMID INT,
 @FINYEAR INT,
 @CLIENTID INT
AS  
BEGIN  
	--194N Related Changes Begin
	DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End	 
		    
    DECLARE @VAR INT  
    IF @MONTH >9   
		SET @VAR=2  
    ELSE  
		SET @VAR=1 
	CREATE TABLE #DEDUCTIONDET (DEDUCTIONID INT,DEDUCTEEID INT,BRANCHID INT,FORMID INT,ENTRYTYPE INT,
				DEDUCTEDDATE SMALLDATETIME,SECTIONID INT,TOTALDEDUCTED NUMERIC(13,2))
    DECLARE @MONTHYEAR INT;
    DECLARE @FINANCIALYEAR INT;
    SET @FINANCIALYEAR = @FINYEAR
	IF(@MONTH < 4)
		SET @FINANCIALYEAR = @FINYEAR + 1
	
    SELECT @MONTHYEAR=CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINANCIALYEAR AS VARCHAR(8)) 
    
	IF(@CLIENTID = 6 OR @CLIENTID = 14)
		BEGIN	
			EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
			EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTH
		END
		
	IF(@CLIENTID = 15)
		BEGIN	
			EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
			EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTH
		END
		
	IF(@CLIENTID = 16)
		BEGIN	
			EXEC USP_TDS_ChallanSQL_PA_TMB @MONTHYEAR
		END	
		
	SELECT @MONTHYEAR=CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINYEAR AS VARCHAR(8))   
	
	SELECT DEDUCTIONID, DEDUCTEEID, BRANCHID, FORMID, ENTRYTYPE, DEDUCTEDDATE, SECTIONID, TOTALDEDUCTED   
	INTO #DEDTEMP 
	FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
	WHERE MONTH(DEDUCTEDDATE) = @MONTH
			
	IF(@CLIENTID = 11)
		BEGIN
			INSERT INTO #DEDUCTIONDET
			SELECT * FROM #DEDTEMP
			EXCEPT
			SELECT * FROM #DEDTEMP WHERE FORMID = 2 AND ENTRYTYPE = 1 AND SECTIONID <> 5 
		END
	ELSE IF(@CLIENTID = 5)
		BEGIN
			INSERT INTO #DEDUCTIONDET 
			SELECT *
			FROM #DEDTEMP
			WHERE FORMID IN (1, 3)
				OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
				OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
		END	
	ELSE
		BEGIN
			INSERT INTO #DEDUCTIONDET
			SELECT * FROM #DEDTEMP
		END 
		 
	IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
		DROP TABLE #DEDTEMP

	IF(@BRANCHID <> 0 AND @FORMID <> 0 )
	   BEGIN    
			SELECT CB.BRANCHID,DD.FORMID, CB.PARENTBRANCHID,
				CASE WHEN DD.FORMID=1 THEN '24Q' 
					 WHEN DD.FORMID=3 THEN '27Q' 
					 WHEN (DD.FORMID=2 AND DD.SECTIONID=5 AND DD.ENTRYTYPE=4) THEN '26QI'
					 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND DD.SECTIONID = @194NSECTIONID) THEN '26QC'   
					 WHEN DD.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME 
				END AS SECTIONID,SUM(DD.TOTALDEDUCTED) AS TDS 
			INTO #RESULT
			FROM COMPANYBRANCH CB WITH(NOLOCK) 
				INNER JOIN #DEDUCTIONDET DD  WITH(NOLOCK) ON CB.BRANCHID=DD.BRANCHID  
				INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID=DD.SECTIONID  
				LEFT JOIN NONEMPLOYEE NE WITH(NOLOCK) ON NE.DEDUCTEEID=DD.DEDUCTEEID   
				LEFT JOIN DEDCHALINK DCL WITH(NOLOCK) ON DD.DEDUCTIONID=DCL.DEDUCTIONID  
			WHERE  DCL.DEDCHALINKID IS NULL AND MONTH(DEDUCTEDDATE)=@MONTH 
			GROUP BY CB.BRANCHID,DD.SECTIONID,DD.FORMID,CB.PARENTBRANCHID, DD.ENTRYTYPE, TS.SECTIONNAME

			SELECT RESULT.BRANCHID,RESULT.FORMID, RESULT.PARENTBRANCHID,
					RESULT.SECTIONID AS FORMTYPE,SUM(RESULT.TDS) AS TDS 
			INTO #FINAL
			FROM   
				(  
					SELECT BRANCHID,FORMID, PARENTBRANCHID, SECTIONID, TDS FROM #RESULT
				) AS RESULT 
			GROUP BY RESULT.BRANCHID,RESULT.SECTIONID,RESULT.PARENTBRANCHID,RESULT.FORMID  
		    
			SELECT FINAL.BRANCHID,FINAL.FORMID,FINAL.PARENTBRANCHID,FINAL.FORMTYPE,
				ABS(ISNULL(AMOUNT,0)-TDS) AS BALANCEAMOUNT, TDS AS TOTALAMOUNT,
				PA.AMOUNT,PA.ACCOUNTNO  
			INTO #SUPERFINAL
			FROM    
				(  
					SELECT BRANCHID,FORMID, PARENTBRANCHID, FORMTYPE, TDS 
					FROM #FINAL
				) FINAL   
				LEFT JOIN PARKEDAMOUNT PA WITH(NOLOCK) 
					ON PA.BRANCHID=FINAL.BRANCHID 
						AND PA.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
							= FINAL.FORMTYPE  COLLATE SQL_Latin1_General_CP1_CI_AS    
			WHERE FINAL.BRANCHID=@BRANCHID AND FINAL.FORMID=@FORMID AND ISNULL(AMOUNT,0)-TDS < 0 AND PA.MONTHYEAR= @MONTHYEAR
				--SUBSTRING(CAST(PA.MONTHYEAR AS VARCHAR),1,@VAR)=@MONTH 
		     
			SELECT DISTINCT CB.BRANCHCODE AS [BRANCH CODE],CB.BRANCHNAME AS [BRANCH NAME] ,
					CB1.BRANCHNAME AS [PARENT BRANCH NAME],SUPERFINAL.FORMTYPE AS [FORM TYPE],
					SUPERFINAL.BALANCEAMOUNT AS [MISMATCH AMOUNT], SUPERFINAL.TOTALAMOUNT AS [TOTAL TDS AMOUNT]
			FROM  
				(  
					SELECT BRANCHID,FORMID,PARENTBRANCHID,FORMTYPE,BALANCEAMOUNT, TOTALAMOUNT,AMOUNT,ACCOUNTNO  
					FROM #SUPERFINAL
				)SUPERFINAL  
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON SUPERFINAL.BRANCHID=CB.BRANCHID  
				INNER JOIN COMPANYBRANCH CB1  WITH(NOLOCK) ON SUPERFINAL.PARENTBRANCHID=CB1.BRANCHID ORDER BY CB1.BRANCHNAME  
			-- SELECT CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINYEAR AS VARCHAR(8))
		END  
	ELSE
		BEGIN
			SELECT CB.BRANCHID,CB.PARENTBRANCHID,
				CASE WHEN DD.FORMID=1 THEN '24Q' 
					 WHEN DD.FORMID=3 THEN '27Q' 
					 WHEN (DD.FORMID=2 AND DD.SECTIONID=5 AND DD.ENTRYTYPE=4) THEN '26QI' 
					 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND DD.SECTIONID = @194NSECTIONID) THEN '26QC'  
					 WHEN DD.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME 
				END AS SECTIONID,SUM(DD.TOTALDEDUCTED) AS TDS 
			INTO #RESULT1
			FROM COMPANYBRANCH CB  
				INNER JOIN #DEDUCTIONDET DD ON CB.BRANCHID=DD.BRANCHID  
				INNER JOIN TAXSECTIONS TS ON TS.SECTIONID=DD.SECTIONID  
				LEFT JOIN NONEMPLOYEE NE ON NE.DEDUCTEEID=DD.DEDUCTEEID   
				LEFT JOIN DEDCHALINK DCL ON DD.DEDUCTIONID=DCL.DEDUCTIONID  
			WHERE  DCL.DEDCHALINKID IS NULL AND MONTH(DEDUCTEDDATE)=@MONTH
			GROUP BY CB.BRANCHID,DD.SECTIONID,DD.FORMID,CB.PARENTBRANCHID,DD.ENTRYTYPE,TS.SECTIONNAME 		
			
			SELECT RESULT.BRANCHID,RESULT.PARENTBRANCHID,
				RESULT.SECTIONID AS FORMTYPE,SUM(RESULT.TDS) AS TDS 
			INTO #FINAL1
			FROM   
				(  
					SELECT BRANCHID, PARENTBRANCHID, SECTIONID, TDS FROM #RESULT1	
				) AS RESULT GROUP BY RESULT.BRANCHID,RESULT.SECTIONID,RESULT.PARENTBRANCHID  

			SELECT FINAL.BRANCHID,FINAL.PARENTBRANCHID,FINAL.FORMTYPE,
				ABS(ISNULL(AMOUNT,0)-TDS) AS BALANCEAMOUNT,TDS AS TOTALAMOUNT,
				PA.AMOUNT,PA.ACCOUNTNO 
			INTO #SUPERFINAL1 
			FROM    
				(  
					SELECT BRANCHID, PARENTBRANCHID, FORMTYPE, TDS 
					FROM #FINAL1
				) FINAL   
				LEFT JOIN PARKEDAMOUNT PA 
					ON PA.BRANCHID=FINAL.BRANCHID 
						AND PA.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
							= FINAL.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
			WHERE ISNULL(AMOUNT,0)-TDS < 0 AND  PA.MONTHYEAR=@MONTHYEAR
			--SUBSTRING(CAST(PA.MONTHYEAR AS VARCHAR),1,@VAR)=@MONTH  
									
			SELECT DISTINCT CB.BRANCHCODE AS [BRANCH CODE],CB.BRANCHNAME AS [BRANCH NAME] ,
				CB1.BRANCHNAME AS [PARENT BRANCH NAME],SUPERFINAL.FORMTYPE AS [FORM TYPE],
				SUPERFINAL.BALANCEAMOUNT AS [MISMATCH AMOUNT], SUPERFINAL.TOTALAMOUNT AS [TOTAL TDS AMOUNT] 
			FROM  
				(  
					SELECT BRANCHID,PARENTBRANCHID,FORMTYPE, BALANCEAMOUNT,TOTALAMOUNT,AMOUNT,ACCOUNTNO 
					FROM #SUPERFINAL1 
				)SUPERFINAL  
				INNER JOIN COMPANYBRANCH CB ON SUPERFINAL.BRANCHID=CB.BRANCHID  
				INNER JOIN COMPANYBRANCH CB1 ON SUPERFINAL.PARENTBRANCHID=CB1.BRANCHID 
			ORDER BY CB1.BRANCHNAME  
		END  
		IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL
			DROP TABLE #RESULT
		IF OBJECT_ID('TEMPDB..#FINAL') IS NOT NULL
			DROP TABLE #FINAL 
		IF OBJECT_ID('TEMPDB..#SUPERFINAL') IS NOT NULL
			DROP TABLE #SUPERFINAL   
		IF OBJECT_ID('TEMPDB..#RESULT1') IS NOT NULL
			DROP TABLE #RESULT1
		IF OBJECT_ID('TEMPDB..#FINAL1') IS NOT NULL
			DROP TABLE #FINAL1 
		IF OBJECT_ID('TEMPDB..#SUPERFINAL1') IS NOT NULL
			DROP TABLE #SUPERFINAL1  
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveChallanForPaymentTMB')
DROP PROCEDURE USP_TDS_SaveChallanForPaymentTMB
GO
CREATE PROCEDURE USP_TDS_SaveChallanForPaymentTMB  
    @MONTH INT,  
    @CLIENTID INT,            
    @FINANCIALYEAR INT          
AS            
	BEGIN  
		--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End	 
		          
		DECLARE @TEMPDATE DATETIME;     
		DECLARE @RESULT INT,@CHALLANID INT,@BANKID INT,@QUARTER INT,@ALLOW92A92B INT,@MONTHYEAR VARCHAR(6);  
		DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);  
		DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);  
		CREATE TABLE #DIFFERSMP (BRANCHID INT, FORMTYPE VARCHAR(5), FORMID INT)   
		BEGIN TRANSACTION             
		BEGIN TRY         
		SET @RESULT = 0    
		SET @TEMPDATE = GETDATE() ;    
		IF(@MONTH < 4)            
			SET @FINANCIALYEAR = @FINANCIALYEAR + 1       
		
		IF (EXISTS(SELECT ID FROM PARKEDAMOUNT WITH(NOLOCK) 
				WHERE MONTHYEAR = CONVERT(INT, (CONVERT(VARCHAR, @MONTH) + CONVERT(VARCHAR, @FINANCIALYEAR))))   
			AND EXISTS(SELECT DEDUCTIONID FROM DEDUCTIONDETAIL WITH(NOLOCK) WHERE MONTH(DEDUCTEDDATE) = @MONTH))       
		BEGIN               
			SELECT @CHALLANID = ISNULL(MAX(BANKCHALLANNO) + 1, 1)   
			FROM CHALLANDETAIL WITH(NOLOCK)   
			WHERE CONVERT(VARCHAR(8), CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112)   
				AND ISAUTOGENERATED = 1             
		
		IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)            
			SET @QUARTER = 1            
		ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)            
			SET @QUARTER = 2            
		ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)            
			SET @QUARTER = 3            
		ELSE             
			SET @QUARTER = 4   
			 
		SELECT @BANKID = BANKID   
		FROM REMITTINGBANK WITH(NOLOCK)   
		WHERE BSRCODE = '6910333'    
		   
		SELECT @ALLOW92A92B = ALLOW92A92B FROM DEFAULTSETTINGS WITH(NOLOCK)              
		SET @MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)  
		          
		SELECT *  
		INTO #DEDUCTIONDET  
		FROM DEDUCTIONDETAIL WITH(NOLOCK)  
		WHERE MONTH(DEDUCTEDDATE) = @MONTH   
		
		SELECT FORMID   
		INTO #CHALLAN   
		FROM CHALLANMAKEPAYMENT CMP WITH(NOLOCK)  
			INNER JOIN TAXSECTIONS TS ON TS.SECTIONID = CMP.SECTIONID   
		GROUP BY FORMID  
		
		SELECT DEDUCTEEID  
		INTO #DEDUCTION  
		FROM #DEDUCTIONDET DD WITH(NOLOCK)   
			INNER JOIN #CHALLAN C ON DD.FORMID = C.FORMID  
		WHERE MONTH(DEDUCTEDDATE) = @MONTH  		
		GROUP BY DEDUCTEEID  
		
		SELECT * INTO #UNLINKED      
		FROM      
			(      
				SELECT DEDUCTIONID   
				FROM #DEDUCTIONDET WITH(NOLOCK)   
				WHERE MONTH(DEDUCTEDDATE) = @MONTH      
				EXCEPT      
				SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK)      
			)UD         
		IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID IN (2,3))  
			BEGIN  
				INSERT INTO @NONEMPLOYEE  
				SELECT D.DEDUCTEEID, NE.DEDUCTEECODE   
				FROM DEDUCTEE D WITH(NOLOCK)  
					INNER JOIN NONEMPLOYEE NE WITH(NOLOCK)   
						ON D.DEDUCTEEID = NE.DEDUCTEEID    
					INNER JOIN #DEDUCTION DD   
						ON D.DEDUCTEEID = DD.DEDUCTEEID  
			END  
		
		IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID = 1)  
			BEGIN   
				INSERT INTO @EMPLOYEE  
				SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE   
				FROM DEDUCTEE D WITH(NOLOCK)  
					INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID    
					INNER JOIN #DEDUCTION DD ON D.DEDUCTEEID = DD.DEDUCTEEID     
			END 
			 
		SELECT * INTO #DEDUCTEE   
		FROM  
		(  
			SELECT * FROM @EMPLOYEE  
			UNION   
			SELECT * FROM @NONEMPLOYEE    
		)DE  
		
		SELECT CB.BRANCHID, CB.PARENTBRANCHID, DD.FORMID,             
			CASE WHEN DD.FORMID = 1 THEN '24Q'              
				WHEN (DD.FORMID = 3) THEN '27Q'             
				WHEN (DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'  
				WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC'    
				WHEN DD.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END AS SECTIONID,            
			SUM(DD.TOTALDEDUCTED) AS TDS   
		INTO #RESULT  
		FROM #DEDUCTIONDET DD WITH(NOLOCK)             
			INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID = DD.SECTIONID   
			INNER JOIN #DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID             
			INNER JOIN #UNLINKED DCL WITH(NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID     
			INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = DD.BRANCHID              
		WHERE MONTH(DEDUCTEDDATE) = @MONTH            
		GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID,   
		CASE WHEN DD.FORMID = 1 THEN '24Q'              
			WHEN (DD.FORMID = 3) THEN '27Q'             
			WHEN (DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI' 
			WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC'   
			WHEN DD.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END  
			
		SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, RESULT.SECTIONID AS FORMTYPE, 
			RESULT.FORMID, SUM(RESULT.TDS) AS TDS   
		INTO #FINAL
		FROM  
			(        
				SELECT BRANCHID, PARENTBRANCHID, FORMID, SECTIONID, TDS FROM #RESULT
				
			) AS RESULT GROUP BY RESULT.BRANCHID, RESULT.SECTIONID, RESULT.FORMID, RESULT.PARENTBRANCHID 
		
		SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, FINAL.FORMID,
			ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT  
		INTO #SUPERFINAL 
		FROM   
			(              
				 SELECT BRANCHID, PARENTBRANCHID, FORMTYPE, FORMID, TDS 
				 FROM #FINAL          
			) FINAL            
			LEFT JOIN PARKEDAMOUNT PA WITH(NOLOCK)   
				ON PA.BRANCHID = FINAL.BRANCHID   
			AND PA.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS  
				= FINAL.FORMTYPE  COLLATE SQL_Latin1_General_CP1_CI_AS              
		WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0   
			AND (MONTHYEAR = CAST(@MONTH AS VARCHAR) 
				+ CAST(@FINANCIALYEAR AS VARCHAR) OR  PA.MONTHYEAR IS NULL) 
				
		
		INSERT INTO #DIFFERSMP  
		SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE, SUPERFINAL.FORMID    
		FROM  
			(              
				SELECT BRANCHID, PARENTBRANCHID, FORMTYPE, FORMID,BALANCEAMOUNT  
				FROM #SUPERFINAL            
			) SUPERFINAL              
			INNER JOIN COMPANYBRANCH CB WITH(NOLOCK)   
				ON SUPERFINAL.BRANCHID = CB.BRANCHID            
			INNER JOIN COMPANYBRANCH CB1 WITH(NOLOCK)   
				ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID             
		ORDER BY CB1.BRANCHID  
		           
		IF ((SELECT COUNT(BRANCHID) FROM #DIFFERSMP)= 0)  
			BEGIN  
				INSERT INTO #DIFFERSMP (BRANCHID, FORMTYPE, FORMID) VALUES(0, 'ABC', 0)  
			END  
			
		SELECT BRANCHNAME, Q.BRANCHID, Q.SECTIONID, SECTIONNAME, ISNULL(Q.DEDUCTEECODE, 1) AS DEDUCTEECODE,             
			INCOMETAX, SURCHARGE, EDUCATIONCESS, Q.TOTALDEDUCTED, HASPARTPAYMENT, Q.QUARTER, FORMID  
		INTO #TEMPSMP            
		FROM             
		(            
			SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, DEDUCTEECODE,             
				ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,            
				ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS,   
				(ISNULL(CEILING(SUM(INCOMETAX)), 0) 
					+ ISNULL(CEILING(SUM(SURCHARGE)), 0) 
					+ ISNULL(CEILING(SUM(EDUCATIONCESS)),0)) TOTALDEDUCTED,  
				MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID  
			FROM             
			(            
				SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, CB.BRANCHID, DD.SECTIONID,            
				TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, D.DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX,            
				SUM(DD.SURCHARGE) SURCHARGE, SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(DD.TOTALDEDUCTED) TOTALDEDUCTED,            
				0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID  
				FROM             
					(            
						SELECT DEDUCTEEID, DEDUCTIONID, BRANCHID, DD.SECTIONID, 
							INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,   
							DEDUCTEDDATE, DD.FORMID, QUARTER,            
							CASE WHEN DD.FORMID = 1 THEN '24Q'             
								WHEN (DD.FORMID = 3) THEN '27Q'              
								WHEN (DD.FORMID=2 AND DD.SECTIONID=5) THEN '26QI' 
								WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND DD.SECTIONID = @194NSECTIONID) THEN '26QC'     
								WHEN DD.SECTIONID IN (23,24) THEN '194I' ELSE TS.SECTIONNAME END AS FORMTYPE  
						FROM #DEDUCTIONDET DD WITH(NOLOCK)   
						INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON  DD.SECTIONID = TS.SECTIONID        
					) DD            
				INNER JOIN #UNLINKED DL WITH(NOLOCK)   
					ON DD.DEDUCTIONID = DL.DEDUCTIONID    
				INNER JOIN #DEDUCTEE D WITH(NOLOCK)   
					ON D.DEDUCTEEID = DD.DEDUCTEEID       
				INNER JOIN TAXSECTIONS TS WITH(NOLOCK)   
					ON DD.SECTIONID = TS.SECTIONID AND TS.FORMID = DD.FORMID       
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK)   
					ON CB.BRANCHID = DD.BRANCHID             
				LEFT JOIN #DIFFERSMP DFL WITH(NOLOCK)   
					ON DD.BRANCHID = DFL.BRANCHID 
						AND DD.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS   
						= DFL.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS             
			WHERE DD.TOTALDEDUCTED > 0   
			AND MONTH(DD.DEDUCTEDDATE) = @MONTH            
			AND CB.BRANCHID IN  (  
			SELECT BRANCHID   
			FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK)   
			INNER JOIN DEDUCTOR D1 WITH(NOLOCK)   
				ON BD1.DEDUCTORID = D1.DEDUCTORID             
			WHERE BD1.QUARTER = @QUARTER   
			AND UPPER(D1.TAN) <> 'TANAPPLIED'  
				)  
			AND DFL.BRANCHID IS NULL             
			GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID  
		) RESULT  
		GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID  
		) Q            
		INNER JOIN CHALLANMAKEPAYMENT CMP WITH(NOLOCK)             
		ON Q.BRANCHID = CMP.BRANCHID   
			AND Q.SECTIONID = CMP.SECTIONID   
			AND Q.QUARTER = CMP.QUARTER   
			AND Q.DEDUCTEECODE = CMP.DEDUCTEECODE           
			AND Q.TOTALDEDUCTED = CMP.TOTALDEDUCTED     
			    
		EXEC('ALTER TABLE #TEMPSMP ADD CHALLANID INT IDENTITY(' + @CHALLANID + ', 1)')              
		/* INSERT INTO CHALLAN*/            
		INSERT INTO CHALLANDETAIL (SERIALNO, BRANCHID, QUARTER, FORMID, ERETURNID, LINKDEDCOUNT, ISNILCHALLAN, ISUPDATECHALLAN, MODEOFPAYMENT,             
		BANKCHALLANNO, LASTBANKCHALLANNO, TRNVOUCHERNO, LASTTRNVOUCHERNO, BANKID, LASTBANKID, CHALLANPAIDDATE,             
						LASTCHALLANPAIDDATE, DATEOFDEBIT, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, INTEREST, PENALTY, OTHERS, CHALLANTOTAL,             
						LASTCHALLANTOTAL, ISCOMPANY, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, TRANREFNO, TVRECEIPTNUMBER, ISAUTOGENERATED,             
						ISOLTASINCLUDED, TEMPDATE, ISTTUMINCLUDED, MINORHEAD)                                  
		SELECT (NUM + ISNULL(SERIALNO, 0)) AS SERIALNO, BRANCHID, QUARTER, FORMID, 0 AS ERETURNID, 0 AS LINKEDCOUNT, 'N' AS ISNILLCHALLAN,            
		0 AS ISUPDATECHALLAN, 2 AS MODEOFPAYMENT, CHALLANID AS BANKCHALLANNO, CHALLANID AS LASTBANKCHALLANNO, '' AS TRNVOUCHERNO,            
		'' AS LASTTRNVOUCHERNO, @BANKID AS BANKID, @BANKID AS LASTBANKID, @TEMPDATE AS CHALLANPAIDDATE, GETDATE() AS CHALLANPAIDDATE,            
		NULL AS DATEOFDEBIT, CASE WHEN SECTIONID IN (23,24) THEN 15 ELSE SECTIONID END AS SECTIONID, INCOMETAX, SURCHARGE,   
		EDUCATIONCESS, 0 INTEREST, 0 PENALTY, 0 OTHERS, TOTALDEDUCTED AS CHALLANTOTAL,            
		TOTALDEDUCTED AS LASTCHALLANTOTAL, CASE WHEN DEDUCTEECODE = 2 THEN 0 ELSE 1 END AS ISCOMPANY,            
		'' CHEQUENO, NULL CHEQUEDATE, '' CHEQUEDRAWNON, '' TRANREFNO, '' TVRECEIPTNUMBER, 1 AS ISAUTOGENERATED,             
		0 AS ISOLTASINCLUDED, @TEMPDATE, 0 AS ISTTUMINCLUDED, 200 AS MINORHEAD        
		FROM            
		(            
			SELECT ROW_NUMBER() OVER (PARTITION BY T.BRANCHID, T.FORMID, T.QUARTER ORDER BY T.BRANCHID) AS NUM,            
				SERIALNO, CHALLANID, T.BRANCHID, SECTIONID, DEDUCTEECODE, INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,            
				T.FORMID, T.QUARTER             
			FROM #TEMPSMP T   
				LEFT JOIN   
				(      
					SELECT BRANCHID, FORMID, QUARTER, MAX(SERIALNO) AS SERIALNO   
					FROM CHALLANDETAIL WITH(NOLOCK)             
					GROUP BY BRANCHID, FORMID, QUARTER             
				) Y            
					ON T.BRANCHID = Y.BRANCHID AND T.FORMID = Y.FORMID AND T.QUARTER = Y.QUARTER            
		) DATA            
		/*SELECT UNLINKED DEDUCTIONS FOR GIVEN SECTIONID AND LINK IT FOR GIVEN CHALLNID*/            
		INSERT INTO DEDCHALINK(DEDUCTIONID, CHALLANID, BRANCHID)             
		SELECT DISTINCT DD.DEDUCTIONID, CHALL.CHALLANID, DD.BRANCHID AS BRANCHID            
		FROM             
		(            
		SELECT DEDUCTIONID, FORMID, TOTALDEDUCTED, DEDUCTEEID, SECTIONID, BRANCHID, DEDUCTEDDATE  
		FROM #DEDUCTIONDET WITH(NOLOCK)              
		WHERE MONTH(DEDUCTEDDATE) = @MONTH            
		) DD             
		INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID=DD.DEDUCTEEID             
		LEFT JOIN NONEMPLOYEE NE WITH(NOLOCK) ON NE.DEDUCTEEID = DD.DEDUCTEEID             
		LEFT JOIN DEDCHALINK CD WITH(NOLOCK) ON DD.DEDUCTIONID = CD.DEDUCTIONID AND CD.BRANCHID = DD.BRANCHID            
		INNER JOIN #TEMPSMP T WITH(NOLOCK) ON DD.BRANCHID = T.BRANCHID AND DD.SECTIONID = T.SECTIONID   
		AND (ISNULL(NE.DEDUCTEECODE,2) = T.DEDUCTEECODE)  
		LEFT JOIN #DIFFERSMP DL WITH(NOLOCK) ON DD.BRANCHID = DL.BRANCHID AND DD.FORMID = DL.FORMID            
		INNER JOIN             
		(            
		SELECT CHALLANID, BANKCHALLANNO, CHALLANPAIDDATE FROM CHALLANDETAIL  WITH(NOLOCK)            
		WHERE CONVERT(VARCHAR(8),CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112)   
			AND ISAUTOGENERATED = 1  
		) CHALL ON CHALL.BANKCHALLANNO = T.CHALLANID            
		WHERE DD.TOTALDEDUCTED > 0   
		AND MONTH(DD.DEDUCTEDDATE) = @MONTH   
		AND CD.DEDCHALINKID IS NULL             
		SET @RESULT = 1            
		END  
		COMMIT            
		END TRY             
		BEGIN CATCH            
		SET @RESULT = -1            
		ROLLBACK            
		END CATCH                      
		IF (@RESULT = 1)            
		BEGIN            
		UPDATE CHALLANDETAIL SET CHALLANPAIDDATE = NULL, LASTCHALLANPAIDDATE = NULL, BANKCHALLANNO = NULL,  
		LASTBANKCHALLANNO = NULL   
		WHERE ISAUTOGENERATED = 1 AND TEMPDATE = @TEMPDATE            
		DELETE FROM CHALLANMAKEPAYMENT            
		END            
		SELECT @RESULT 
		           
		IF OBJECT_ID('TEMPDB..#DEDUCTIONDET') IS NOT NULL  
			DROP TABLE #DEDUCTIONDET  
		IF OBJECT_ID('TEMPDB..#CHALLAN') IS NOT NULL  
			DROP TABLE #CHALLAN  
		IF OBJECT_ID('TEMPDB..#DEDUCTION') IS NOT NULL  
			DROP TABLE #DEDUCTION  
		IF OBJECT_ID('TEMPDB..#DEDUCTEE') IS NOT NULL  
			DROP TABLE #DEDUCTEE   
		IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL  
			DROP TABLE #UNLINKED  
		IF OBJECT_ID('TEMPDB..#DIFFERSMP') IS NOT NULL  
			DROP TABLE #DIFFERSMP  
		IF OBJECT_ID('TEMPDB..#TEMPSMP') IS NOT NULL  
			DROP TABLE #TEMPSMP 
		IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL
			DROP TABLE #RESULT
		IF OBJECT_ID('TEMPDB..#FINAL') IS NOT NULL
			DROP TABLE #FINAL 
		IF OBJECT_ID('TEMPDB..#SUPERFINAL') IS NOT NULL
			DROP TABLE #SUPERFINAL 	 
	END 
GO  


IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetDifferedAmount')
DROP PROCEDURE USP_TDS_GetDifferedAmount
GO
CREATE PROCEDURE USP_TDS_GetDifferedAmount 
 @MONTH INT ,
 @BRANCHID INT,
 @FORMID INT,
 @FINYEAR INT,
 @CLIENTID INT
AS  
BEGIN  
	--194N Related Changes Begin
	DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
		OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
		OR @CLIENTID = 14)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End	 
		    
    DECLARE @VAR INT  
    IF @MONTH >9   
		SET @VAR=2  
    ELSE  
		SET @VAR=1 
	CREATE TABLE #DEDUCTIONDET (DEDUCTIONID INT,DEDUCTEEID INT,BRANCHID INT,FORMID INT,ENTRYTYPE INT,
				DEDUCTEDDATE SMALLDATETIME,SECTIONID INT,TOTALDEDUCTED NUMERIC(13,2))
    DECLARE @MONTHYEAR INT;
    DECLARE @FINANCIALYEAR INT;
    SET @FINANCIALYEAR = @FINYEAR
	IF(@MONTH < 4)
		SET @FINANCIALYEAR = @FINYEAR + 1
	
    SELECT @MONTHYEAR=CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINANCIALYEAR AS VARCHAR(8)) 
    
	IF(@CLIENTID = 6 OR @CLIENTID = 14 OR @CLIENTID = 16)
		BEGIN	
			EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
			EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTH
		END
		
	IF(@CLIENTID = 15)
		BEGIN	
			EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
			EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTH
		END
	
		
	SELECT @MONTHYEAR=CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINYEAR AS VARCHAR(8))   
	
	SELECT DEDUCTIONID, DEDUCTEEID, BRANCHID, FORMID, ENTRYTYPE, DEDUCTEDDATE, SECTIONID, TOTALDEDUCTED   
	INTO #DEDTEMP 
	FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
	WHERE MONTH(DEDUCTEDDATE) = @MONTH
			
	IF(@CLIENTID = 11)
		BEGIN
			INSERT INTO #DEDUCTIONDET
			SELECT * FROM #DEDTEMP
			EXCEPT
			SELECT * FROM #DEDTEMP 
			WHERE ENTRYTYPE <> 4
			--FORMID = 2 AND ENTRYTYPE = 1 AND SECTIONID <> 5 
		END
	ELSE IF(@CLIENTID = 5)
		BEGIN
			INSERT INTO #DEDUCTIONDET 
			SELECT *
			FROM #DEDTEMP
			WHERE FORMID IN (1, 3)
				OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
				OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
		END	
	ELSE
		BEGIN
			INSERT INTO #DEDUCTIONDET
			SELECT * FROM #DEDTEMP
		END 
		 
	IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
		DROP TABLE #DEDTEMP
	
	IF(@BRANCHID <> 0 AND @FORMID <> 0 )
	   BEGIN         
			SELECT DISTINCT CB.BRANCHCODE AS [BRANCH CODE],CB.BRANCHNAME AS [BRANCH NAME] ,
					CB1.BRANCHNAME AS [PARENT BRANCH NAME],SUPERFINAL.FORMTYPE AS [FORM TYPE],
					SUPERFINAL.BALANCEAMOUNT AS [MISMATCH AMOUNT], SUPERFINAL.TOTALAMOUNT AS [TOTAL TDS AMOUNT]
			FROM  
				(  
					SELECT FINAL.BRANCHID,FINAL.FORMID,FINAL.PARENTBRANCHID,FINAL.FORMTYPE,
						ABS(ISNULL(AMOUNT,0)-TDS) AS BALANCEAMOUNT, TDS AS TOTALAMOUNT,
						PA.AMOUNT,PA.ACCOUNTNO  
					FROM    
						(  
							SELECT RESULT.BRANCHID,RESULT.FORMID, RESULT.PARENTBRANCHID,
									RESULT.SECTIONID AS FORMTYPE,SUM(RESULT.TDS) AS TDS 
							FROM   
								(  
									SELECT CB.BRANCHID,DD.FORMID, CB.PARENTBRANCHID,
										CASE WHEN DD.FORMID=1 THEN '24Q' 
											 WHEN DD.FORMID=3 THEN '27Q' 
											 WHEN (DD.FORMID=2 AND TS.SECTIONID=5 AND DD.ENTRYTYPE=4) THEN '26QI'
											 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC'   
											 ELSE '26QV' 
										END AS SECTIONID,SUM(DD.TOTALDEDUCTED) AS TDS 
									FROM COMPANYBRANCH CB WITH(NOLOCK) 
										INNER JOIN #DEDUCTIONDET DD  WITH(NOLOCK) ON CB.BRANCHID=DD.BRANCHID  
										INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID=DD.SECTIONID  
										LEFT JOIN NONEMPLOYEE NE WITH(NOLOCK) ON NE.DEDUCTEEID=DD.DEDUCTEEID   
										LEFT JOIN DEDCHALINK DCL WITH(NOLOCK) ON DD.DEDUCTIONID=DCL.DEDUCTIONID  
									WHERE  DCL.DEDCHALINKID IS NULL AND MONTH(DEDUCTEDDATE)=@MONTH 
									GROUP BY CB.BRANCHID,TS.SECTIONID,DD.FORMID,CB.PARENTBRANCHID, DD.ENTRYTYPE
								) AS RESULT 
						    GROUP BY RESULT.BRANCHID,RESULT.SECTIONID,RESULT.PARENTBRANCHID,RESULT.FORMID  
						) FINAL   
						LEFT JOIN PARKEDAMOUNT PA WITH(NOLOCK) ON PA.BRANCHID=FINAL.BRANCHID AND PA.FORMTYPE=FINAL.FORMTYPE   
					WHERE FINAL.BRANCHID=@BRANCHID AND FINAL.FORMID=@FORMID AND ISNULL(AMOUNT,0)-TDS < 0 AND PA.MONTHYEAR= @MONTHYEAR
						--SUBSTRING(CAST(PA.MONTHYEAR AS VARCHAR),1,@VAR)=@MONTH  
				)SUPERFINAL  
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON SUPERFINAL.BRANCHID=CB.BRANCHID  
				INNER JOIN COMPANYBRANCH CB1  WITH(NOLOCK) ON SUPERFINAL.PARENTBRANCHID=CB1.BRANCHID ORDER BY CB1.BRANCHNAME  
			-- SELECT CAST(@MONTH AS VARCHAR(8))  +  CAST(@FINYEAR AS VARCHAR(8))
		END  
	ELSE
		BEGIN
			SELECT DISTINCT CB.BRANCHCODE AS [BRANCH CODE],CB.BRANCHNAME AS [BRANCH NAME] ,
				CB1.BRANCHNAME AS [PARENT BRANCH NAME],SUPERFINAL.FORMTYPE AS [FORM TYPE],
				SUPERFINAL.BALANCEAMOUNT AS [MISMATCH AMOUNT], SUPERFINAL.TOTALAMOUNT AS [TOTAL TDS AMOUNT] 
			FROM  
				(  
					SELECT FINAL.BRANCHID,FINAL.PARENTBRANCHID,FINAL.FORMTYPE,
						ABS(ISNULL(AMOUNT,0)-TDS) AS BALANCEAMOUNT,TDS AS TOTALAMOUNT,
						PA.AMOUNT,PA.ACCOUNTNO  
					FROM    
						(  
							SELECT RESULT.BRANCHID,RESULT.PARENTBRANCHID,
								RESULT.SECTIONID AS FORMTYPE,SUM(RESULT.TDS) AS TDS 
							FROM   
								(  
									SELECT CB.BRANCHID,CB.PARENTBRANCHID,
										CASE WHEN DD.FORMID=1 THEN '24Q' 
											 WHEN DD.FORMID=3 THEN '27Q' 
											 WHEN (DD.FORMID=2 AND TS.SECTIONID=5 AND DD.ENTRYTYPE=4) THEN '26QI' 
											 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC'  
											 ELSE '26QV' 
										END AS SECTIONID,SUM(DD.TOTALDEDUCTED) AS TDS 
									FROM COMPANYBRANCH CB  
										INNER JOIN #DEDUCTIONDET DD ON CB.BRANCHID=DD.BRANCHID  
										INNER JOIN TAXSECTIONS TS ON TS.SECTIONID=DD.SECTIONID  
										LEFT JOIN NONEMPLOYEE NE ON NE.DEDUCTEEID=DD.DEDUCTEEID   
										LEFT JOIN DEDCHALINK DCL ON DD.DEDUCTIONID=DCL.DEDUCTIONID  
									WHERE  DCL.DEDCHALINKID IS NULL AND MONTH(DEDUCTEDDATE)=@MONTH
									GROUP BY CB.BRANCHID,TS.SECTIONID,DD.FORMID,CB.PARENTBRANCHID,DD.ENTRYTYPE 
								) AS RESULT GROUP BY RESULT.BRANCHID,RESULT.SECTIONID,RESULT.PARENTBRANCHID  
						) FINAL   
						LEFT JOIN PARKEDAMOUNT PA ON PA.BRANCHID=FINAL.BRANCHID AND PA.FORMTYPE=FINAL.FORMTYPE  
					WHERE ISNULL(AMOUNT,0)-TDS < 0 AND  PA.MONTHYEAR=@MONTHYEAR
					--SUBSTRING(CAST(PA.MONTHYEAR AS VARCHAR),1,@VAR)=@MONTH  
				)SUPERFINAL  
				INNER JOIN COMPANYBRANCH CB ON SUPERFINAL.BRANCHID=CB.BRANCHID  
				INNER JOIN COMPANYBRANCH CB1 ON SUPERFINAL.PARENTBRANCHID=CB1.BRANCHID 
			ORDER BY CB1.BRANCHNAME  
		END      
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetDeductionMismatchDetail')
DROP PROCEDURE USP_TDS_GetDeductionMismatchDetail
GO
CREATE PROCEDURE USP_TDS_GetDeductionMismatchDetail 
    @MONTHID INT,  
    @FINYEAR INT,
    @CLIENTID INT  
AS  
    BEGIN 
		
	   	--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
			OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
			OR @CLIENTID = 14)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End	
				 
	   DECLARE @MONTHYEAR VARCHAR(10);
	   CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT, BRANCHID INT, FORMTYPE VARCHAR(10),
		  ACCOUNTNO VARCHAR(20), AMOUNT NUMERIC(17,2))
	   CREATE TABLE #TEMPFORMTYPE(FORMTYPE VARCHAR(10), BRANCHID INT, DEDCOUNT INT, DEDAMOUNT NUMERIC(17,2)) 
	   CREATE TABLE #UNLINKED (DEDUCTIONID INT)
	   IF(@MONTHID < 4)
			BEGIN	  
				SET @MONTHYEAR = CAST(@MONTHID AS VARCHAR) + CAST((@FINYEAR + 1) AS VARCHAR) 
			END 
		ELSE
			BEGIN  
				SET @MONTHYEAR = CAST(@MONTHID AS VARCHAR) + CAST(@FINYEAR AS VARCHAR) 
			END
		IF(@CLIENTID = 6 OR @CLIENTID = 14 OR @CLIENTID = 16)
			BEGIN	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
				EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTHID
			END
			
		IF(@CLIENTID = 15)
			BEGIN	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
				EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTHID
			END
	   IF(@CLIENTID = -1)
		  BEGIN
			 INSERT INTO #TEMPPARKEDAMOUNT 
			 EXEC USP_TDS_GETREMAININGPARKEDAMOUNT @MONTHID,@MONTHYEAR
		  END
	   ELSE
		  BEGIN
			 INSERT INTO #TEMPPARKEDAMOUNT
			 SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT 
			 FROM PARKEDAMOUNT WITH(NOLOCK) WHERE MONTHYEAR = @MONTHYEAR
		  END
	   
	  SELECT DD.DEDUCTIONID, DD.FORMID, DD.ENTRYTYPE, DD.SECTIONID 
	  INTO #DEDTEMP 
	  FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
		 INNER JOIN DEDUCTEE D WITH(NOLOCK) 
			ON D.DEDUCTEEID = DD.DEDUCTEEID
	  WHERE MONTH(DEDUCTEDDATE) = @MONTHID 
		 AND D.PAN LIKE CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
			THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END AND
	  NOT EXISTS
	  (
		 SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
	  )
		
	  IF(@CLIENTID = 11)
		BEGIN
			INSERT INTO #UNLINKED
			SELECT DEDUCTIONID FROM #DEDTEMP
			EXCEPT
			SELECT DEDUCTIONID FROM #DEDTEMP 
			WHERE ENTRYTYPE <> 4
				--FORMID = 2 
				--AND ENTRYTYPE = 1 
				--AND SECTIONID <> 5 
		END
	 ELSE IF(@CLIENTID = 5)
		BEGIN
			INSERT INTO #UNLINKED 
			SELECT DEDUCTIONID
			FROM #DEDTEMP
			WHERE FORMID IN (1, 3)
				OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
				OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
		END	
	  ELSE
		BEGIN
			INSERT INTO #UNLINKED
			SELECT DEDUCTIONID FROM #DEDTEMP
		END  
		
		IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
			DROP TABLE #DEDTEMP
		
					
		IF (@CLIENTID <> 7)
		BEGIN	
			IF(@26QCALLOWED = 1)
			BEGIN
				IF(@CLIENTID = 1)
					BEGIN
						INSERT INTO #TEMPFORMTYPE
						SELECT * FROM
						(
							SELECT '26QC' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
							FROM DEDUCTIONDETAIL D WITH(NOLOCK)
							  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
							WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
							GROUP BY BRANCHID
							UNION
							SELECT '26QVS' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
							FROM DEDUCTIONDETAIL D WITH(NOLOCK)
							  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
							WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 
							  AND ENTRYTYPE = 4
							GROUP BY BRANCHID
							UNION
							SELECT '26QV' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
							FROM DEDUCTIONDETAIL D WITH(NOLOCK)
							  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
							WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 
							  AND ENTRYTYPE <> 4
							GROUP BY BRANCHID 
						)T
					END
				 ELSE
					BEGIN					
						INSERT  INTO #TEMPFORMTYPE	
						SELECT '26QC' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
						FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
						WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
						GROUP BY BRANCHID
						UNION	
						SELECT '26QV' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
						FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						   INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
						 WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 
						GROUP BY BRANCHID 
					END
			END
			ELSE
			BEGIN						
				 IF(@CLIENTID = 1)
					BEGIN
						INSERT INTO #TEMPFORMTYPE
						SELECT * FROM
						(
							SELECT '26QVS' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
							FROM DEDUCTIONDETAIL D WITH(NOLOCK)
							  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
							WHERE SECTIONID <> 5 AND FORMID = 2 
							  AND ENTRYTYPE = 4
							GROUP BY BRANCHID
							UNION
							SELECT '26QV' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
							FROM DEDUCTIONDETAIL D WITH(NOLOCK)
							  INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
							WHERE SECTIONID <> 5 AND FORMID = 2 
							  AND ENTRYTYPE <> 4
							GROUP BY BRANCHID 
						)T
					END
				 ELSE
					BEGIN
						INSERT  INTO #TEMPFORMTYPE	
						SELECT '26QV' FORMTYPE, D.BRANCHID, COUNT(D.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT
						FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						   INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
						 WHERE SECTIONID <> 5 AND FORMID = 2 
						GROUP BY BRANCHID 
					END
			 END
			 
			 SELECT '26QI' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 INTO #DEDAVB  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID  
			 WHERE 
				SECTIONID = 5 AND ENTRYTYPE = 4 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID  
			 UNION  
			 SELECT '27Q' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID   
			 WHERE
				FORMID = 3 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID
			 UNION  
			 SELECT FORMTYPE, BRANCHID,DEDCOUNT,DEDAMOUNT FROM #TEMPFORMTYPE 
			 UNION  
			 SELECT '24Q' FORMTYPE, BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID   
			 WHERE
				FORMID = 1 AND (EXCLUDEINAC = 0 OR EXCLUDEINAC IS NULL)  
			 GROUP BY BRANCHID  
			 			 
			 SELECT CB.BRANCHNAME + ' (' + CB.BRANCHCODE + ')' AS BRANCH, 
				D.FORMTYPE, D.DEDCOUNT, D.DEDAMOUNT, P.AMOUNT, (D.DEDAMOUNT - P.AMOUNT) DIFFAMOUNT
			 FROM #DEDAVB D  
				INNER JOIN #TEMPPARKEDAMOUNT P WITH(NOLOCK)  
				    ON D.BRANCHID = P.BRANCHID AND D.FORMTYPE = P.FORMTYPE   
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = D.BRANCHID  
			 WHERE P.MONTHYEAR = @MONTHYEAR AND ((D.DEDAMOUNT > P.AMOUNT) OR (FLOOR(P.AMOUNT) > P.AMOUNT))
		  END
	   ELSE
		  BEGIN
			 DECLARE @BGLID INT;
			 SELECT TOP 1 @BGLID = BGLCODEID FROM TDSRATE WHERE BGLCODE = '57038'
			 SELECT DEDUCTIONID INTO #BGUPD FROM DEDUCTIONDETAIL WITH(NOLOCK)
			 WHERE FORMID = 1 
				AND MONTH(PAYMENTDATE) = @MONTHID
				AND ISNULL(BGLCODEID, 0) <> @BGLID
				AND SECTIONID IN (1, 2, 25)
				
			 UPDATE DEDUCTIONDETAIL 
			    SET BGLCODEID = @BGLID
			    WHERE DEDUCTIONID IN (SELECT DEDUCTIONID FROM #BGUPD)
			 SELECT * INTO #TDSRATE FROM TDSRATE WITH(NOLOCK)
			 
			 UPDATE DEDUCTIONDETAIL 
			 SET BGLCODEID = (SELECT ISNULL(MAX(BGLCODEID),-1) FROM #TDSRATE WITH(NOLOCK) WHERE BGLCODE = 55801) 
			 FROM DEDUCTIONDETAIL DD 
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID
			 WHERE MONTH(DEDUCTEDDATE) = @MONTHID AND ((SECTIONID = 5 AND ENTRYTYPE = 4) OR (SECTIONID = 17 AND ENTRYTYPE = 4))
			 
			 UPDATE DEDUCTIONDETAIL SET BGLCODEID = (SELECT ISNULL(MAX(BGLCODEID),-1) FROM #TDSRATE WITH(NOLOCK) WHERE BGLCODE = 56685) 
			 FROM DEDUCTIONDETAIL DD INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID
			 WHERE MONTH(DEDUCTEDDATE) = @MONTHID AND (SECTIONID = 17 AND ENTRYTYPE <> 4)
			 
			 SELECT BGLCODE, DD.BRANCHID, COUNT(DD.DEDUCTIONID) DEDCOUNT, SUM(TOTALDEDUCTED) DEDAMOUNT  
			 INTO #DEDAVBL  
			 FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON DD.DEDUCTIONID = UL.DEDUCTIONID  
				INNER JOIN #TDSRATE TR ON DD.BGLCODEID = TR.BGLCODEID
			 GROUP BY BGLCODE,DD.BRANCHID 
			 SELECT CB.BRANCHNAME + ' (' + CB.BRANCHCODE + ')' AS BRANCH, 
				D.BGLCODE AS FORMTYPE, D.DEDCOUNT, D.DEDAMOUNT, 
				ISNULL(P.AMOUNT,0)AMOUNT, (D.DEDAMOUNT - ISNULL(P.AMOUNT,0)) DIFFAMOUNT
			 FROM #DEDAVBL D  
				LEFT JOIN #TEMPPARKEDAMOUNT P WITH(NOLOCK)  
				    ON D.BRANCHID = P.BRANCHID AND D.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS = P.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS   
				INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = D.BRANCHID  
			 WHERE ISNULL(P.MONTHYEAR,@MONTHYEAR) = @MONTHYEAR 
				AND ((D.DEDAMOUNT > ISNULL(P.AMOUNT,0)) OR (FLOOR(ISNULL(P.AMOUNT,0)) > ISNULL(P.AMOUNT,0)))
		  END
	   IF OBJECT_ID('TEMPDB..#TEMPPARKEDAMOUNT') IS NOT NULL
		  DROP TABLE #TEMPPARKEDAMOUNT  
	   IF OBJECT_ID('TEMPDB..#TEMPFORMTYPE') IS NOT NULL
		  DROP TABLE #TEMPFORMTYPE
	   IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL
		  DROP TABLE #UNLINKED
	   IF OBJECT_ID('TEMPDB..#DEDAVB') IS NOT NULL
		  DROP TABLE #DEDAVB
	   IF OBJECT_ID('TEMPDB..#TDSRATE') IS NOT NULL
		  DROP TABLE #TDSRATE
	   IF OBJECT_ID('TEMPDB..#DEDAVBL') IS NOT NULL
		  DROP TABLE #DEDAVBL
	   IF OBJECT_ID('TEMPDB..#BGUPD') IS NOT NULL
		  DROP TABLE #BGUPD
    END   
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GETREQUIREDAMOUNT')
DROP PROCEDURE USP_TDS_GETREQUIREDAMOUNT
GO
CREATE PROCEDURE USP_TDS_GETREQUIREDAMOUNT 
@MONTHID INT,
@CLIENTID INT
AS
	BEGIN
   	--194N Related Changes Begin
	DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
		OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
		OR @CLIENTID = 14)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End	
			
	CREATE TABLE #TEMP(FORMTYPE VARCHAR(10),BRANCHID INT, DEDTOTAL NUMERIC(17,2), DEDCOUNT INT)
	CREATE TABLE #UNLINKED(DEDUCTIONID INT)
	

	SELECT DD.DEDUCTIONID, DD.FORMID, DD.ENTRYTYPE, DD.SECTIONID, DD.TRANSSTATUS 
	INTO #DEDTEMP
	FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
		INNER JOIN DEDUCTEE D WITH(NOLOCK) 
			ON D.DEDUCTEEID = DD.DEDUCTEEID
	WHERE TOTALDEDUCTED > 0 AND MONTH(DEDUCTEDDATE) = @MONTHID 
		AND D.PAN LIKE CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
		THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END AND
		NOT EXISTS
		(
		SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
		)

		
	IF(@CLIENTID = 11)
		BEGIN
			INSERT INTO #UNLINKED 
			SELECT DEDUCTIONID 
			FROM #DEDTEMP
			WHERE ISNULL(TRANSSTATUS,2) = 2
			EXCEPT
			SELECT DEDUCTIONID 
			FROM #DEDTEMP 
			WHERE ISNULL(TRANSSTATUS,2) = 2 AND ENTRYTYPE <> 4
				--AND FORMID = 2 
				--AND ENTRYTYPE = 1 
				--AND SECTIONID <> 5 
			
		END	
	ELSE IF(@CLIENTID = 5)
		BEGIN
			INSERT INTO #UNLINKED 
			SELECT DEDUCTIONID
			FROM #DEDTEMP
			WHERE FORMID IN (1, 3)
				OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
				OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
		END	
	ELSE
		BEGIN
			INSERT INTO #UNLINKED 
			SELECT DEDUCTIONID 
			FROM #DEDTEMP	
		END
		
	IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
		DROP TABLE #DEDTEMP	
	IF(@26QCALLOWED = 1)
		BEGIN	
			IF(@CLIENTID = 1)
				BEGIN
				 INSERT INTO #TEMP
				 SELECT * FROM
				 (
					SELECT '26QC' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
					GROUP BY D.BRANCHID
					UNION
					SELECT '26QVS' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 AND ENTRYTYPE = 4
					GROUP BY D.BRANCHID
					UNION
					SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 AND ENTRYTYPE <> 4
					GROUP BY D.BRANCHID
				)T
				END
			ELSE IF(@CLIENTID = 4)
				BEGIN
					INSERT  INTO #TEMP	
					SELECT '26QC' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
					GROUP BY D.BRANCHID
					UNION	
					SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
						INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE FORMID = 2 AND ENTRYTYPE <> 4 AND SECTIONID NOT IN (@194NSECTIONID)
					GROUP BY D.BRANCHID
				END
			ELSE
				BEGIN
					INSERT  INTO #TEMP	
					SELECT '26QC' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE @26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID 
					GROUP BY D.BRANCHID
					UNION	
					SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE SECTIONID NOT IN (5, @194NSECTIONID) AND FORMID = 2 
						--AND ENTRYTYPE <> 4
					GROUP BY D.BRANCHID
				END
		END
	ELSE
		BEGIN
		IF(@CLIENTID = 1)
			BEGIN
				 INSERT INTO #TEMP
				 SELECT * FROM
				 (
					SELECT '26QVS' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE SECTIONID <> 5 AND FORMID = 2 AND ENTRYTYPE = 4
					GROUP BY D.BRANCHID
					UNION
					SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
					FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
					WHERE SECTIONID <> 5 AND FORMID = 2 AND ENTRYTYPE <> 4
					GROUP BY D.BRANCHID
				)T
			END
		ELSE IF(@CLIENTID = 4)
			BEGIN
				INSERT  INTO #TEMP		
				SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
					INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE FORMID = 2 AND ENTRYTYPE <> 4
				GROUP BY D.BRANCHID
			END
		ELSE
			BEGIN
				INSERT  INTO #TEMP		
				SELECT '26QV' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
				FROM DEDUCTIONDETAIL D WITH(NOLOCK)
				INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
				WHERE SECTIONID <> 5 AND FORMID = 2 
				GROUP BY D.BRANCHID
			END
		END
		
	SELECT CB1.BRANCHCODE ZONALBRANCHCODE, CB1.BRANCHNAME ZONALBRANCHNAME, CB.BRANCHCODE, CB.BRANCHNAME, DD.FORMTYPE, 'C'+DD.FORMTYPE AS FORMTYPECOUNT,
	DD.DEDTOTAL, DD.DEDCOUNT
	INTO #REQDATA
	FROM 
	(
		SELECT '24Q' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
		FROM DEDUCTIONDETAIL D WITH(NOLOCK)
		INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
		WHERE FORMID = 1
		GROUP BY D.BRANCHID
		UNION
		SELECT '26QI' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
		FROM DEDUCTIONDETAIL D WITH(NOLOCK)
		INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
		WHERE SECTIONID = 5 AND ENTRYTYPE = 4
		GROUP BY D.BRANCHID
		UNION
		SELECT FORMTYPE, BRANCHID, DEDTOTAL, DEDCOUNT FROM #TEMP
		UNION 
		SELECT '27Q' FORMTYPE, D.BRANCHID, SUM(TOTALDEDUCTED) DEDTOTAL, COUNT(D.DEDUCTIONID) DEDCOUNT
		FROM DEDUCTIONDETAIL D WITH(NOLOCK)
		INNER JOIN #UNLINKED UL ON D.DEDUCTIONID = UL.DEDUCTIONID
		WHERE FORMID = 3
		GROUP BY D.BRANCHID
	) DD
	INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON DD.BRANCHID = CB.BRANCHID 
	INNER JOIN COMPANYBRANCH CB1 WITH(NOLOCK) ON CB.PARENTBRANCHID = CB1.BRANCHID
	
	IF(@26QCALLOWED = 1)
		BEGIN
			IF(@CLIENTID = 1)
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI',  
						ISNULL([26QV],0) '26QV', ISNULL([26QVS],0) '26QVS',
						ISNULL([27Q],0) '27Q',ISNULL([26QC],0) '26QC'
					INTO #VIEWDATA
					FROM #REQDATA
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q],[26QVS],[26QC])) AS DV
					ORDER BY BRANCHCODE 
				END
			ELSE IF(@CLIENTID = 8)
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, ZONALBRANCHCODE, ZONALBRANCHNAME, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI', 
						ISNULL([26QV],0) '26QV', 
						ISNULL([27Q],0) '27Q', ISNULL([26QC],0) '26QC'
					INTO #VIEWDATA2
					FROM #REQDATA R
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q],[26QC])) AS DV
					ORDER BY ZONALBRANCHCODE 
				END
			ELSE
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI',  
						ISNULL([26QV],0) '26QV', 						 
						ISNULL([27Q],0) '27Q', 
						ISNULL([26QC],0) '26QC',
						ISNULL([C24Q],0) '24QCOUNT',  
						ISNULL([C26QI],0) '26QICOUNT',  ISNULL([C26QV],0) '26QVCOUNT', 						
						ISNULL([C27Q],0) '27QCOUNT',
						ISNULL([C26QC],0) '26QCCOUNT' 
					INTO #VIEWDATA1
					FROM #REQDATA
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q],[26QC])) AS DV
						PIVOT (MAX(DEDCOUNT) FOR FORMTYPECOUNT IN ([C24Q],[C26QI],[C26QV],[C27Q],[C26QC])) AS CNT
					ORDER BY BRANCHCODE 
				END
		
			IF(@CLIENTID = 1)
				SELECT * FROM #VIEWDATA
			ELSE IF(@CLIENTID = 8)
				SELECT * FROM #VIEWDATA2
			ELSE
				SELECT * FROM #VIEWDATA1
					
			IF OBJECT_ID('TEMPDB..#VIEWDATA') IS NOT NULL
				DROP TABLE #VIEWDATA
			IF OBJECT_ID('TEMPDB..#VIEWDATA2') IS NOT NULL
				DROP TABLE #VIEWDATA2
			IF OBJECT_ID('TEMPDB..#VIEWDATA1') IS NOT NULL
				DROP TABLE #VIEWDATA1
		END
	ELSE
		BEGIN
			IF(@CLIENTID = 1)
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI',  
						ISNULL([26QV],0) '26QV', ISNULL([26QVS],0) '26QVS', 
						ISNULL([27Q],0) '27Q'
					INTO #VIEWDATA5
					FROM #REQDATA
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q],[26QVS])) AS DV
					ORDER BY BRANCHCODE 
				END
			ELSE IF(@CLIENTID = 8)
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, ZONALBRANCHCODE, ZONALBRANCHNAME, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI',  ISNULL([26QV],0) '26QV', ISNULL([27Q],0) '27Q'
					INTO #VIEWDATA6
					FROM #REQDATA R
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q])) AS DV
					ORDER BY ZONALBRANCHCODE 
				END
			ELSE
				BEGIN
					SELECT ROW_NUMBER()OVER (ORDER BY BRANCHCODE) SLNO, BRANCHCODE, BRANCHNAME, 
						ISNULL([24Q],0) '24Q',  ISNULL([26QI],0) '26QI',  ISNULL([26QV],0) '26QV', ISNULL([27Q],0) '27Q',
						ISNULL([C24Q],0) '24QCOUNT',  ISNULL([C26QI],0) '26QICOUNT',  ISNULL([C26QV],0) '26QVCOUNT', ISNULL([C27Q],0) '27QCOUNT'
					INTO #VIEWDATA4
					FROM #REQDATA
						PIVOT (MAX(DEDTOTAL) FOR FORMTYPE IN ([24Q],[26QI],[26QV],[27Q])) AS DV
						PIVOT (MAX(DEDCOUNT) FOR FORMTYPECOUNT IN ([C24Q],[C26QI],[C26QV],[C27Q])) AS CNT
					ORDER BY BRANCHCODE 
				END
		
			IF(@CLIENTID = 1)
				SELECT * FROM #VIEWDATA5
			ELSE IF(@CLIENTID = 8)
				SELECT * FROM #VIEWDATA6
			ELSE
				SELECT * FROM #VIEWDATA4
					
			IF OBJECT_ID('TEMPDB..#VIEWDATA4') IS NOT NULL
				DROP TABLE #VIEWDATA4
			IF OBJECT_ID('TEMPDB..#VIEWDATA5') IS NOT NULL
				DROP TABLE #VIEWDATA5
			IF OBJECT_ID('TEMPDB..#VIEWDATA6') IS NOT NULL
				DROP TABLE #VIEWDATA6		
		END
		
	DROP TABLE #TEMP
	DROP TABLE #UNLINKED
	DROP TABLE #REQDATA
		
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveChallanForPayment03')
DROP PROCEDURE USP_TDS_SaveChallanForPayment03
GO
CREATE PROCEDURE USP_TDS_SaveChallanForPayment03 
    @MONTH INT,
    @CLIENTID INT,          
    @FINANCIALYEAR INT        
AS          
BEGIN 
	--194N Related Changes Begin
	DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
		OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
		OR @CLIENTID = 14)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End
	         
    DECLARE @TEMPDATE DATETIME;   
    DECLARE @RESULT INT,@CHALLANID INT,@BANKID INT,@QUARTER INT,@ALLOW92A92B INT,@MONTHYEAR VARCHAR(6);
    DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
    DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
    CREATE TABLE #DIFFERSMP (BRANCHID INT, FORMTYPE VARCHAR(5), FORMID INT)	
 
    BEGIN TRANSACTION           
	   BEGIN TRY       
		  SET @RESULT = 0  
		  SET @TEMPDATE = GETDATE() ;  
		  
		  IF(@MONTH < 4)          
			 SET @FINANCIALYEAR = @FINANCIALYEAR + 1     
          
		  IF (EXISTS(SELECT ID FROM PARKEDAMOUNT WITH(NOLOCK) 
					WHERE MONTHYEAR = CONVERT(INT, (CONVERT(VARCHAR, @MONTH) + CONVERT(VARCHAR, @FINANCIALYEAR)))) 
				AND EXISTS(SELECT DEDUCTIONID FROM DEDUCTIONDETAIL WITH(NOLOCK) WHERE MONTH(DEDUCTEDDATE) = @MONTH
							AND PAYMENTMADE > 0))     
		  BEGIN             
			 SELECT @CHALLANID = ISNULL(MAX(BANKCHALLANNO) + 1, 1) 
			 FROM CHALLANDETAIL WITH(NOLOCK) 
			 WHERE CONVERT(VARCHAR(8), CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112) 
				AND ISAUTOGENERATED = 1    
			  
       
			 IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)          
				SET @QUARTER = 1          
			 ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)          
				SET @QUARTER = 2          
			 ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)          
				SET @QUARTER = 3          
			 ELSE           
				SET @QUARTER = 4  
     
			 SELECT @BANKID = BANKID 
			 FROM REMITTINGBANK WITH(NOLOCK) 
			 WHERE BSRCODE = 
				CASE WHEN @CLIENTID = 6 THEN '0350218' 
					 WHEN @CLIENTID = 14 THEN '0350218'
					 WHEN @CLIENTID = 16 THEN '6910333' 					
				ELSE '0261632' END         
              
			 SELECT @ALLOW92A92B = ALLOW92A92B FROM DEFAULTSETTINGS WITH(NOLOCK)            
    
			 SET @MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)          

			 SELECT *
			 INTO #DEDUCTIONDET
			 FROM DEDUCTIONDETAIL WITH(NOLOCK)
			 WHERE MONTH(DEDUCTEDDATE) = @MONTH 
				AND PAYMENTMADE > 0
			     
			 SELECT FORMID 
			 INTO #CHALLAN 
			 FROM CHALLANMAKEPAYMENT CMP WITH(NOLOCK)
				INNER JOIN TAXSECTIONS TS ON TS.SECTIONID = CMP.SECTIONID 
			 GROUP BY FORMID
										 
			 SELECT DEDUCTEEID
			 INTO #DEDUCTION
			 FROM #DEDUCTIONDET DD WITH(NOLOCK) 
				INNER JOIN #CHALLAN C ON DD.FORMID = C.FORMID
			 WHERE MONTH(DEDUCTEDDATE) = @MONTH
			 GROUP BY DEDUCTEEID
           
			 SELECT * INTO #UNLINKED    
			 FROM    
			 (    
				SELECT DEDUCTIONID 
				FROM #DEDUCTIONDET WITH(NOLOCK) 
				WHERE MONTH(DEDUCTEDDATE) = @MONTH    
				EXCEPT    
				SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK)    
			 )UD       
      
			 IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID IN (2,3))
				BEGIN
				    INSERT INTO @NONEMPLOYEE
				    SELECT D.DEDUCTEEID, NE.DEDUCTEECODE 
				    FROM DEDUCTEE D WITH(NOLOCK)
					   INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) 
						  ON D.DEDUCTEEID = NE.DEDUCTEEID  
					   INNER JOIN #DEDUCTION DD 
						  ON D.DEDUCTEEID = DD.DEDUCTEEID
				END
					
			 IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID = 1)
				BEGIN 
				    INSERT INTO @EMPLOYEE
				    SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE 
				    FROM DEDUCTEE D WITH(NOLOCK)
					   INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID  
					   INNER JOIN #DEDUCTION DD ON D.DEDUCTEEID = DD.DEDUCTEEID			
				END
						
			 SELECT * INTO #DEDUCTEE 
			 FROM
				(
				    SELECT * FROM @EMPLOYEE
				    UNION 
				    SELECT * FROM @NONEMPLOYEE  
				)DE

			INSERT INTO #DIFFERSMP
			 SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE,           
				CASE WHEN SUPERFINAL.FORMTYPE = '26QI' 
						OR SUPERFINAL.FORMTYPE = '26QV' 
						OR SUPERFINAL.FORMTYPE = '26QC' THEN 2
				     WHEN SUPERFINAL.FORMTYPE = '24Q' THEN 1 
				    ELSE 3 END AS [FORMID]  
			 FROM
			 (            
				SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT 
				FROM 
				(            
				    SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, RESULT.SECTIONID AS FORMTYPE, SUM(RESULT.TDS) AS TDS 
				    FROM
				    (            
					   SELECT CB.BRANCHID, CB.PARENTBRANCHID,           
						  CASE WHEN DD.FORMID = 1 THEN '24Q'            
							 WHEN (DD.FORMID = 3) THEN '27Q' 
							 WHEN (@CLIENTID = 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
							 WHEN (@CLIENTID <> 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'
							 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC' 
							 ELSE '26QV' END AS SECTIONID,          
						  SUM(DD.TOTALDEDUCTED) AS TDS   
					   FROM #DEDUCTIONDET DD WITH(NOLOCK)           
						  INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID = DD.SECTIONID 
						  INNER JOIN #DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID           
						  INNER JOIN #UNLINKED DCL WITH(NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID   
						  INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = DD.BRANCHID            
					   WHERE MONTH(DEDUCTEDDATE) = @MONTH          
					   GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID, 
						  CASE WHEN DD.FORMID = 1 THEN '24Q'            
							 WHEN (DD.FORMID = 3) THEN '27Q'           
							 WHEN (@CLIENTID = 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
							 WHEN (@CLIENTID <> 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'
							 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194NSECTIONID) THEN '26QC'
							 ELSE '26QV' END
				    ) AS RESULT GROUP BY RESULT.BRANCHID, RESULT.SECTIONID, RESULT.PARENTBRANCHID          
				) FINAL          
				LEFT JOIN PARKEDAMOUNT PA WITH(NOLOCK) 
				    ON PA.BRANCHID = FINAL.BRANCHID 
				    AND PA.FORMTYPE = FINAL.FORMTYPE             
				WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0 
				    AND (MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR) OR  PA.MONTHYEAR IS NULL)           
			 ) SUPERFINAL            
			 INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) 
				ON SUPERFINAL.BRANCHID = CB.BRANCHID          
			 INNER JOIN COMPANYBRANCH CB1 WITH(NOLOCK) 
				ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID           
			 ORDER BY CB1.BRANCHID           
          
			IF ((SELECT COUNT(BRANCHID) FROM #DIFFERSMP)= 0)
					BEGIN
						INSERT INTO #DIFFERSMP (BRANCHID, FORMTYPE, FORMID) VALUES(0, 'ABC', 0)
					END
			
			 SELECT BRANCHNAME, Q.BRANCHID, Q.SECTIONID, SECTIONNAME, ISNULL(Q.DEDUCTEECODE, 1) AS DEDUCTEECODE,           
				INCOMETAX, SURCHARGE, EDUCATIONCESS, Q.TOTALDEDUCTED, HASPARTPAYMENT, Q.QUARTER, FORMID
			 INTO #TEMPSMP          
			 FROM           
			 (          
				SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, DEDUCTEECODE,           
				    ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,          
				    ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS, 
				    (ISNULL(CEILING(SUM(INCOMETAX)), 0) + ISNULL(CEILING(SUM(SURCHARGE)), 0) + ISNULL(CEILING(SUM(EDUCATIONCESS)),0)) TOTALDEDUCTED,
				    MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID
				FROM           
				(          
				    SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, CB.BRANCHID, DD.SECTIONID,          
					   TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, D.DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX,          
					   SUM(DD.SURCHARGE) SURCHARGE, SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(DD.TOTALDEDUCTED) TOTALDEDUCTED,          
					   0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID
				    FROM           
				    (          
					   SELECT DEDUCTEEID, DEDUCTIONID, BRANCHID, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED, 
						  DEDUCTEDDATE, FORMID, QUARTER,          
						  CASE WHEN FORMID = 1 THEN '24Q'           
							 WHEN (FORMID = 3) THEN '27Q'            
							 WHEN (@CLIENTID = 14 AND FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
							 WHEN (@CLIENTID <> 14 AND FORMID = 2 AND SECTIONID = 5) THEN '26QI' 
							 WHEN (@26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194NSECTIONID) THEN '26QC'
							 ELSE '26QV' END AS FORMTYPE
					   FROM #DEDUCTIONDET WITH(NOLOCK)          
				    ) DD          
				    INNER JOIN #UNLINKED DL WITH(NOLOCK) 
					   ON DD.DEDUCTIONID = DL.DEDUCTIONID  
				    INNER JOIN #DEDUCTEE D WITH(NOLOCK) 
					   ON D.DEDUCTEEID = DD.DEDUCTEEID     
				    INNER JOIN TAXSECTIONS TS WITH(NOLOCK) 
					   ON DD.SECTIONID = TS.SECTIONID AND TS.FORMID = DD.FORMID           
				    INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) 
					   ON CB.BRANCHID = DD.BRANCHID           
				    LEFT JOIN #DIFFERSMP DFL WITH(NOLOCK) 
					   ON DD.BRANCHID = DFL.BRANCHID 
						  AND DD.FORMTYPE = DFL.FORMTYPE          
				    WHERE DD.TOTALDEDUCTED > 0 
					   AND MONTH(DD.DEDUCTEDDATE) = @MONTH          
					   AND CB.BRANCHID IN  (
							 SELECT BRANCHID 
							 FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK) 
								INNER JOIN DEDUCTOR D1 WITH(NOLOCK) 
								    ON BD1.DEDUCTORID = D1.DEDUCTORID           
							 WHERE BD1.QUARTER = @QUARTER 
								AND UPPER(D1.TAN) <> 'TANAPPLIED'
									   )
					   AND DFL.BRANCHID IS NULL           
				    GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID
				) RESULT
				GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID
			 ) Q          
			 INNER JOIN CHALLANMAKEPAYMENT CMP WITH(NOLOCK)           
				ON Q.BRANCHID = CMP.BRANCHID 
				    AND Q.SECTIONID = CMP.SECTIONID 
				    AND Q.QUARTER = CMP.QUARTER 
				    AND Q.DEDUCTEECODE = CMP.DEDUCTEECODE         
				    AND Q.TOTALDEDUCTED = CMP.TOTALDEDUCTED       

			 EXEC('ALTER TABLE #TEMPSMP ADD CHALLANID INT IDENTITY(' + @CHALLANID + ', 1)')            

			 /* INSERT INTO CHALLAN*/          
			 INSERT INTO CHALLANDETAIL (SERIALNO, BRANCHID, QUARTER, FORMID, ERETURNID, LINKDEDCOUNT, ISNILCHALLAN, ISUPDATECHALLAN, MODEOFPAYMENT,           
				BANKCHALLANNO, LASTBANKCHALLANNO, TRNVOUCHERNO, LASTTRNVOUCHERNO, BANKID, LASTBANKID, CHALLANPAIDDATE,           
                    LASTCHALLANPAIDDATE, DATEOFDEBIT, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, INTEREST, PENALTY, OTHERS, CHALLANTOTAL,           
                    LASTCHALLANTOTAL, ISCOMPANY, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, TRANREFNO, TVRECEIPTNUMBER, ISAUTOGENERATED,           
                    ISOLTASINCLUDED, TEMPDATE, ISTTUMINCLUDED, MINORHEAD)                                
			 SELECT (NUM + ISNULL(SERIALNO, 0)) AS SERIALNO, BRANCHID, QUARTER, FORMID, 0 AS ERETURNID, 0 AS LINKEDCOUNT, 'N' AS ISNILLCHALLAN,          
				0 AS ISUPDATECHALLAN, 2 AS MODEOFPAYMENT, CHALLANID AS BANKCHALLANNO, CHALLANID AS LASTBANKCHALLANNO, '' AS TRNVOUCHERNO,          
				'' AS LASTTRNVOUCHERNO, @BANKID AS BANKID, @BANKID AS LASTBANKID, @TEMPDATE AS CHALLANPAIDDATE, GETDATE() AS CHALLANPAIDDATE,          
				NULL AS DATEOFDEBIT, CASE WHEN SECTIONID IN (23,24) THEN 15 ELSE SECTIONID END AS SECTIONID, INCOMETAX, SURCHARGE, 
				EDUCATIONCESS, 0 INTEREST, 0 PENALTY, 0 OTHERS, TOTALDEDUCTED AS CHALLANTOTAL,          
				TOTALDEDUCTED AS LASTCHALLANTOTAL, CASE WHEN DEDUCTEECODE = 2 THEN 0 ELSE 1 END AS ISCOMPANY,          
				'' CHEQUENO, NULL CHEQUEDATE, '' CHEQUEDRAWNON, '' TRANREFNO, '' TVRECEIPTNUMBER, 1 AS ISAUTOGENERATED,           
				0 AS ISOLTASINCLUDED, @TEMPDATE, 0 AS ISTTUMINCLUDED, 200 AS MINORHEAD      
			 FROM          
			 (          
				SELECT ROW_NUMBER() OVER (PARTITION BY T.BRANCHID, T.FORMID, T.QUARTER ORDER BY T.BRANCHID) AS NUM,          
				    SERIALNO, CHALLANID, T.BRANCHID, SECTIONID, DEDUCTEECODE, INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,          
				    T.FORMID, T.QUARTER           
				FROM #TEMPSMP T 
				LEFT JOIN 
				(    
				    SELECT BRANCHID, FORMID, QUARTER, MAX(SERIALNO) AS SERIALNO 
				    FROM CHALLANDETAIL WITH(NOLOCK)           
				    GROUP BY BRANCHID, FORMID, QUARTER           
				) Y          
				    ON T.BRANCHID = Y.BRANCHID AND T.FORMID = Y.FORMID AND T.QUARTER = Y.QUARTER          
			 ) DATA          
             
             IF(@CLIENTID = 14)
				 BEGIN
						SELECT DEDUCTIONID 
						INTO #MANUAL194DED
						FROM #DEDUCTIONDET 
						WHERE SECTIONID = 5 
							AND ENTRYTYPE = 1 
							AND MONTH(DEDUCTEDDATE) = @MONTH
							
						 /*SELECT UNLINKED DEDUCTIONS FOR GIVEN SECTIONID AND LINK IT FOR GIVEN CHALLNID*/          
						 INSERT INTO DEDCHALINK(DEDUCTIONID, CHALLANID, BRANCHID)           
						 SELECT DISTINCT DD.DEDUCTIONID, CHALL.CHALLANID, DD.BRANCHID AS BRANCHID          
						 FROM           
						 (          
							SELECT DEDUCTIONID, FORMID, TOTALDEDUCTED, DEDUCTEEID, SECTIONID, BRANCHID, DEDUCTEDDATE
							FROM #DEDUCTIONDET WITH(NOLOCK)            
							WHERE MONTH(DEDUCTEDDATE) = @MONTH          
						 ) DD           
						 INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID=DD.DEDUCTEEID           
						 LEFT JOIN NONEMPLOYEE NE WITH(NOLOCK) ON NE.DEDUCTEEID = DD.DEDUCTEEID           
						 LEFT JOIN DEDCHALINK CD WITH(NOLOCK) ON DD.DEDUCTIONID = CD.DEDUCTIONID AND CD.BRANCHID = DD.BRANCHID          
						 INNER JOIN #TEMPSMP T WITH(NOLOCK) ON DD.BRANCHID = T.BRANCHID AND DD.SECTIONID = T.SECTIONID 
							AND (ISNULL(NE.DEDUCTEECODE,2) = T.DEDUCTEECODE)
						 LEFT JOIN #DIFFERSMP DL WITH(NOLOCK) ON DD.BRANCHID = DL.BRANCHID AND DD.FORMID = DL.FORMID          
						 INNER JOIN           
						 (          
							SELECT CHALLANID, BANKCHALLANNO, CHALLANPAIDDATE FROM CHALLANDETAIL  WITH(NOLOCK)          
							WHERE CONVERT(VARCHAR(8),CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112) 
								AND ISAUTOGENERATED = 1
						 ) CHALL ON CHALL.BANKCHALLANNO = T.CHALLANID          
						 WHERE DD.TOTALDEDUCTED > 0 
							AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
							AND CD.DEDCHALINKID IS NULL  
							AND DD.DEDUCTIONID NOT IN (SELECT DEDUCTIONID FROM #MANUAL194DED) 	
						
						IF OBJECT_ID('TEMPDB..#MANUAL194DED') IS NOT NULL
							DROP TABLE #MANUAL194DED			
				 END
             ELSE
				BEGIN
						 /*SELECT UNLINKED DEDUCTIONS FOR GIVEN SECTIONID AND LINK IT FOR GIVEN CHALLNID*/          
						 INSERT INTO DEDCHALINK(DEDUCTIONID, CHALLANID, BRANCHID)           
						 SELECT DISTINCT DD.DEDUCTIONID, CHALL.CHALLANID, DD.BRANCHID AS BRANCHID          
						 FROM           
						 (          
							SELECT DEDUCTIONID, FORMID, TOTALDEDUCTED, DEDUCTEEID, SECTIONID, BRANCHID, DEDUCTEDDATE
							FROM #DEDUCTIONDET WITH(NOLOCK)            
							WHERE MONTH(DEDUCTEDDATE) = @MONTH          
						 ) DD           
						 INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID=DD.DEDUCTEEID           
						 LEFT JOIN NONEMPLOYEE NE WITH(NOLOCK) ON NE.DEDUCTEEID = DD.DEDUCTEEID           
						 LEFT JOIN DEDCHALINK CD WITH(NOLOCK) ON DD.DEDUCTIONID = CD.DEDUCTIONID AND CD.BRANCHID = DD.BRANCHID          
						 INNER JOIN #TEMPSMP T WITH(NOLOCK) ON DD.BRANCHID = T.BRANCHID AND DD.SECTIONID = T.SECTIONID 
							AND (ISNULL(NE.DEDUCTEECODE,2) = T.DEDUCTEECODE)
						 LEFT JOIN #DIFFERSMP DL WITH(NOLOCK) ON DD.BRANCHID = DL.BRANCHID AND DD.FORMID = DL.FORMID          
						 INNER JOIN           
						 (          
							SELECT CHALLANID, BANKCHALLANNO, CHALLANPAIDDATE FROM CHALLANDETAIL  WITH(NOLOCK)          
							WHERE CONVERT(VARCHAR(8),CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112) 
								AND ISAUTOGENERATED = 1
						 ) CHALL ON CHALL.BANKCHALLANNO = T.CHALLANID          
						 WHERE DD.TOTALDEDUCTED > 0 
							AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
							AND CD.DEDCHALINKID IS NULL   				
				 END
			 SET @RESULT = 1 
			          
		  END
		    IF (EXISTS(SELECT ID FROM PARKEDAMOUNT WITH(NOLOCK) 
					WHERE MONTHYEAR = CONVERT(INT, (CONVERT(VARCHAR, @MONTH) + CONVERT(VARCHAR, @FINANCIALYEAR))))
					AND ((SELECT TOP 1 ISNULL(SET1,'') FROM DEFAULTSETTINGS WITH(NOLOCK)) <> '')) 
			  BEGIN
				  IF(@CLIENTID = 14)
						BEGIN
							SELECT MONTHYEAR, BRANCHID, 2 AS FORMID, @QUARTER AS [QUARTER], FORMTYPE, ACCOUNTNO, AMOUNT,
								SUBSTRING(ACCOUNTNO,LEN(ACCOUNTNO)- 4,5) AS BGLCODE, 2 AS DEDUCTEECODE
							INTO #PARK
							FROM PARKEDAMOUNT WITH(NOLOCK)
							WHERE FORMTYPE NOT IN ('24Q','26QI','27Q','26QC')
								AND ISNULL(AMOUNT,0) > 0 
								AND MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)
							
							INSERT INTO CHALLANDETAIL (SERIALNO, BRANCHID, QUARTER, FORMID, ERETURNID, LINKDEDCOUNT, ISNILCHALLAN, ISUPDATECHALLAN, MODEOFPAYMENT, BANKCHALLANNO, LASTBANKCHALLANNO,           
								TRNVOUCHERNO, LASTTRNVOUCHERNO, BANKID, LASTBANKID, CHALLANPAIDDATE,           
								LASTCHALLANPAIDDATE, DATEOFDEBIT, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, INTEREST, PENALTY, OTHERS, CHALLANTOTAL,           
								LASTCHALLANTOTAL, ISCOMPANY, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, TRANREFNO, TVRECEIPTNUMBER, ISAUTOGENERATED,           
								ISOLTASINCLUDED, TEMPDATE, ISTTUMINCLUDED, MINORHEAD, DEBITACCOUNTNO)
							SELECT (NUM + ISNULL(SERIALNO, 0)) AS SERIALNO,
								BRANCHID, [QUARTER], 
								FORMID, 0 AS ERETURNID, 0 AS LINKEDCOUNT, 'N' AS ISNILLCHALLAN, 
								0 AS ISUPDATECHALLAN, 2 AS MODEOFPAYMENT,NULL AS BANKCHALLANNO, NULL AS LASTBANKCHALLANNO,
								'' AS TRNVOUCHERNO, '' AS LASTTRNVOUCHERNO, @BANKID AS BANKID, 
								@BANKID AS LASTBANKID, @TEMPDATE AS CHALLANPAIDDATE, GETDATE() AS LASTCHALLANPAIDDATE,
								NULL AS DATEOFDEBIT, SECTIONID, AMOUNT AS INCOMETAX, 0 AS SURCHARGE, 0 AS EDUCATIONCESS,
								0 INTEREST, 0 PENALTY, 0 OTHERS, AMOUNT AS CHALLANTOTAL, AMOUNT AS LASTCHALLANTOTAL,
								CASE WHEN DEDUCTEECODE = 2 THEN 0 ELSE 1 END AS ISCOMPANY,
								'' AS CHEQUENO, NULL AS CHEQUEDATE, '' AS CHEQUEDRAWNON, '' AS TRANREFNO, '' AS TVRECEIPTNUMBER, 
								1 AS ISAUTOGENERATED, 0 AS ISOLTASINCLUDED, @TEMPDATE AS TEMPDATE, 0 AS ISTTUMINCLUDED, 
								200 AS MINORHEAD, BGLCODE AS DEBITACCOUNTNO
							--INTO #DATATOINSERT
							FROM  (          
									SELECT ROW_NUMBER() OVER (PARTITION BY P.BRANCHID, P.FORMID, P.QUARTER ORDER BY P.BRANCHID) AS NUM,          
										SERIALNO, P.BRANCHID, P.FORMID, P.QUARTER, TR.SECTIONID,P.AMOUNT,P.DEDUCTEECODE, TR.BGLCODE         
									FROM #PARK P 
									LEFT JOIN 
									(    
										SELECT BRANCHID, FORMID, QUARTER, ISNULL(MAX(SERIALNO),0) AS SERIALNO 
										FROM CHALLANDETAIL WITH(NOLOCK)           
										GROUP BY BRANCHID, FORMID, QUARTER           
									) Y          
										ON P.BRANCHID = Y.BRANCHID AND P.FORMID = Y.FORMID AND P.QUARTER = Y.QUARTER
									INNER JOIN TDSRATE TR ON TR.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS = P.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS          
								 ) DATA 
							
							IF OBJECT_ID('TEMPDB..#PARK') IS NOT NULL
								DROP TABLE #PARK
	   
						END   
						SET @RESULT = 1 
			  END
		  COMMIT          
	   END TRY           
  
	   BEGIN CATCH          
		  SET @RESULT = -1          
		  ROLLBACK          
	   END CATCH                    
 
    IF (@RESULT = 1)          
	   BEGIN          
		  UPDATE CHALLANDETAIL SET CHALLANPAIDDATE = NULL, LASTCHALLANPAIDDATE = NULL, BANKCHALLANNO = NULL,
			 LASTBANKCHALLANNO = NULL 
		  WHERE ISAUTOGENERATED = 1 AND TEMPDATE = @TEMPDATE          
 
		  DELETE FROM CHALLANMAKEPAYMENT          
	   END          

    SELECT @RESULT          

    IF OBJECT_ID('TEMPDB..#DEDUCTIONDET') IS NOT NULL
	   DROP TABLE #DEDUCTIONDET
    IF OBJECT_ID('TEMPDB..#CHALLAN') IS NOT NULL
	   DROP TABLE #CHALLAN
    IF OBJECT_ID('TEMPDB..#DEDUCTION') IS NOT NULL
	   DROP TABLE #DEDUCTION
    IF OBJECT_ID('TEMPDB..#DEDUCTEE') IS NOT NULL
	   DROP TABLE #DEDUCTEE 
    IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL
	   DROP TABLE #UNLINKED
    IF OBJECT_ID('TEMPDB..#DIFFERSMP') IS NOT NULL
	   DROP TABLE #DIFFERSMP
    IF OBJECT_ID('TEMPDB..#TEMPSMP') IS NOT NULL
	   DROP TABLE #TEMPSMP
END 
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_CreateChallanForPayment')
DROP PROCEDURE USP_TDS_CreateChallanForPayment
GO
CREATE PROCEDURE USP_TDS_CreateChallanForPayment 
	@MONTH INT,
	@FINANCIALYEAR INT,
	@ACCOUNTTYPE1 INT,
	@ACCOUNTTYPE2 INT,
	@ACCOUNTTYPE3 INT,
	@CLIENTID INT = 0
AS
BEGIN
	--194N Related Changes Begin
	DECLARE @194SECTIONID INT, @26QCALLOWED BIT;
	SET @194SECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End
	
	DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
	DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);	
	DECLARE @FORMS TABLE(FORMID INT);
	DECLARE @RESULT INT,@DBNAME VARCHAR(MAX), @FORMID INT,@VAR INT, @QUARTER INT,@MONTHYEAR VARCHAR(6) ;
	CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT,BRANCHID INT,FORMTYPE VARCHAR(10),
			ACCOUNTNO VARCHAR(20),AMOUNT NUMERIC(17,2))
	CREATE TABLE #UNLINKED (DEDUCTIONID INT,DEDUCTEEID INT,BRANCHID INT,FORMID INT,
				QUARTER INT,ENTRYTYPE INT,DEDUCTEDDATE SMALLDATETIME,EXCLUDEINAC BIT,
				SECTIONID INT,TOTALDEDUCTED NUMERIC(13,2),INCOMETAX NUMERIC(13,2),
				SURCHARGE NUMERIC(13,2),EDUCATIONCESS NUMERIC(13,2))
	SET @RESULT = 0;
	SELECT @DBNAME = DB_NAME()
	SET NOCOUNT OFF
	IF(@CLIENTID = 1)
		BEGIN
			SET @ACCOUNTTYPE1=101
			SET @ACCOUNTTYPE2=102
			SET @ACCOUNTTYPE3=103
		END    
	IF @MONTH >9   
		SET @VAR = 2
	ELSE  
		SET @VAR = 1
	IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)
		SET @QUARTER = 1
	ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)
		SET @QUARTER = 2
	ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)
		SET @QUARTER = 3
	ELSE 
		SET @QUARTER = 4
		IF(@MONTH < 4)
			SET @FINANCIALYEAR = @FINANCIALYEAR + 1
		SET @MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)
	BEGIN TRANSACTION 
		BEGIN TRY	
				DELETE FROM CHALLANMAKEPAYMENT
				DELETE FROM DEDCHALLANMAKEPAYMENT	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR
				IF(@CLIENTID=6 OR @CLIENTID = 14)
					BEGIN
						EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTH
					END
					
				IF(@CLIENTID = 15)
					BEGIN	
						EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTH
					END
					
				IF(@CLIENTID = 7)
					BEGIN
						EXEC USP_TDS_CHALLANSQL_PA_CBI @MONTHYEAR,@MONTH
					END  
 
				--ELSE IF(@CLIENTID = 8)
				--	BEGIN
				--		EXEC USP_TDS_CHALLANSQL_PA_AB @MONTHYEAR,@MONTH
				--	END 
				IF(@CLIENTID = -1)
					BEGIN
						INSERT INTO #TEMPPARKEDAMOUNT 
						EXEC USP_TDS_GETREMAININGPARKEDAMOUNT @MONTH,@MONTHYEAR
					END
				ELSE
					BEGIN
						INSERT INTO #TEMPPARKEDAMOUNT
						SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT 
						FROM ParkedAmount WITH(NOLOCK) 
						WHERE MONTHYEAR = @MONTHYEAR AND ISNULL(FORMTYPE,'') <> ''
					END
					
				IF(@ACCOUNTTYPE1 = 101 OR @ACCOUNTTYPE2 = 102) 
					BEGIN 
						INSERT INTO @NONEMPLOYEE
						SELECT D.DEDUCTEEID, NE.DEDUCTEECODE 
						FROM DEDUCTEE D WITH(NOLOCK)
							INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID 
							INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
						WHERE FORMID IN (2,3) AND DD.PAYMENTMADE > 0
						GROUP BY D.DEDUCTEEID, NE.DEDUCTEECODE
						INSERT INTO @FORMS 
						SELECT 2 AS FORMID
						UNION 
						SELECT 3 AS FORMID
					END
				IF(@ACCOUNTTYPE3 = 103) 
					BEGIN 
						INSERT INTO @EMPLOYEE
						SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE 
						FROM DEDUCTEE D WITH(NOLOCK)
							INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID 
							INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
						WHERE FORMID = 1 AND DD.PAYMENTMADE > 0
						GROUP BY D.DEDUCTEEID 
						INSERT INTO @FORMS 
						SELECT 1 AS FORMID				
					END
				
				SELECT DEDUCTIONID,DD.DEDUCTEEID,DD.BRANCHID,DD.FORMID,QUARTER,
					ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
					INCOMETAX,SURCHARGE,EDUCATIONCESS,TRANSSTATUS
				INTO #DEDTEMP
				FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
					INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
					INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = DD.DEDUCTEEID
				WHERE MONTH(DEDUCTEDDATE) = @MONTH AND DD.PAYMENTMADE > 0
					AND D.PAN 
						LIKE CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED'))  
							  THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END 
					AND NOT EXISTS
						(
							SELECT DEDUCTIONID 
							FROM DEDCHALINK WITH(NOLOCK) 
							WHERE DEDUCTIONID = DD.DEDUCTIONID
						) 
										
				IF(@CLIENTID = 11)
					BEGIN    
						INSERT INTO #UNLINKED 
						SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
								ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
								INCOMETAX,SURCHARGE,EDUCATIONCESS
						FROM #DEDTEMP
						WHERE ISNULL(TRANSSTATUS,2) = 2
						EXCEPT
						SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
								ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
								INCOMETAX,SURCHARGE,EDUCATIONCESS
						FROM #DEDTEMP
						WHERE ISNULL(TRANSSTATUS,2) = 2 
							--AND FORMID = 2 
							AND ENTRYTYPE <> 4
							--AND SECTIONID <> 5 							
												
					END
				ELSE IF(@CLIENTID = 5)
					BEGIN
						INSERT INTO #UNLINKED 
						SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
							ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
							INCOMETAX,SURCHARGE,EDUCATIONCESS
						FROM #DEDTEMP
						WHERE FORMID IN (1, 3)
							OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
							OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
					END	
				ELSE
					BEGIN    
						INSERT INTO #UNLINKED 
						SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
							ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
							INCOMETAX,SURCHARGE,EDUCATIONCESS
						FROM #DEDTEMP
					END
					
				IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
					DROP TABLE #DEDTEMP
				
				SELECT * 
				INTO #DEDUCTEE 
				FROM
					(
						SELECT * FROM @EMPLOYEE
						UNION 
						SELECT * FROM @NONEMPLOYEE  
					)DE
					
			  	SELECT CB.BRANCHID,CB.BRANCHCODE,CB.BRANCHNAME,CB.NOCHALLANPAY 
				INTO #BRANCHES
				FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK)
					INNER JOIN DEDUCTOR D1 WITH(NOLOCK) ON BD1.DEDUCTORID = D1.DEDUCTORID 
					INNER JOIN COMPANYBRANCH CB ON BD1.BRANCHID = CB.BRANCHID 
				WHERE BD1.QUARTER = @QUARTER AND UPPER(D1.TAN) <> 'TANAPPLIED'
				GROUP BY CB.BRANCHID,CB.BRANCHCODE,CB.BRANCHNAME,CB.NOCHALLANPAY  
				
				SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE, 
					CASE WHEN SUPERFINAL.FORMTYPE = '26QI' 
							OR SUPERFINAL.FORMTYPE = '26QV' 
							OR SUPERFINAL.FORMTYPE = '26QVS' 
							OR SUPERFINAL.FORMTYPE = '26QC' THEN 2 
						 WHEN SUPERFINAL.FORMTYPE = '24Q' THEN 1 
						 ELSE 3 
					END AS [FORMID] 
				INTO #DIFFERCMP 
				FROM
					(  
						SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, 
							ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT 
						FROM    
							(  
							  SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, 
									RESULT.FORMTYPE, SUM(RESULT.TDS) AS TDS 
							  FROM   
								(  
									SELECT CB.BRANCHID, CB.PARENTBRANCHID, 
									   CASE WHEN DD.FORMID = 1 THEN '24Q' WHEN DD.FORMID = 3 THEN '27Q' 
											WHEN (@CLIENTID <> 11 AND DD.FORMID = 2 AND DD.ENTRYTYPE = 4 AND TS.SECTIONID = 5) 
													OR (@CLIENTID = 11 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'
											WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN '26QC'													 
											WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND DD.ENTRYTYPE = 4 AND TS.SECTIONID <> 5) THEN '26QVS'											
											ELSE '26QV' END AS FORMTYPE,
										SUM(DD.TOTALDEDUCTED) AS TDS 
									FROM COMPANYBRANCH CB WITH (NOLOCK)
										INNER JOIN #UNLINKED DD WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID  
										INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
										INNER JOIN TAXSECTIONS TS WITH (NOLOCK) ON TS.SECTIONID = DD.SECTIONID 
										--INNER JOIN #UNLINKED DCL WITH (NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID  
									WHERE MONTH(DEDUCTEDDATE) = @MONTH AND (DD.EXCLUDEINAC IS NULL OR DD.EXCLUDEINAC = 0) 	
									GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID, DD.ENTRYTYPE  
								) AS RESULT 
							  GROUP BY RESULT.BRANCHID, RESULT.FORMTYPE, RESULT.PARENTBRANCHID
							) FINAL
							LEFT JOIN #TEMPPARKEDAMOUNT PA WITH (NOLOCK) ON PA.BRANCHID = FINAL.BRANCHID AND PA.FORMTYPE = FINAL.FORMTYPE   
						WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0 
								AND (MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR) OR  PA.MONTHYEAR IS NULL) 
					) SUPERFINAL
							INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON SUPERFINAL.BRANCHID = CB.BRANCHID
							INNER JOIN COMPANYBRANCH CB1 WITH (NOLOCK) ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID 
				ORDER BY CB1.BRANCHID 
				SELECT DD.DEDUCTEEID, DD.DEDUCTIONID, BRANCHID, SECTIONID, INCOMETAX,SURCHARGE, 
					EDUCATIONCESS, TOTALDEDUCTED, DEDUCTEDDATE, FORMID,QUARTER,EXCLUDEINAC,DEDUCTEECODE,
					CASE WHEN FORMID = 1 THEN '24Q' 
						 WHEN FORMID = 3 THEN '27Q' 
						 WHEN (@CLIENTID <> 11 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID = 5) 
								OR (@CLIENTID = 11 AND FORMID = 2 AND SECTIONID = 5) THEN '26QI'
                         WHEN (@26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194SECTIONID) THEN '26QC'								 
						 WHEN (@CLIENTID = 1 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID <> 5) THEN '26QVS'						 
						 ELSE '26QV' END AS FORMTYPE,
					CASE WHEN FORMID = 1 THEN 103 WHEN FORMID = 3 THEN 101 
						 WHEN (@CLIENTID <> 11 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID = 5) 
								OR (@CLIENTID = 11 AND FORMID = 2 AND SECTIONID = 5) THEN 101 
						 ELSE 102 END AS ACCOUNTTYPE, 
					CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 1 
						 WHEN (@CLIENTID = 1 AND FORMID = 2 AND ENTRYTYPE <> 4 AND SECTIONID NOT IN (5, 17)) THEN 0
						 WHEN (@CLIENTID <> 1 AND (ENTRYTYPE=4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5,17)))) THEN 1 
						 ELSE 0 END ISFINACLE 
				INTO #REQDATA
				FROM #UNLINKED DD WITH (NOLOCK)
					--INNER JOIN #UNLINKED DL ON DD.DEDUCTIONID = DL.DEDUCTIONID 
					INNER JOIN #DEDUCTEE DE ON DD.DEDUCTEEID = DE.DEDUCTEEID
				WHERE (EXCLUDEINAC IS NULL OR EXCLUDEINAC = 0) 
					AND FORMID IN (1,2,3) AND MONTH(DD.DEDUCTEDDATE) = @MONTH				
				SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, ISNULL(DEDUCTEECODE, 2) AS DEDUCTEECODE,
					SUM(INCOMETAX)INCOMETAX, SUM(SURCHARGE)SURCHARGE, SUM(EDUCATIONCESS)EDUCATIONCESS, 
					SUM(TOTALDEDUCTED)TOTALDEDUCTED, MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID, ISFINACLE 
				INTO #TEMPCMP
				FROM 
				(
					SELECT BRANCHNAME, BRANCHID, SECTIONID,
						--CASE WHEN SECTIONID IN (23,24) THEN 15 ELSE SECTIONID END AS SECTIONID, 
						SECTIONNAME,
						--CASE WHEN SECTIONID IN (23,24) THEN '194I' ELSE SECTIONNAME END AS SECTIONNAME, 
						DEDUCTEECODE,
						ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,
						ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS, 
						(ISNULL(CEILING(SUM(INCOMETAX)), 0)+ISNULL(CEILING(SUM(SURCHARGE)), 0)+ISNULL(CEILING(SUM(EDUCATIONCESS)),0)) TOTALDEDUCTED, 
						--ISNULL(CEILING(SUM(TOTALDEDUCTED)), 0)
						MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID, ISFINACLE
					FROM 
					(
						SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, CB.BRANCHID, DD.SECTIONID,
							TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX,
							SUM(DD.SURCHARGE) SURCHARGE, SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(TOTALDEDUCTED) TOTALDEDUCTED,
							0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID, ISFINACLE
						FROM #REQDATA DD
							INNER JOIN #BRANCHES CB ON CB.BRANCHID = DD.BRANCHID
							INNER JOIN TAXSECTIONS TS WITH (NOLOCK) ON DD.SECTIONID = TS.SECTIONID --AND TS.FORMID = DD.FORMID	
							--INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID 
							LEFT JOIN #DIFFERCMP DFL ON DD.BRANCHID = DFL.BRANCHID AND DD.FORMTYPE = DFL.FORMTYPE
						WHERE DD.TOTALDEDUCTED > 0 AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
							AND (ISNULL(CB.NOCHALLANPAY,0)=0) AND DFL.BRANCHID IS NULL 
							AND (DD.ACCOUNTTYPE = @ACCOUNTTYPE1 OR DD.ACCOUNTTYPE = @ACCOUNTTYPE2 OR DD.ACCOUNTTYPE = @ACCOUNTTYPE3)
						GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, 
							CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID, ISFINACLE
					) RESULT --WHERE FORMID <> 1 
					GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID, ISFINACLE
				) Q
				GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID, ISFINACLE		
				EXEC('ALTER TABLE #TEMPCMP ADD ID INT IDENTITY(1, 1)')  
				/* INSERT INTO CHALLANMAKEPAYMENT */
				INSERT INTO CHALLANMAKEPAYMENT (ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE,TOTALDEDUCTED)
				SELECT ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE, TOTALDEDUCTED
				FROM
				(
					SELECT T.ID,T.BRANCHID,SECTIONID, DEDUCTEECODE, INCOMETAX, 
						SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED, T.FORMID, T.QUARTER
					FROM #TEMPCMP T 
				) DATA			
				INSERT INTO DEDCHALLANMAKEPAYMENT(ID,DEDUCTIONID) 
				SELECT DISTINCT CHALL.ID,DD.DEDUCTIONID
				FROM 
					(
						SELECT DEDUCTIONID,FORMID,TOTALDEDUCTED,DEDUCTEEID,SECTIONID,BRANCHID,DEDUCTEDDATE,
							CASE WHEN ENTRYTYPE=4 THEN 1 
								 ELSE 0 END ISFINACLE 
						FROM  #UNLINKED WITH (NOLOCK) 
						WHERE MONTH(DEDUCTEDDATE)=@MONTH
					 ) DD 
					INNER JOIN #DEDUCTEE D ON D.DEDUCTEEID=DD.DEDUCTEEID 
					LEFT JOIN DEDCHALLANMAKEPAYMENT CD WITH (NOLOCK) ON DD.DEDUCTIONID=CD.DEDUCTIONID 
					INNER JOIN #TEMPCMP T ON DD.BRANCHID=T.BRANCHID 
						AND (CASE WHEN DD.SECTIONID IN(23,24) THEN 15 ELSE DD.SECTIONID END) = T.SECTIONID 
						AND D.DEDUCTEECODE=T.DEDUCTEECODE
					LEFT JOIN #DIFFERCMP DL ON DD.BRANCHID=DL.BRANCHID AND DD.FORMID=DL.FORMID
					INNER JOIN 
						(
							SELECT ID 
							FROM CHALLANMAKEPAYMENT WITH(NOLOCK)
						) CHALL ON CHALL.ID = T.ID		
				WHERE  DD.TOTALDEDUCTED > 0 AND MONTH(DD.DEDUCTEDDATE) = @MONTH --AND CD.ID IS NULL 	
				SET @RESULT=1
				IF OBJECT_ID('TEMPDB..#TEMPPARKEDAMOUNT') IS NOT NULL
					DROP TABLE #TEMPPARKEDAMOUNT
				IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL
					DROP TABLE #UNLINKED
				IF OBJECT_ID('TEMPDB..#REQDATA') IS NOT NULL
					DROP TABLE #REQDATA
				IF OBJECT_ID('TEMPDB..#BRANCHES') IS NOT NULL
					DROP TABLE #BRANCHES
				IF OBJECT_ID('TEMPDB..#DIFFERCMP') IS NOT NULL
					DROP TABLE #DIFFERCMP
				IF OBJECT_ID('TEMPDB..#TEMPCMP') IS NOT NULL
					DROP TABLE #TEMPCMP
				SELECT @RESULT
				COMMIT 
		 END TRY	
		BEGIN CATCH
			SET @RESULT=-1
			SELECT @RESULT
			ROLLBACK
		END CATCH
	SET NOCOUNT ON
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_CreateChallanForPayment03')
DROP PROCEDURE USP_TDS_CreateChallanForPayment03
GO 
CREATE PROCEDURE USP_TDS_CreateChallanForPayment03
	@MONTH INT,
	@FINANCIALYEAR INT,
	@ACCOUNTTYPE1 INT,
	@ACCOUNTTYPE2 INT,
	@ACCOUNTTYPE3 INT,
	@CLIENTID INT = 0
AS
BEGIN
	--194N Related Changes Begin
	DECLARE @194SECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194SECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
		OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11 
		OR @CLIENTID = 14)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End
	
	DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
	DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);	
	DECLARE @FORMS TABLE(FORMID INT);
	DECLARE @RESULT INT,@DBNAME VARCHAR(MAX), @FORMID INT,@VAR INT, @QUARTER INT,@MONTHYEAR VARCHAR(6) ;
	CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT,BRANCHID INT,FORMTYPE VARCHAR(10),ACCOUNTNO VARCHAR(20),AMOUNT NUMERIC(17,2))
	SET @RESULT = 0;
	SELECT @DBNAME = DB_NAME()
	
	SET NOCOUNT OFF
	
	IF(@CLIENTID = 1)
		BEGIN
			SET @ACCOUNTTYPE1=101
			SET @ACCOUNTTYPE2=102
			SET @ACCOUNTTYPE3 = 0
		END    
       
	IF @MONTH >9   
		SET @VAR = 2
	ELSE  
		SET @VAR = 1
		
	IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)
		SET @QUARTER = 1
	ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)
		SET @QUARTER = 2
	ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)
		SET @QUARTER = 3
	ELSE 
		SET @QUARTER = 4
		
		IF(@MONTH < 4)
			SET @FINANCIALYEAR = @FINANCIALYEAR + 1
		
		SET @MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR)
	
	BEGIN TRANSACTION 
		BEGIN TRY	
				DELETE FROM CHALLANMAKEPAYMENT
				DELETE FROM DEDCHALLANMAKEPAYMENT	
				EXEC USP_TDS_CHALLANSQL_PA @MONTHYEAR

			IF(@CLIENTID=6 OR @CLIENTID = 14 OR @CLIENTID = 16)
				BEGIN
					EXEC USP_TDS_CHALLANSQL_PA_KB @MONTHYEAR,@MONTH
				END
				
			IF(@CLIENTID = 15)
				BEGIN	
					EXEC USP_TDS_CHALLANSQL_PA_JK @MONTHYEAR,@MONTH
				END
				
			IF(@CLIENTID = 7)
				BEGIN
					EXEC USP_TDS_CHALLANSQL_PA_CBI @MONTHYEAR,@MONTH
				END  
			IF(@CLIENTID = -1)
				BEGIN
					INSERT INTO #TEMPPARKEDAMOUNT 
					EXEC USP_TDS_GETREMAININGPARKEDAMOUNT @MONTH,@MONTHYEAR
				END
			ELSE
				BEGIN
					INSERT INTO #TEMPPARKEDAMOUNT
					SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT 
					FROM PARKEDAMOUNT 
					WHERE MONTHYEAR = @MONTHYEAR AND ISNULL(FORMTYPE,'') <> ''
				END
			IF(@ACCOUNTTYPE1 = 101 OR @ACCOUNTTYPE2 = 102) 
				BEGIN 
					INSERT INTO @NONEMPLOYEE
					SELECT D.DEDUCTEEID, NE.DEDUCTEECODE 
					FROM DEDUCTEE D WITH(NOLOCK)
						INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID 
						INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
					WHERE FORMID IN (2,3) AND DD.PAYMENTMADE > 0
					GROUP BY D.DEDUCTEEID, NE.DEDUCTEECODE

					INSERT INTO @FORMS 
					SELECT 2 AS FORMID
					UNION 
					SELECT 3 AS FORMID
				END

			IF(@ACCOUNTTYPE3 = 103) 
				BEGIN 
					INSERT INTO @EMPLOYEE
					SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE 
					FROM DEDUCTEE D WITH(NOLOCK)
						INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID 
						INNER JOIN DEDUCTIONDETAIL DD WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
					WHERE FORMID = 1 AND DD.PAYMENTMADE > 0
					GROUP BY D.DEDUCTEEID 

					INSERT INTO @FORMS 
					SELECT 1 AS FORMID				
				END    

			SELECT * INTO #UNLINKED FROM
			(
				SELECT DEDUCTIONID 
				FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
					INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
					INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
				WHERE MONTH(DEDUCTEDDATE) = @MONTH AND DD.PAYMENTMADE > 0
					AND D.PAN LIKE 
								CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
								THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') 
								END 
					AND NOT EXISTS
					(
						SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
					)
			)U

			SELECT * INTO #DEDUCTEE FROM
			(
				SELECT * FROM @EMPLOYEE
				UNION 
				SELECT * FROM @NONEMPLOYEE  
			)DE

			SELECT BRANCHID 
			INTO #BRANCHES
			FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK)
				INNER JOIN DEDUCTOR D1 WITH(NOLOCK) ON BD1.DEDUCTORID = D1.DEDUCTORID 
			WHERE BD1.QUARTER = @QUARTER AND UPPER(D1.TAN) <> 'TANAPPLIED'
			GROUP BY BRANCHID 

			SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE, 
				 CASE WHEN SUPERFINAL.FORMTYPE = '26QI' 
						OR SUPERFINAL.FORMTYPE = '26QV'
						OR SUPERFINAL.FORMTYPE = '26QC' THEN 2 
					  WHEN SUPERFINAL.FORMTYPE = '24Q' THEN 1 
				 ELSE 3 
			END AS [FORMID] 
			INTO #DIFFERCMP 
			FROM
				(  
					SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT 
					FROM    
						(  
							SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, RESULT.FORMTYPE, SUM(RESULT.TDS) AS TDS 
							FROM   
								(  
									SELECT CB.BRANCHID, CB.PARENTBRANCHID, 
										 CASE WHEN DD.FORMID = 1 THEN '24Q' WHEN DD.FORMID = 3 THEN '27Q' 
											  WHEN (@CLIENTID = 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
											  WHEN (@CLIENTID <> 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'
											  WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN '26QC'
										 ELSE '26QV' END AS FORMTYPE,
									SUM(DD.TOTALDEDUCTED) AS TDS 
									FROM COMPANYBRANCH CB WITH (NOLOCK)
										INNER JOIN DEDUCTIONDETAIL DD WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID  
										INNER JOIN @FORMS F ON DD.FORMID = F.FORMID
										INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID = DD.SECTIONID 
										INNER JOIN #UNLINKED DCL WITH(NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID  
									WHERE MONTH(DEDUCTEDDATE) = @MONTH AND (DD.EXCLUDEINAC IS NULL OR DD.EXCLUDEINAC = 0) 	
									GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID, 
											CASE WHEN DD.FORMID = 1 THEN '24Q' WHEN DD.FORMID = 3 THEN '27Q' 
												 WHEN (@CLIENTID = 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
												 WHEN (@CLIENTID <> 14 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN '26QI'
												 WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN '26QC'
												 ELSE '26QV' END  
								) AS RESULT 
							GROUP BY RESULT.BRANCHID, RESULT.FORMTYPE, RESULT.PARENTBRANCHID
						) FINAL
							LEFT JOIN #TEMPPARKEDAMOUNT PA WITH (NOLOCK) ON PA.BRANCHID = FINAL.BRANCHID AND PA.FORMTYPE = FINAL.FORMTYPE   
						WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0 
							AND (MONTHYEAR = CAST(@MONTH AS VARCHAR) + CAST(@FINANCIALYEAR AS VARCHAR) OR  PA.MONTHYEAR IS NULL) 
				) SUPERFINAL
					INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON SUPERFINAL.BRANCHID = CB.BRANCHID
					INNER JOIN COMPANYBRANCH CB1 WITH (NOLOCK) ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID 
			ORDER BY CB1.BRANCHID


			SELECT DD.DEDUCTEEID, DD.DEDUCTIONID, BRANCHID, SECTIONID, INCOMETAX, 
				SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED, DEDUCTEDDATE, FORMID, 
				QUARTER,EXCLUDEINAC,DEDUCTEECODE,
				CASE WHEN FORMID = 1 THEN '24Q' 
					 WHEN FORMID = 3 THEN '27Q' 
					 WHEN (@CLIENTID = 14 AND FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4) THEN '26QI' 	
					 WHEN (@CLIENTID <> 14 AND FORMID = 2 AND SECTIONID = 5) THEN '26QI' 
					 WHEN (@26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194SECTIONID) THEN '26QC'
				ELSE '26QV' END AS FORMTYPE,
				CASE WHEN FORMID = 1 THEN 103 
					 WHEN FORMID = 3 THEN 101 
					 WHEN (@CLIENTID = 14 AND FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4) THEN 101 
					 WHEN (@CLIENTID <> 14 AND FORMID = 2 AND SECTIONID = 5) THEN 101 
				ELSE 102 END AS ACCOUNTTYPE, 
				CASE WHEN ENTRYTYPE=4 THEN 1 ELSE 0 END ISFINACLE 
			INTO #REQDATA
			FROM DEDUCTIONDETAIL DD WITH (NOLOCK)
				INNER JOIN #UNLINKED DL ON DD.DEDUCTIONID = DL.DEDUCTIONID 
				INNER JOIN #DEDUCTEE DE ON DD.DEDUCTEEID = DE.DEDUCTEEID
			WHERE (EXCLUDEINAC IS NULL OR EXCLUDEINAC = 0) AND FORMID IN (1,2,3) AND MONTH(DD.DEDUCTEDDATE) = @MONTH

		SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, ISNULL(DEDUCTEECODE, 2) AS DEDUCTEECODE,
			SUM(INCOMETAX)INCOMETAX, SUM(SURCHARGE)SURCHARGE, SUM(EDUCATIONCESS)EDUCATIONCESS, 
			SUM(TOTALDEDUCTED)TOTALDEDUCTED, MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID--, ISFINACLE 
			INTO #TEMPCMP
		FROM 
			(
				SELECT BRANCHNAME, BRANCHID, SECTIONID,	SECTIONNAME, DEDUCTEECODE,
					ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,
					ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS, 
					(ISNULL(CEILING(SUM(INCOMETAX)), 0)+ISNULL(CEILING(SUM(SURCHARGE)), 0)+ISNULL(CEILING(SUM(EDUCATIONCESS)),0)) TOTALDEDUCTED, 
					--ISNULL(CEILING(SUM(TOTALDEDUCTED)), 0)
					MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID--, ISFINACLE
				FROM 
					(
						SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, CB.BRANCHID, DD.SECTIONID,
							TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX,
							SUM(DD.SURCHARGE) SURCHARGE, SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(TOTALDEDUCTED) TOTALDEDUCTED,
							0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID, ISFINACLE
						FROM #REQDATA DD
							INNER JOIN #BRANCHES B ON B.BRANCHID = DD.BRANCHID
							INNER JOIN TAXSECTIONS TS WITH (NOLOCK) ON DD.SECTIONID = TS.SECTIONID --AND TS.FORMID = DD.FORMID	
							INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) ON CB.BRANCHID = DD.BRANCHID 
							LEFT JOIN #DIFFERCMP DFL ON DD.BRANCHID = DFL.BRANCHID AND DD.FORMTYPE = DFL.FORMTYPE
						WHERE DD.TOTALDEDUCTED > 0 AND MONTH(DD.DEDUCTEDDATE) = @MONTH AND (ISNULL(CB.NOCHALLANPAY,0)=0) AND					
							DFL.BRANCHID IS NULL AND 
							(DD.ACCOUNTTYPE = @ACCOUNTTYPE1 OR DD.ACCOUNTTYPE = @ACCOUNTTYPE2 OR DD.ACCOUNTTYPE = @ACCOUNTTYPE3)
						GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, 
							CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID, ISFINACLE
					) RESULT --WHERE FORMID <> 1 
				GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID--, ISFINACLE
			) Q
		GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID--, ISFINACLE

		EXEC('ALTER TABLE #TEMPCMP ADD ID INT IDENTITY(1, 1)')  

		/* INSERT INTO CHALLANMAKEPAYMENT */
		INSERT INTO CHALLANMAKEPAYMENT (ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE,TOTALDEDUCTED)
		SELECT ID, BRANCHID, QUARTER, SECTIONID, DEDUCTEECODE, TOTALDEDUCTED
		FROM
			(
				SELECT T.ID,T.BRANCHID,SECTIONID, DEDUCTEECODE, 
					INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,
					T.FORMID, T.QUARTER
				FROM #TEMPCMP T 
			) DATA				
		IF(@CLIENTID = 14)
			BEGIN
				SELECT DEDUCTIONID 
				INTO #MANUAL194DED
				FROM DEDUCTIONDETAIL 
				WHERE SECTIONID = 5 
					AND ENTRYTYPE = 1 
					AND MONTH(DEDUCTEDDATE) = @MONTH
				
				INSERT INTO DEDCHALLANMAKEPAYMENT(ID,DEDUCTIONID) 
				SELECT DISTINCT CHALL.ID,DD.DEDUCTIONID
				FROM 
					(
						SELECT DEDUCTIONID,FORMID,TOTALDEDUCTED,DEDUCTEEID,SECTIONID,BRANCHID,DEDUCTEDDATE--,
						--CASE WHEN ENTRYTYPE=4 THEN 1 ELSE 0 END ISFINACLE 
						FROM  DEDUCTIONDETAIL WITH (NOLOCK) 
						WHERE MONTH(DEDUCTEDDATE)=@MONTH
					) DD 
					INNER JOIN #DEDUCTEE D ON D.DEDUCTEEID=DD.DEDUCTEEID 
					LEFT JOIN DEDCHALLANMAKEPAYMENT CD WITH (NOLOCK) ON DD.DEDUCTIONID=CD.DEDUCTIONID 
					INNER JOIN #TEMPCMP T ON DD.BRANCHID=T.BRANCHID AND 
							(CASE WHEN DD.SECTIONID IN(23,24) THEN 15 ELSE DD.SECTIONID END) = T.SECTIONID AND D.DEDUCTEECODE=T.DEDUCTEECODE
					LEFT JOIN #DIFFERCMP DL ON DD.BRANCHID=DL.BRANCHID AND DD.FORMID=DL.FORMID
					INNER JOIN 
							(
								Select ID FROM CHALLANMAKEPAYMENT WITH(NOLOCK)
							) CHALL ON CHALL.ID = T.ID		
				WHERE  DD.TOTALDEDUCTED > 0 
					AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
					AND DD.DEDUCTIONID NOT IN (SELECT DEDUCTIONID FROM #MANUAL194DED)
					--AND CD.ID IS NULL 
					
				IF OBJECT_ID('TEMPDB..#MANUAL194DED') IS NOT NULL
					DROP TABLE #MANUAL194DED					
			END
		ELSE
			BEGIN
				INSERT INTO DEDCHALLANMAKEPAYMENT(ID,DEDUCTIONID) 
				SELECT DISTINCT CHALL.ID,DD.DEDUCTIONID
				FROM 
					(
						SELECT DEDUCTIONID,FORMID,TOTALDEDUCTED,DEDUCTEEID,SECTIONID,BRANCHID,DEDUCTEDDATE--,
						--CASE WHEN ENTRYTYPE=4 THEN 1 ELSE 0 END ISFINACLE 
						FROM  DEDUCTIONDETAIL WITH (NOLOCK) 
						WHERE MONTH(DEDUCTEDDATE)=@MONTH
					) DD 
					INNER JOIN #DEDUCTEE D ON D.DEDUCTEEID=DD.DEDUCTEEID 
					LEFT JOIN DEDCHALLANMAKEPAYMENT CD WITH (NOLOCK) ON DD.DEDUCTIONID=CD.DEDUCTIONID 
					INNER JOIN #TEMPCMP T ON DD.BRANCHID=T.BRANCHID AND 
							(CASE WHEN DD.SECTIONID IN(23,24) THEN 15 ELSE DD.SECTIONID END) = T.SECTIONID AND D.DEDUCTEECODE=T.DEDUCTEECODE
					LEFT JOIN #DIFFERCMP DL ON DD.BRANCHID=DL.BRANCHID AND DD.FORMID=DL.FORMID
					INNER JOIN 
							(
								Select ID FROM CHALLANMAKEPAYMENT WITH(NOLOCK)
							) CHALL ON CHALL.ID = T.ID		
				WHERE  DD.TOTALDEDUCTED > 0 
					AND MONTH(DD.DEDUCTEDDATE) = @MONTH --AND CD.ID IS NULL 
			END
		
		
		UPDATE DEFAULTSETTINGS SET SET1 = NULL 
		WHERE ID = (SELECT TOP 1 ID FROM DEFAULTSETTINGS WITH(NOLOCK))		
		
		IF(@CLIENTID = 14 AND @ACCOUNTTYPE2 = 102)
		BEGIN
			SELECT MONTHYEAR,BRANCHID,FORMTYPE,ACCOUNTNO,AMOUNT,
				SUBSTRING(ACCOUNTNO,LEN(ACCOUNTNO)- 4,5) AS BGLCODE,
				2 AS DEDUCTEECODE
			INTO #PARK
			FROM #TEMPPARKEDAMOUNT WITH(NOLOCK)
			WHERE FORMTYPE NOT IN ('24Q','26QI','27Q','26QC')
				AND ISNULL(AMOUNT,0) > 0
			
			DECLARE @MAXCHALLANID INT ;
			SET @MAXCHALLANID = ((SELECT ISNULL(MAX(ID),0) FROM CHALLANMAKEPAYMENT));
			
			SELECT @MAXCHALLANID ID, P.BRANCHID, @QUARTER [QUARTER], TR.SECTIONID, P.DEDUCTEECODE, P.AMOUNT
			INTO #DATATOINSERT
			FROM #PARK P 
				INNER JOIN TDSRATE TR 
					ON TR.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS = P.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS 
				
			INSERT INTO CHALLANMAKEPAYMENT
			SELECT (ID + ROW_NUMBER() OVER (ORDER BY ID )) AS ID, BRANCHID, [QUARTER], SECTIONID, DEDUCTEECODE, AMOUNT
			FROM #DATATOINSERT
			
			IF((SELECT COUNT(ID) FROM #DATATOINSERT) > 0)
			BEGIN
				UPDATE DEFAULTSETTINGS SET SET1 = '1' 
				WHERE ID = (SELECT TOP 1 ID FROM DEFAULTSETTINGS WITH(NOLOCK))
			END
			
			IF OBJECT_ID('TEMPDB..#PARK') IS NOT NULL
				DROP TABLE #PARK
			IF OBJECT_ID('TEMPDB..#DATATOINSERT') IS NOT NULL
				DROP TABLE #DATATOINSERT								
		END
		
		SET @RESULT = 1
		COMMIT 

	END TRY	
	BEGIN CATCH
		SET @RESULT=-1
		ROLLBACK
	END CATCH
	IF OBJECT_ID('TEMPDB..#TEMPPARKEDAMOUNT') IS NOT NULL
		DROP TABLE #TEMPPARKEDAMOUNT
	SET NOCOUNT ON
	SELECT @RESULT	
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveChallanForPayment')
DROP PROCEDURE USP_TDS_SaveChallanForPayment
GO
CREATE PROCEDURE USP_TDS_SaveChallanForPayment 
    @MONTH INT,
    @FINANCIALYEAR INT,
    @CLIENTID INT
AS
BEGIN
	--194N Related Changes Begin
	DECLARE @194SECTIONID INT, @26QCALLOWED BIT = 0;
	SET @194SECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
	IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11)
		BEGIN
			SET @26QCALLOWED = 1
		END
	--194N Related Changes End
	
    DECLARE @EMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);
    DECLARE @NONEMPLOYEE TABLE(DEDUCTEEID INT, DEDUCTEECODE INT);	
    DECLARE @TEMPDATE DATETIME, @RESULT INT,@FORMID INT, @CHALLANID INT,@QUARTER INT,@BANKID INT,@ALLOW92A92B INT, @MONTHYEAR INT, @BSR VARCHAR(7);
    CREATE TABLE #TEMPPARKEDAMOUNT(MONTHYEAR INT,BRANCHID INT,FORMTYPE INT,ACCOUNTNO VARCHAR(20),AMOUNT NUMERIC(17,2))
    CREATE TABLE #DIFFERSMP (BRANCHID INT, FORMTYPE INT, FORMID INT)
	CREATE TABLE #DEDUCTIONDET (DEDUCTIONID INT,DEDUCTEEID INT,BRANCHID INT,FORMID INT,QUARTER INT,ENTRYTYPE INT,DEDUCTEDDATE SMALLDATETIME,EXCLUDEINAC BIT,SECTIONID INT,TOTALDEDUCTED NUMERIC(13,2),
					INCOMETAX NUMERIC(13,2),SURCHARGE NUMERIC(13,2),EDUCATIONCESS NUMERIC(13,2))
	-- 24Q -> 100, 26QI -> 200, 26QV -> 300, 26QVS -> 400,26QC -> 600, 27Q -> 500
    SET @TEMPDATE = GETDATE() ;
    SET @RESULT = 0;

    IF(@MONTH < 4)
	   SET @FINANCIALYEAR = @FINANCIALYEAR+1
    
    IF (@MONTH = 4 OR @MONTH = 5 OR @MONTH = 6)
	   SET @QUARTER = 1
    ELSE IF (@MONTH = 7 OR @MONTH = 8 OR @MONTH = 9)
	   SET @QUARTER = 2
    ELSE IF (@MONTH = 10 OR @MONTH = 11 OR @MONTH = 12)
	   SET @QUARTER = 3
    ELSE 
	   SET @QUARTER = 4

    IF (@CLIENTID = 1 OR @CLIENTID = 9) 
	   SET @BSR = '0290179' 
    ELSE IF (@CLIENTID = 3) 
	   SET @BSR = '0321931' 
    ELSE IF (@CLIENTID = 5)
	   SET @BSR = '0242465' 
    ELSE IF (@CLIENTID = 7) 
	   SET @BSR = '0282930'
    ELSE IF (@CLIENTID = 8)
	   SET @BSR = '0341101'
    ELSE IF (@CLIENTID = 10)
	   SET @BSR = '0310589'
    ELSE IF (@CLIENTID = 11)
	   SET @BSR = '0331906' 
    ELSE IF (@CLIENTID = 12)
	   SET @BSR = '0360743'
	ELSE IF (@CLIENTID = 14)
	   SET @BSR = '0350218'
	ELSE IF (@CLIENTID = 15)
	   SET @BSR = '6320396'
	ELSE IF	(@CLIENTID = 17)
		SET @BSR = '0231433' 	   
    ELSE 
	   SET @BSR = '0130191'
	 
    SELECT @BANKID = BANKID 
    FROM REMITTINGBANK WITH(NOLOCK)
    WHERE BSRCODE = @BSR

    SELECT @ALLOW92A92B = ALLOW92A92B FROM DEFAULTSETTINGS
    SET @MONTHYEAR = CONVERT(INT, (CONVERT(VARCHAR, @MONTH) + CONVERT(VARCHAR, @FINANCIALYEAR)))

    IF(@CLIENTID = -1)
	   BEGIN
		  INSERT INTO #TEMPPARKEDAMOUNT 
		  EXEC USP_TDS_GETREMAININGPARKEDAMOUNT @MONTH,@MONTHYEAR
	   END
    ELSE
	   BEGIN
		  INSERT INTO #TEMPPARKEDAMOUNT
		  SELECT MONTHYEAR, BRANCHID,
			CASE WHEN FORMTYPE = '24Q' THEN 100
				WHEN FORMTYPE = '26QI' THEN 200
				WHEN FORMTYPE = '26QV' THEN 300
				WHEN FORMTYPE = '26QVS' THEN 400
				WHEN FORMTYPE = '26QC' THEN 600
				ELSE 500 END AS FORMTYPE , ACCOUNTNO, AMOUNT FROM PARKEDAMOUNT WITH(NOLOCK) WHERE MONTHYEAR = @MONTHYEAR
	   END

    BEGIN TRANSACTION 
	   BEGIN TRY			
		  IF (EXISTS(SELECT ID FROM PARKEDAMOUNT (NOLOCK) WHERE MONTHYEAR = @MONTHYEAR) 
				AND EXISTS(SELECT DEDUCTIONID FROM DEDUCTIONDETAIL (NOLOCK) WHERE MONTH(DEDUCTEDDATE) = @MONTH
							AND PAYMENTMADE > 0))
			 BEGIN
				SELECT @CHALLANID = ISNULL(MAX(BANKCHALLANNO) + 1, 60000) 
				FROM CHALLANDETAIL (NOLOCK)
				WHERE CONVERT(VARCHAR(8), CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112) 
				    AND ISAUTOGENERATED = 1 
					 
				SELECT FORMID 
				INTO #CHALLAN 
				FROM CHALLANMAKEPAYMENT CMP
				    INNER JOIN TAXSECTIONS TS 
					   ON TS.SECTIONID = CMP.SECTIONID 
				GROUP BY FORMID
				
				SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
					INCOMETAX,SURCHARGE,EDUCATIONCESS,TRANSSTATUS
				INTO #DEDTEMP
				FROM DEDUCTIONDETAIL WITH(NOLOCK)
				WHERE MONTH(DEDUCTEDDATE) = @MONTH
					AND PAYMENTMADE > 0
				
				IF(@CLIENTID = 11)
				BEGIN
					INSERT INTO #DEDUCTIONDET
					SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
						ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
						INCOMETAX,SURCHARGE,EDUCATIONCESS
					FROM #DEDTEMP
					WHERE ISNULL(TRANSSTATUS,2) = 2
					EXCEPT
					SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
						ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
						INCOMETAX,SURCHARGE,EDUCATIONCESS
					FROM #DEDTEMP 
					WHERE ISNULL(TRANSSTATUS,2) = 2 
						--AND FORMID = 2 
						AND ENTRYTYPE <> 4
						--AND SECTIONID <> 5 
				END
				ELSE IF(@CLIENTID = 5)
					BEGIN
						INSERT INTO #DEDUCTIONDET 
						SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
							ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
							INCOMETAX,SURCHARGE,EDUCATIONCESS
						FROM #DEDTEMP
						WHERE FORMID IN (1, 3)
							OR (FORMID = 2 AND SECTIONID = 5 AND ENTRYTYPE = 4)
							OR (FORMID = 2 AND SECTIONID <> 5 AND ENTRYTYPE <> 1)
					END
				ELSE
				BEGIN
					INSERT INTO #DEDUCTIONDET
					SELECT DEDUCTIONID,DEDUCTEEID,BRANCHID,FORMID,QUARTER,
						ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
						INCOMETAX,SURCHARGE,EDUCATIONCESS
					FROM #DEDTEMP
				END
				
				IF OBJECT_ID('TEMPDB..#DEDTEMP') IS NOT NULL
					DROP TABLE #DEDTEMP

				SELECT DEDUCTEEID
				INTO #DEDUCTION
				FROM #DEDUCTIONDET DD WITH(NOLOCK) 
				    INNER JOIN #CHALLAN C ON DD.FORMID = C.FORMID
				WHERE MONTH(DEDUCTEDDATE) = @MONTH
				GROUP BY DEDUCTEEID
					 
				SELECT * INTO #UNLINKED FROM
				(
				    SELECT DEDUCTIONID,DD.DEDUCTEEID,DD.BRANCHID,DD.FORMID,QUARTER,ENTRYTYPE,DEDUCTEDDATE,EXCLUDEINAC,SECTIONID,TOTALDEDUCTED,
					   INCOMETAX,SURCHARGE,EDUCATIONCESS 
				    FROM #DEDUCTIONDET DD WITH(NOLOCK)
					   INNER JOIN DEDUCTEE D WITH(NOLOCK) ON D.DEDUCTEEID = DD.DEDUCTEEID
				    WHERE MONTH(DEDUCTEDDATE) = @MONTH 
					   AND D.PAN LIKE CASE WHEN (@CLIENTID <> 3 OR (D.PAN = 'PANNOTAVBL' OR D.PAN = 'PANINVALID' OR D.PAN = 'PANAPPLIED')) 
							 THEN '%%' ELSE ('[A-Z][A-Z][A-Z][P|H|C|J|F|A|T|B|L|G][A-Z][0-9][0-9][0-9][0-9][A-Z]') END 
					   AND NOT EXISTS
					   (
						  SELECT DEDUCTIONID FROM DEDCHALINK WITH(NOLOCK) WHERE DEDUCTIONID = DD.DEDUCTIONID
					   )
				)U
					 
				IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID IN (2, 3))
				    BEGIN
					   INSERT INTO @NONEMPLOYEE
					   SELECT D.DEDUCTEEID, NE.DEDUCTEECODE 
					   FROM DEDUCTEE D WITH(NOLOCK)
						  INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID  
						  INNER JOIN #DEDUCTION DD ON D.DEDUCTEEID = DD.DEDUCTEEID
				    END
					 
				IF EXISTS(SELECT FORMID FROM #CHALLAN WHERE FORMID = 1)
				    BEGIN 
					   INSERT INTO @EMPLOYEE
					   SELECT D.DEDUCTEEID, 2 AS DEDUCTEECODE 
					   FROM DEDUCTEE D WITH(NOLOCK)
						  INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID  
						  INNER JOIN #DEDUCTION DD ON D.DEDUCTEEID = DD.DEDUCTEEID			
				    END
				
				SELECT * INTO #DEDUCTEE FROM
				(
				    SELECT * FROM @EMPLOYEE
				    UNION 
				    SELECT * FROM @NONEMPLOYEE  
				)DE
				
				SELECT CB.BRANCHID,CB.BRANCHCODE,CB.BRANCHNAME,CB.NOCHALLANPAY 
				INTO #BRANCHES
				FROM BRANCHDEDUCTORS BD1 WITH(NOLOCK)
				    INNER JOIN DEDUCTOR D1 WITH(NOLOCK) ON BD1.DEDUCTORID = D1.DEDUCTORID 
				    INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON BD1.BRANCHID = CB.BRANCHID 
				WHERE BD1.QUARTER = @QUARTER AND UPPER(D1.TAN) <> 'TANAPPLIED'
				GROUP BY CB.BRANCHID,CB.BRANCHCODE,CB.BRANCHNAME,CB.NOCHALLANPAY
				
				SELECT CB.BRANCHID, CB.PARENTBRANCHID,SUM(DD.TOTALDEDUCTED) AS TDS , 
					CASE WHEN DD.FORMID = 1 THEN 100 
					    WHEN DD.FORMID = 3 THEN 500 
					    WHEN (@CLIENTID <> 11 AND DD.FORMID = 2 AND DD.ENTRYTYPE = 4 AND TS.SECTIONID = 5) OR (@CLIENTID = 11 AND DD.FORMID = 2 AND TS.SECTIONID = 5) THEN 200
					    WHEN (@26QCALLOWED = 1 AND DD.FORMID = 2 AND TS.SECTIONID = @194SECTIONID) THEN 600 
					    WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND DD.ENTRYTYPE = 4 AND TS.SECTIONID <> 5) THEN 400					    
					    ELSE 300
					    END AS FORMTYPE
				INTO #RESULT
				 FROM COMPANYBRANCH CB WITH (NOLOCK) 
					INNER JOIN #UNLINKED DD WITH (NOLOCK)  ON CB.BRANCHID = DD.BRANCHID  
					INNER JOIN TAXSECTIONS TS WITH (NOLOCK)  ON TS.SECTIONID = DD.SECTIONID  
				 WHERE MONTH(DEDUCTEDDATE) = @MONTH 
				 GROUP BY CB.BRANCHID, TS.SECTIONID, DD.FORMID, CB.PARENTBRANCHID, DD.ENTRYTYPE
				 
				SELECT RESULT.BRANCHID, RESULT.PARENTBRANCHID, RESULT.FORMTYPE , SUM(RESULT.TDS) AS TDS 
				INTO #FINAL
				FROM  #RESULT RESULT
				GROUP BY RESULT.BRANCHID, RESULT.FORMTYPE, RESULT.PARENTBRANCHID
				
				SELECT FINAL.BRANCHID, FINAL.PARENTBRANCHID, FINAL.FORMTYPE, ABS(ISNULL(AMOUNT, 0) - TDS) AS BALANCEAMOUNT 
				INTO #SUPERFINAL
				FROM #FINAL FINAL
				   LEFT JOIN #TEMPPARKEDAMOUNT PA WITH (NOLOCK) 
					  ON PA.BRANCHID = FINAL.BRANCHID AND PA.FORMTYPE = FINAL.FORMTYPE  
				WHERE FLOOR(ISNULL(AMOUNT, 0)) - TDS < 0 
					  AND (MONTHYEAR = @MONTHYEAR OR  PA.MONTHYEAR IS NULL)    
				
				INSERT INTO #DIFFERSMP
				SELECT CB.BRANCHID, SUPERFINAL.FORMTYPE, 
				    CASE WHEN SUPERFINAL.FORMTYPE = 200 
							OR SUPERFINAL.FORMTYPE = 300 
							OR SUPERFINAL.FORMTYPE = 400 
							OR SUPERFINAL.FORMTYPE = 600 THEN 2 
					   WHEN SUPERFINAL.FORMTYPE = 100 THEN 1 
					   ELSE 3 
					   END AS [FORMID] 
				    FROM #SUPERFINAL SUPERFINAL 
					INNER JOIN COMPANYBRANCH CB WITH (NOLOCK) 
					   ON SUPERFINAL.BRANCHID = CB.BRANCHID
					INNER JOIN COMPANYBRANCH CB1 WITH (NOLOCK) 
					   ON SUPERFINAL.PARENTBRANCHID = CB1.BRANCHID 
					ORDER BY CB1.BRANCHID 
					
					IF ((SELECT COUNT(BRANCHID) FROM #DIFFERSMP)= 0)
					BEGIN
						INSERT INTO #DIFFERSMP (BRANCHID, FORMTYPE, FORMID) VALUES(0, 1000 , 0)
					END
					SELECT DD.DEDUCTEEID, DD.DEDUCTIONID, BRANCHID, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED, 
					   DEDUCTEDDATE, FORMID, QUARTER,
					   CASE WHEN FORMID = 1 THEN 100 
						  WHEN FORMID = 3 THEN 500 
						  WHEN (@CLIENTID <> 11 AND FORMID=2 AND SECTIONID=5 AND ENTRYTYPE=4) OR (@CLIENTID = 11 AND FORMID=2 AND SECTIONID=5) THEN 200
						  WHEN (@26QCALLOWED = 1 AND FORMID = 2 AND SECTIONID = @194SECTIONID) THEN 600 
						  WHEN (@CLIENTID = 1 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID <> 5) THEN 400						  
						  ELSE 300 
						  END AS FORMTYPE, DE.DEDUCTEECODE,
					   CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 1 
						  WHEN (@CLIENTID = 1 AND FORMID = 2 AND ENTRYTYPE <> 4 AND SECTIONID NOT IN (5, 17)) THEN 0
						  WHEN (@CLIENTID <> 1 AND (ENTRYTYPE=4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5,17)))) THEN 1 ELSE 0 END ISFINACLE 
				    INTO #REQDATA 
				    FROM #UNLINKED DD WITH(NOLOCK)
					   INNER JOIN #DEDUCTEE DE ON DD.DEDUCTEEID = DE.DEDUCTEEID

					SELECT CB.BRANCHNAME + ' ('+ CB.BRANCHCODE + ')' AS BRANCHNAME, CB.BRANCHID, DD.SECTIONID,
							 TS.SECTIONNAME + '('+ TS.TAXNAME + ')' AS SECTIONNAME, DEDUCTEECODE, SUM(DD.INCOMETAX) INCOMETAX,
							 SUM(DD.SURCHARGE) SURCHARGE, SUM(DD.EDUCATIONCESS) EDUCATIONCESS, SUM(DD.TOTALDEDUCTED) TOTALDEDUCTED,
							 0 HASPARTPAYMENT, DD.QUARTER, DD.FORMID, ISFINACLE
					INTO #TEMPRESULT
						  FROM #REQDATA DD
							 INNER JOIN #BRANCHES CB ON CB.BRANCHID = DD.BRANCHID												
							 INNER JOIN TAXSECTIONS TS WITH (NOLOCK)  ON DD.SECTIONID = TS.SECTIONID --AND TS.FORMID = DD.FORMID	
							 LEFT JOIN #DIFFERSMP DFL WITH (NOLOCK)  ON DD.BRANCHID = DFL.BRANCHID AND DD.FORMTYPE = DFL.FORMTYPE
						  WHERE DD.TOTALDEDUCTED > 0 
							 AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
							 AND DD.QUARTER = @QUARTER							
							 AND DFL.BRANCHID IS NULL
						  GROUP BY DD.SECTIONID, SECTIONNAME, DEDUCTEECODE, TAXNAME, CB.BRANCHNAME, CB.BRANCHCODE, CB.BRANCHID, DD.QUARTER, DD.FORMID, ISFINACLE

					SELECT BRANCHNAME, BRANCHID, SECTIONID, SECTIONNAME, DEDUCTEECODE, 
						  ISNULL(CEILING(SUM(INCOMETAX)), 0) INCOMETAX, ISNULL(CEILING(SUM(SURCHARGE)), 0) SURCHARGE,
						  ISNULL(CEILING(SUM(EDUCATIONCESS)),0) EDUCATIONCESS, 
						  (ISNULL(CEILING(SUM(INCOMETAX)), 0) + ISNULL(CEILING(SUM(SURCHARGE)), 0) + ISNULL(CEILING(SUM(EDUCATIONCESS)),0)) TOTALDEDUCTED, 
						  MAX(HASPARTPAYMENT) HASPARTPAYMENT, QUARTER, FORMID, ISFINACLE
					INTO #TEMPQ
					   FROM #TEMPRESULT RESULT
					   GROUP BY SECTIONID, SECTIONNAME, DEDUCTEECODE, BRANCHNAME, BRANCHID, QUARTER, FORMID, ISFINACLE
				    
				    SELECT BRANCHNAME, Q.BRANCHID, Q.SECTIONID, SECTIONNAME, Q.DEDUCTEECODE, 
					   INCOMETAX, SURCHARGE, EDUCATIONCESS, Q.TOTALDEDUCTED, HASPARTPAYMENT, Q.QUARTER, FORMID, ISFINACLE 
				    INTO #TEMPSMP
				    FROM #TEMPQ Q
				    INNER JOIN CHALLANMAKEPAYMENT CMP WITH (NOLOCK)  
					   ON Q.BRANCHID = CMP.BRANCHID AND Q.SECTIONID = CMP.SECTIONID 
						  AND Q.QUARTER = CMP.QUARTER AND Q.DEDUCTEECODE = CMP.DEDUCTEECODE 
						  AND Q.TOTALDEDUCTED = CMP.TOTALDEDUCTED
					
				    EXEC('ALTER TABLE #TEMPSMP ADD CHALLANID INT IDENTITY(' + @CHALLANID + ', 1)')

					SELECT BRANCHID, FORMID, QUARTER, MAX(SERIALNO) AS SERIALNO
					INTO #TEMPY 
					 FROM CHALLANDETAIL WITH (NOLOCK) 
					 GROUP BY BRANCHID, FORMID, QUARTER

					SELECT ROW_NUMBER() OVER (PARTITION BY T.BRANCHID, T.FORMID, T.QUARTER ORDER BY T.BRANCHID) AS NUM,
						  SERIALNO, CHALLANID, T.BRANCHID, SECTIONID,
						  DEDUCTEECODE, INCOMETAX, SURCHARGE, EDUCATIONCESS, TOTALDEDUCTED,
						  T.FORMID, T.QUARTER 
					INTO #TEMPDATA
					   FROM #TEMPSMP T 
						  LEFT JOIN #TEMPY Y
						  ON T.BRANCHID = Y.BRANCHID AND T.FORMID = Y.FORMID AND T.QUARTER = Y.QUARTER  
					
				    /* INSERT INTO CHALLAN*/					
				    INSERT INTO CHALLANDETAIL (SERIALNO, BRANCHID, QUARTER, FORMID, ERETURNID, LINKDEDCOUNT, ISNILCHALLAN, 
					   ISUPDATECHALLAN, MODEOFPAYMENT, BANKCHALLANNO, LASTBANKCHALLANNO, TRNVOUCHERNO, LASTTRNVOUCHERNO, BANKID, LASTBANKID, 
					   CHALLANPAIDDATE, LASTCHALLANPAIDDATE, DATEOFDEBIT, SECTIONID, INCOMETAX, SURCHARGE, EDUCATIONCESS, INTEREST, 
					   PENALTY, OTHERS, CHALLANTOTAL, LASTCHALLANTOTAL, ISCOMPANY, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, TRANREFNO, 
					   TVRECEIPTNUMBER, ISAUTOGENERATED, ISOLTASINCLUDED, TEMPDATE, ISTTUMINCLUDED, MINORHEAD)                      
				    SELECT (NUM + ISNULL(SERIALNO, 0)) AS SERIALNO, BRANCHID, QUARTER, FORMID, 0 AS ERETURNID, 0 AS LINKEDCOUNT, 'N' AS ISNILLCHALLAN,
					   0 AS ISUPDATECHALLAN, 2 AS MODEOFPAYMENT, CHALLANID AS BANKCHALLANNO, CHALLANID AS LASTBANKCHALLANNO, '' AS TRNVOUCHERNO,
					   '' AS LASTTRNVOUCHERNO, @BANKID AS BANKID, @BANKID AS LASTBANKID, @TEMPDATE AS CHALLANPAIDDATE, @TEMPDATE AS CHALLANPAIDDATE,
					   NULL AS DATEOFDEBIT, CASE WHEN SECTIONID IN (23,24) THEN 15 ELSE SECTIONID END AS SECTIONID, INCOMETAX, SURCHARGE, 
					   EDUCATIONCESS, 0 INTEREST, 0 PENALTY, 0 OTHERS, TOTALDEDUCTED AS CHALLANTOTAL,
					   TOTALDEDUCTED AS LASTCHALLANTOTAL, CASE WHEN DEDUCTEECODE = 2 THEN 0 ELSE 1 END AS ISCOMPANY,
					   '' CHEQUENO, NULL CHEQUEDATE, '' CHEQUEDRAWNON, '' TRANREFNO, '' TVRECEIPTNUMBER, 1 AS ISAUTOGENERATED, 
					   0 AS ISOLTASINCLUDED, @TEMPDATE, 0 AS ISTTUMINCLUDED, 200 AS MINORHEAD
				    FROM #TEMPDATA DATA

				    /*SELECT UNLINKED DEDUCTIONS FOR GIVEN SECTIONID AND LINK IT FOR GIVEN CHALLNID*/
				    SELECT DD.DEDUCTIONID, FORMID, TOTALDEDUCTED, DEDUCTEEID, SECTIONID, BRANCHID, DEDUCTEDDATE, 
					   CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 1 
						  WHEN (@CLIENTID = 1 AND FORMID = 2 AND ENTRYTYPE <> 4 AND SECTIONID NOT IN (5, 17)) THEN 0
						  WHEN (@CLIENTID <> 1 AND (ENTRYTYPE=4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5,17)))) THEN 1 ELSE 0 END ISFINACLE 
				    INTO #UDED
				    FROM #UNLINKED DD WITH (NOLOCK)
				    WHERE MONTH(DEDUCTEDDATE) = @MONTH
					
				  SELECT CHALLANID, BANKCHALLANNO, CHALLANPAIDDATE 
					INTO #TEMPCHALL
				  FROM CHALLANDETAIL WITH (NOLOCK)  
				  WHERE CONVERT(VARCHAR(8),CHALLANPAIDDATE, 112) = CONVERT(VARCHAR(8), GETDATE(), 112)
					 AND ISAUTOGENERATED = 1

				SELECT DD.DEDUCTIONID, CHALL.CHALLANID, DD.BRANCHID AS BRANCHID
				INTO #TEMPDEDCHALINK
				    FROM #UDED DD
					   INNER JOIN #DEDUCTEE D WITH (NOLOCK) 
						  ON D.DEDUCTEEID=DD.DEDUCTEEID 
					   INNER JOIN #TEMPSMP T WITH (NOLOCK) 
						  ON DD.BRANCHID = T.BRANCHID 
							 AND DD.SECTIONID = T.SECTIONID 
							 AND (ISNULL(D.DEDUCTEECODE,2) = T.DEDUCTEECODE) 
							 AND DD.ISFINACLE = T.ISFINACLE
					   LEFT JOIN #DIFFERSMP DL WITH (NOLOCK) 
						  ON DD.BRANCHID = DL.BRANCHID 
							 AND DD.FORMID = DL.FORMID
					   INNER JOIN #TEMPCHALL CHALL ON CHALL.BANKCHALLANNO = T.CHALLANID
					   WHERE DD.TOTALDEDUCTED > 0 
						  AND MONTH(DD.DEDUCTEDDATE) = @MONTH 
					   GROUP BY DD.DEDUCTIONID, CHALL.CHALLANID, DD.BRANCHID

				    INSERT INTO DEDCHALINK(DEDUCTIONID,CHALLANID,BRANCHID) 
				    SELECT DEDUCTIONID, CHALLANID, BRANCHID AS BRANCHID
				    FROM #TEMPDEDCHALINK
					
				    SET @RESULT = 1
			 END
			 COMMIT 
		  END TRY	
		  
		  BEGIN CATCH
			 SET @RESULT = -1
			 ROLLBACK
		  END CATCH
    
    IF (@RESULT = 1)
	   BEGIN
		  UPDATE CHALLANDETAIL SET CHALLANPAIDDATE = NULL, LASTCHALLANPAIDDATE = NULL,
			 BANKCHALLANNO = NULL, LASTBANKCHALLANNO = NULL 
		  WHERE ISAUTOGENERATED = 1 
			 AND TEMPDATE = @TEMPDATE

		  DELETE FROM CHALLANMAKEPAYMENT
	   END
		
    IF OBJECT_ID('TEMPDB..#TEMPPARKEDAMOUNT') IS NOT NULL
	   DROP TABLE #TEMPPARKEDAMOUNT
    IF OBJECT_ID('TEMPDB..#CHALLAN') IS NOT NULL
	   DROP TABLE #CHALLAN
    IF OBJECT_ID('TEMPDB..#DEDUCTIONDET') IS NOT NULL
	   DROP TABLE #DEDUCTIONDET
    IF OBJECT_ID('TEMPDB..#DEDUCTION') IS NOT NULL
	   DROP TABLE #DEDUCTION
    IF OBJECT_ID('TEMPDB..#DEDUCTEE') IS NOT NULL
	   DROP TABLE #DEDUCTEE
    IF OBJECT_ID('TEMPDB..#UDED') IS NOT NULL
	   DROP TABLE #UDED
    IF OBJECT_ID('TEMPDB..#UNLINKED') IS NOT NULL
	   DROP TABLE #UNLINKED
    IF OBJECT_ID('TEMPDB..#REQDATA') IS NOT NULL
	   DROP TABLE #REQDATA
    IF OBJECT_ID('TEMPDB..#BRANCHES') IS NOT NULL
	   DROP TABLE #BRANCHES
    IF OBJECT_ID('TEMPDB..#DIFFERSMP') IS NOT NULL
	   DROP TABLE #DIFFERSMP
    IF OBJECT_ID('TEMPDB..#TEMPSMP') IS NOT NULL
	   DROP TABLE #TEMPSMP
    IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL
	   DROP TABLE #RESULT
	IF OBJECT_ID('TEMPDB..#TEMPRESULT') IS NOT NULL
	   DROP TABLE #TEMPRESULT
    IF OBJECT_ID('TEMPDB..#FINAL') IS NOT NULL
	   DROP TABLE #FINAL
    IF OBJECT_ID('TEMPDB..#SUPERFINAL') IS NOT NULL
	   DROP TABLE #SUPERFINAL
	IF OBJECT_ID('TEMPDB..#TEMPQ') IS NOT NULL
	   DROP TABLE #TEMPQ
	IF OBJECT_ID('TEMPDB..#TEMPY') IS NOT NULL
	   DROP TABLE #TEMPY
	IF OBJECT_ID('TEMPDB..#TEMPDATA') IS NOT NULL
	   DROP TABLE #TEMPDATA
	IF OBJECT_ID('TEMPDB..#TEMPCHALL') IS NOT NULL
	   DROP TABLE #TEMPCHALL
	IF OBJECT_ID('TEMPDB..#TEMPDEDCHALINK') IS NOT NULL
	   DROP TABLE #TEMPDEDCHALINK   
    SELECT @RESULT
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetTTUMData')
DROP PROCEDURE USP_TDS_GetTTUMData
GO
CREATE PROCEDURE USP_TDS_GetTTUMData 
    @MONTH INT ,     
    @ISNULL BIT,    
    @FINYEAR INT,  
    @CLIENTID INT    
AS      
	BEGIN
		--194N Related Changes Begin
		DECLARE @194NSECTIONID INT, @26QCALLOWED BIT = 0;
		SET @194NSECTIONID = (SELECT SECTIONID FROM TAXSECTIONS WITH(NOLOCK) WHERE SECTIONNAME = '194N')
		IF(@CLIENTID = 3 OR @CLIENTID = 5 OR @CLIENTID = 10 
			OR @CLIENTID = 15 OR @CLIENTID = 16 OR @CLIENTID = 11
			OR @CLIENTID = 14)
			BEGIN
				SET @26QCALLOWED = 1
			END
		--194N Related Changes End
		CREATE TABLE #TEMPFINAL(CHALLANID INT, MONTH INT, ENTRYTYPE INT, FORMTYPE VARCHAR(5));
			      
		IF (@MONTH < 4)    
			SET @FINYEAR = @FINYEAR + 1    
		DECLARE @SQLQUERY NVARCHAR(MAX) 
		    
		SELECT CHALLANID, MONTH(DEDUCTEDDATE) MONTH, 
			CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 4
				 WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND ENTRYTYPE <> 4 AND DD.SECTIONID NOT IN (5, 17)) THEN 1
				 WHEN (@CLIENTID = 15 AND (ENTRYTYPE = 4 OR ENTRYTYPE = 1)) THEN 4  
				 WHEN (@CLIENTID <> 1 AND (ENTRYTYPE = 4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5,17)))) THEN 4 
				 ELSE 1 END AS ENTRYTYPE
		INTO #TEMP   
		FROM DEDUCTIONDETAIL DD WITH (NOLOCK)   
			INNER JOIN DEDCHALINK DCL WITH (NOLOCK) ON DD.DEDUCTIONID = DCL.DEDUCTIONID     
		WHERE MONTH(DEDUCTEDDATE) = @MONTH AND DD.PAYMENTMADE > 0  
		GROUP BY CHALLANID, MONTH(DEDUCTEDDATE),
			(CASE WHEN (@CLIENTID = 1 AND ENTRYTYPE = 4) THEN 4 
				  WHEN (@CLIENTID = 1 AND DD.FORMID = 2 AND ENTRYTYPE <> 4 AND DD.SECTIONID NOT IN (5, 17)) THEN 1 
			      WHEN (@CLIENTID = 15 AND (ENTRYTYPE = 4 OR ENTRYTYPE = 1)) THEN 4 
			      WHEN (@CLIENTID <> 1 AND (ENTRYTYPE = 4 OR (ENTRYTYPE <> 4 AND SECTIONID NOT IN(5, 17)))) THEN 4
			      ELSE 1 END)
			      
		IF(@CLIENTID = 14)  
		BEGIN
			SELECT CHALLANID, @MONTH AS MONTH, 5 AS ENTRYTYPE, ('26' + SUBSTRING(BGLCODE,3,3)) AS FORMTYPE
			INTO #OTHERBGLCHALLAN
			FROM CHALLANDETAIL CD WITH(NOLOCK) 
				INNER JOIN TDSRATE TD WITH(NOLOCK) ON TD.SECTIONID  = CD.SECTIONID
					AND TD.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS = CD.DEBITACCOUNTNO COLLATE SQL_Latin1_General_CP1_CI_AS
			WHERE CHALLANID NOT IN (SELECT CHALLANID FROM #TEMP) 
				AND MONTH(TEMPDATE) IN (SELECT MONTH(GETDATE()))
				AND LEN(TD.BGLCODE) > 4 
				AND DESCRIPTION LIKE 'CORP%' 
				AND TD.SECTIONID <> 5
			GROUP BY CHALLANID,TD.BGLCODE	
			
			SELECT CHALLANID, @MONTH AS MONTH, 5 AS ENTRYTYPE, ('26' + SUBSTRING(BGLCODE,3,3)) AS FORMTYPE
				--,BRANCHID,CHALLANTOTAL
			INTO #194ABGLCHALLAN
			FROM CHALLANDETAIL CD WITH(NOLOCK) 
				INNER JOIN TDSRATE TD WITH(NOLOCK) ON TD.SECTIONID  = CD.SECTIONID 
					AND TD.BGLCODE COLLATE SQL_Latin1_General_CP1_CI_AS = CD.DEBITACCOUNTNO COLLATE SQL_Latin1_General_CP1_CI_AS
			WHERE CHALLANID NOT IN (SELECT CHALLANID FROM #TEMP) 
				AND MONTH(TEMPDATE) IN (SELECT MONTH(GETDATE()))
				AND LEN(TD.BGLCODE) > 4 
				AND DESCRIPTION LIKE 'CORP%' 
				AND TD.SECTIONID = 5
			GROUP BY CHALLANID,TD.BGLCODE
			--,BRANCHID,CHALLANTOTAL	
			
			--SELECT T.CHALLANID,T.MONTH,T.ENTRYTYPE,T.FORMTYPE
			--INTO #194ABGLCHALLAN
			--FROM PARKEDAMOUNT P 
			--	 INNER JOIN #194ABGLCHALLANTEMP 
			--		T ON  T.BRANCHID = P.BRANCHID 
			--			AND T.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
			--				= P.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS
			--			AND T.CHALLANTOTAL = P.AMOUNT
			--WHERE P.FORMTYPE IN ('26001','26101')
			
			INSERT INTO #TEMPFINAL
			SELECT CHALLANID, MONTH, ENTRYTYPE, FORMTYPE
			FROM #OTHERBGLCHALLAN
			UNION
			SELECT CHALLANID, MONTH, ENTRYTYPE, FORMTYPE
			FROM #194ABGLCHALLAN
			UNION
			SELECT CHALLANID,MONTH,ENTRYTYPE,'' AS FORMTYPE
			FROM #TEMP
			
			IF OBJECT_ID('TEMPDB..#OTHERBGLCHALLAN') IS NOT NULL
				DROP TABLE #OTHERBGLCHALLAN
			IF OBJECT_ID('TEMPDB..#194ABGLCHALLAN') IS NOT NULL
				DROP TABLE #194ABGLCHALLAN	
			IF OBJECT_ID('TEMPDB..#194ABGLCHALLANTEMP') IS NOT NULL
				DROP TABLE #194ABGLCHALLANTEMP								
			
		END
		ELSE
		BEGIN
			INSERT INTO #TEMPFINAL
			SELECT CHALLANID, MONTH, ENTRYTYPE,'' AS FORMTYPE
			FROM #TEMP 
		END
		
		IF OBJECT_ID('TEMPDB..#TEMP') IS NOT NULL
			DROP TABLE #TEMP
				
		IF(@CLIENTID = 14)
		BEGIN
				SET @SQLQUERY = 'SELECT ACCOUNTNO, CB.BRANCHID, CB.BRANCHCODE, PA.FORMTYPE, SUM(Q.AMOUNT) AS AMOUNT, Q.MONTH
						 INTO #FINALRESULT  
						 FROM PARKEDAMOUNT PA WITH (NOLOCK) 
							INNER JOIN 
							(    
								SELECT CD.CHALLANID, CD.QUARTER, CD.SECTIONID, CD.BRANCHID,  
								CASE WHEN CD.FORMID = 3 THEN ''27Q'' 
									 WHEN ('+ CAST(@CLIENTID AS VARCHAR) +' <> 11 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID = 5)  
											OR ('+ CAST(@CLIENTID AS VARCHAR) +' = 11 AND FORMID = 2 AND SECTIONID = 5) 
											OR ('+ CAST(@CLIENTID AS VARCHAR) +' = 15 AND FORMID = 2 AND ENTRYTYPE IN (1, 4) AND SECTIONID = 5) THEN ''26QI'' 
									 WHEN CD.FORMID = 1 THEN ''24Q'' 
									 WHEN (' + CAST(@26QCALLOWED AS VARCHAR) + ' = 1 AND FORMID = 2 AND SECTIONID = ' + CAST(@194NSECTIONID AS VARCHAR) + ') THEN ''26QC''
								     WHEN (' + CAST(@CLIENTID AS VARCHAR) + ' = 1 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID <> 5) THEN ''26QVS''								      
								     ELSE FORMTYPE END AS FORMTYPE,  
									 SUM(CD.CHALLANTOTAL) AS AMOUNT, T.MONTH 
								FROM CHALLANDETAIL CD WITH (NOLOCK)   
									INNER JOIN #TEMPFINAL T ON T.CHALLANID = CD.CHALLANID 
								WHERE ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 '    
								IF (@ISNULL = 1)    
									SET @SQLQUERY = @SQLQUERY + ' AND BANKCHALLANNO IS NULL AND CHALLANPAIDDATE IS NULL '     
								SET @SQLQUERY = @SQLQUERY + ' GROUP BY CD.BRANCHID, CD.FORMID, CD.SECTIONID, 
											CD.CHALLANID, CD.QUARTER, T.ENTRYTYPE, T.MONTH, FORMTYPE    
							) Q    
							ON PA.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS = Q.FORMTYPE COLLATE SQL_Latin1_General_CP1_CI_AS 
								AND PA.BRANCHID = Q.BRANCHID 
								AND SUBSTRING(CAST(MONTHYEAR AS VARCHAR), CASE WHEN LEN(MONTHYEAR) = 6 THEN 1 ELSE 0 END, 2) = Q.MONTH  
							INNER JOIN COMPANYBRANCH CB ON CB.BRANCHID = PA.BRANCHID 
						GROUP BY ACCOUNTNO, CB.BRANCHCODE, PA.FORMTYPE, CB.BRANCHID, Q.MONTH '	
				IF (@CLIENTID = 14)
				BEGIN
					SET @SQLQUERY = @SQLQUERY + 'SELECT ACCOUNTNO, BRANCHID, BRANCHCODE, ''All'' AS FORMTYPE, SUM(AMOUNT) AS AMOUNT, MONTH 
												 FROM  #FINALRESULT WITH(NOLOCK) 
												 GROUP BY ACCOUNTNO,BRANCHID,BRANCHCODE,MONTH'								  
				END
				print @SQLQUERY
				EXEC SP_EXECUTESQL @SQLQUERY 	
											
			END
		ELSE
		BEGIN
			SET @SQLQUERY = 'SELECT ACCOUNTNO, CB.BRANCHID, CB.BRANCHCODE, PA.FORMTYPE, SUM(Q.AMOUNT) AS AMOUNT, Q.MONTH
							 INTO #FINALRESULT  
							 FROM PARKEDAMOUNT PA WITH (NOLOCK) 
								INNER JOIN 
								(    
									SELECT CD.CHALLANID, CD.QUARTER, CD.SECTIONID, CD.BRANCHID,  
									CASE WHEN CD.FORMID = 3 THEN ''27Q'' 
										 WHEN ('+ CAST(@CLIENTID AS VARCHAR) +' <> 11 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID = 5)  
												OR ('+ CAST(@CLIENTID AS VARCHAR) +' = 11 AND FORMID = 2 AND SECTIONID = 5) 
												OR ('+ CAST(@CLIENTID AS VARCHAR) +' = 15 AND FORMID = 2 AND ENTRYTYPE IN (1, 4) AND SECTIONID = 5) THEN ''26QI'' 
										 WHEN CD.FORMID = 1 THEN ''24Q'' 
										 WHEN (' + CAST(@26QCALLOWED AS VARCHAR) + ' = 1 AND FORMID = 2 AND SECTIONID = ' + CAST(@194NSECTIONID AS VARCHAR) + ') THEN ''26QC''
										 WHEN (' + CAST(@CLIENTID AS VARCHAR) + ' = 1 AND FORMID = 2 AND ENTRYTYPE = 4 AND SECTIONID <> 5) THEN ''26QVS''								      
										 ELSE ''26QV'' END AS FORMTYPE,  
										 SUM(CD.CHALLANTOTAL) AS AMOUNT, T.MONTH 
									FROM CHALLANDETAIL CD WITH (NOLOCK)   
										INNER JOIN #TEMPFINAL T ON T.CHALLANID = CD.CHALLANID    
									WHERE ISAUTOGENERATED = 1 AND ISOLTASINCLUDED = 0 '    
									IF (@ISNULL = 1)    
										SET @SQLQUERY = @SQLQUERY + ' AND BANKCHALLANNO IS NULL AND CHALLANPAIDDATE IS NULL '     
									SET @SQLQUERY = @SQLQUERY + ' GROUP BY CD.BRANCHID, CD.FORMID, CD.SECTIONID, 
												CD.CHALLANID, CD.QUARTER, T.ENTRYTYPE, T.MONTH    
								) Q    
								ON PA.FORMTYPE = Q.FORMTYPE AND PA.BRANCHID = Q.BRANCHID 
									AND SUBSTRING(CAST(MONTHYEAR AS VARCHAR), CASE WHEN LEN(MONTHYEAR) = 6 THEN 1 ELSE 0 END, 2) = Q.MONTH  
								INNER JOIN COMPANYBRANCH CB ON CB.BRANCHID = PA.BRANCHID 
							GROUP BY ACCOUNTNO, CB.BRANCHCODE, PA.FORMTYPE, CB.BRANCHID, Q.MONTH '
								
				IF (@CLIENTID = 14 OR @CLIENTID = 15)
				BEGIN
					SET @SQLQUERY = @SQLQUERY + 'SELECT ACCOUNTNO, BRANCHID, BRANCHCODE, ''All'' AS FORMTYPE, SUM(AMOUNT) AS AMOUNT, MONTH 
												 FROM  #FINALRESULT WITH(NOLOCK) 
												 GROUP BY ACCOUNTNO,BRANCHID,BRANCHCODE,MONTH'								  
				END
			ELSE
				BEGIN
					SET @SQLQUERY = @SQLQUERY + 'SELECT * FROM  #FINALRESULT WITH(NOLOCK)'
				END          
			EXEC SP_EXECUTESQL @SQLQUERY 								
		END
		
		IF OBJECT_ID('TEMPDB..#TEMPFINAL') IS NOT NULL
			DROP TABLE #TEMPFINAL
	END  
GO
IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetUsersPaged')
DROP PROCEDURE [USP_TDS_GetUsersPaged]
GO  
CREATE PROCEDURE [dbo].[USP_TDS_GetUsersPaged]  
 @StartRow INT,  
 @PageSize INT,  
 @USERID INT,  
 @BRANCHID INT,  
 @IncludeChild BIT,  
 @USERNAME VARCHAR(20) = NULL,  
 @BRANCHNAMECODE VARCHAR(100) = NULL  
AS  
 BEGIN  
  /* The number of rows affected by the different commands does not interest the application, so turn NOCOUNT ON*/  
  SET NOCOUNT ON  
  /* Determine the first record and last record */  
  DECLARE @FirstRec int, @LastRec int  
  
  SELECT @FirstRec = (@StartRow - 1) * @PageSize  
  SELECT @LastRec = (@StartRow * @PageSize + 1);  
    
  DECLARE @ResultTable TABLE(ID INT IDENTITY(1,1),USERID INT,BRANCHID INT,USERNAME VARCHAR(20),[PASSWORD] VARCHAR(200),  
           ISSUPERADMIN BIT,ISBRANCHADMIN BIT,ISACTIVE BIT,ISCHECKER BIT,ISAUDITOR BIT, BRANCHNAME VARCHAR(100),BRANCHCODE VARCHAR(10),LastLoginTime datetime);   
    
  DECLARE @ISSUPERADMIN BIT;  
  DECLARE @ISBRANCHADMIN BIT;  
    
  DECLARE @SQLQUERY NVARCHAR(MAX)  
  DECLARE @ISWHERENOTAVAIL BIT  
  
  SELECT @ISSUPERADMIN = ISSUPERADMIN,@ISBRANCHADMIN = ISBRANCHADMIN  FROM USERMASTER WHERE USERID = @USERID  
  
  IF(@ISSUPERADMIN = 1)  
   BEGIN  
       SET @SQLQUERY = 'SELECT USERID,UM.BRANCHID AS UserBranchID,USERNAME,[PASSWORD],ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE,
						ISNULL(ISCHECKER,0)ISCHECKER,ISNULL(ISAUDITOR,0)ISAUDITOR ,CB.BRANCHNAME AS UserBranch,CB.BRANCHCODE,LastLoginTime  
                     FROM USERMASTER UM WITH(NOLOCK) INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON UM.BRANCHID = CB.BRANCHID'  
    SET @ISWHERENOTAVAIL = 1;  
   END  
  ELSE IF(@ISBRANCHADMIN = 1)  
   BEGIN  
    IF(@INCLUDECHILD = 1)  
     BEGIN  
      SET @SQLQUERY = 'SELECT USERID,UM.BRANCHID AS UserBranchID,USERNAME,[PASSWORD],ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE,
							ISNULL(ISCHECKER,0)ISCHECKER,ISNULL(ISAUDITOR,0)ISAUDITOR, CB.BRANCHNAME AS UserBranch,  
            CB.BRANCHCODE,LastLoginTime FROM USERMASTER UM 
            LEFT JOIN COMPANYBRANCH CB WITH(NOLOCK) ON UM.BRANCHID = CB.BRANCHID  
             WHERE UM.BRANCHID IN (  
                SELECT BRANCHID FROM COMPANYBRANCH WITH(NOLOCK) WHERE PARENTBASEID LIKE    
                (  
                 SELECT PARENTBASEID FROM COMPANYBRANCH WHERE PARENTBASEID LIKE   
                 (  
                  SELECT CB.PARENTBASEID FROM USERMASTER US WITH(NOLOCK) INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON US.BRANCHID = CB.BRANCHID   
                  WHERE USERID = ' + CAST(@USERID AS VARCHAR) + ') + ''%'' AND BRANCHID = ' + CAST(@BRANCHID AS VARCHAR) + ') + ''%'')'  
      SET @ISWHERENOTAVAIL = 0;  
     END  
    ELSE  
     BEGIN  
      SET @SQLQUERY = 'SELECT USERID,UM.BRANCHID AS UserBranchID,USERNAME,[PASSWORD],ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE,  
									ISNULL(ISCHECKER,0)ISCHECKER,ISNULL(ISAUDITOR,0)ISAUDITOR,CB.BRANCHNAME AS UserBranch,CB.BRANCHCODE,LastLoginTime  
					   FROM USERMASTER UM WITH(NOLOCK) 
					   INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) on UM.BRANCHID  = CB.BRANCHID  
					WHERE USERID = ' + CAST(@USERID AS VARCHAR) + ''  
      SET @ISWHERENOTAVAIL = 0;  
    END  
   END  
  ELSE   
   BEGIN  
    SET @SQLQUERY = 'SELECT USERID,UM.BRANCHID AS UserBranchID,USERNAME,[PASSWORD],ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE, 
							   	 ISNULL(ISCHECKER,0)ISCHECKER,ISNULL(ISAUDITOR,0)ISAUDITOR,CB.BRANCHNAME AS UserBranch,CB.BRANCHCODE,LastLoginTime  
                     FROM USERMASTER UM WITH(NOLOCK) INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) on UM.BRANCHID  = CB.BRANCHID  
         WHERE  USERID = ' + CAST(@USERID AS VARCHAR) + ''  
    SET @ISWHERENOTAVAIL = 0;  
   END  
     
  IF @USERNAME IS NOT NULL  
   BEGIN  
    IF @ISWHERENOTAVAIL = 1  
     BEGIN  
      SET @SQLQUERY = @SQLQUERY + ' WHERE ';  
      SET @ISWHERENOTAVAIL = 0;  
     END  
    ELSE  
     BEGIN  
      SET @SQLQUERY = @SQLQUERY + ' AND ';  
     END  
    SET @SQLQUERY = @SQLQUERY + 'USERNAME LIKE ''%' + CAST(@USERNAME AS VARCHAR(100)) + '%'''  
   END  
    
  IF @BRANCHNAMECODE IS NOT NULL  
   BEGIN  
    IF @ISWHERENOTAVAIL = 1  
     BEGIN  
      SET @SQLQUERY = @SQLQUERY + ' WHERE ';  
      SET @ISWHERENOTAVAIL = 0;  
     END  
    ELSE  
     BEGIN  
      SET @SQLQUERY = @SQLQUERY + ' AND ';  
     END  
    SET @SQLQUERY = @SQLQUERY + '(CB.BRANCHNAME LIKE ''%' + CAST(@BRANCHNAMECODE AS VARCHAR(100)) + '%'' OR CB.BRANCHCODE LIKE ''%' + CAST(@BRANCHNAMECODE AS VARCHAR(100)) + '%'')'  
   END  
    
  INSERT INTO @ResultTable EXECUTE SP_EXECUTESQL @SQLQUERY;  
    
  SELECT TOP (@LastRec-1) *FROM @ResultTable WHERE ID > @FirstRec AND ID < @LastRec;  
    
  /* Turn NOCOUNT back OFF */  
  SET NOCOUNT OFF  
 END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveUser')
DROP PROCEDURE [USP_TDS_SaveUser]
GO  
CREATE PROCEDURE USP_TDS_SaveUser          
 @USERID INT,          
 @USERNAME VARCHAR(20),          
 @PASSWORD VARCHAR(200),          
 @ISSUPERADMIN BIT,          
 @ISBRANCHADMIN BIT,          
 @ISACTIVE BIT,          
 @BRANCHID INT,          
 @LastLoginTime DateTime = NULL,  
 @ISCHECKER BIT = NULL,  
 @ISAUDITOR BIT = NULL,
 @ISROLEREQUIRED BIT = 0,
 @PWDCHGDATE DATETIME = NULL, 
 @WRONGPWDCOUNT INT=NULL,
 @ISPASSWORDTRACK BIT=0 
AS          
BEGIN          
 --checking for user already exists with the same username          
 --if user exist set @userid=-1   
 DECLARE @ROLEID INT;
 SET @ROLEID = -1;
 IF((SELECT COUNT(USERNAME) FROM USERMASTER WITH(NOLOCK) WHERE USERNAME=@USERNAME AND USERID <> @USERID)>0)          
 BEGIN          
   SET @USERID=-1          
 END          
 --if doesnt exists return the current userid          
 ELSE          
 BEGIN          
  IF (@USERID= -1)  --NEW USER          
   BEGIN          
    INSERT INTO dbo.USERMASTER([USERNAME],PASSWORD,BRANCHID,ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE,LastLoginTime, ISCHECKER, ISAUDITOR, WRONGPWDCOUNT)          
                   VALUES(@USERNAME,@PASSWORD,@BRANCHID,@ISSUPERADMIN,@ISBRANCHADMIN,@ISACTIVE,@LastLoginTime,@ISCHECKER, @ISAUDITOR,0)          
     SET @USERID=SCOPE_IDENTITY();   
     SELECT @ROLEID = CASE WHEN @ISSUPERADMIN = 1 THEN SAROLE
						   WHEN @ISBRANCHADMIN = 1 THEN BAROLE
						   ELSE BUROLE END FROM DEFAULTSETTINGS
  IF(@ISROLEREQUIRED = 1)
   BEGIN
   	IF(@ROLEID IS NOT NULL)
	 BEGIN
		INSERT INTO ROLEUSER VALUES(@ROLEID , @USERID)
	 END
   END 
  END         
  ELSE
  BEGIN          
     IF(@LastLoginTime IS NULL)          
      BEGIN          
           UPDATE dbo.USERMASTER SET [USERNAME]=@USERNAME,PASSWORD=@PASSWORD,[BRANCHID]=@BRANCHID,ISSUPERADMIN=@ISSUPERADMIN,          
                   ISBRANCHADMIN=@ISBRANCHADMIN,ISACTIVE=@ISACTIVE,ISCHECKER = @ISCHECKER, ISAUDITOR = @ISAUDITOR,WRONGPWDCOUNT=@WRONGPWDCOUNT,PWDCHGDATE = @PWDCHGDATE WHERE USERID=@USERID                       
      END          
     ELSE          
      BEGIN                
        UPDATE dbo.USERMASTER SET [USERNAME]=@USERNAME,PASSWORD=@PASSWORD,[BRANCHID]=@BRANCHID,ISSUPERADMIN=@ISSUPERADMIN,          
           ISBRANCHADMIN=@ISBRANCHADMIN,ISACTIVE=@ISACTIVE,LastLoginTime=@LastLoginTime,ISCHECKER = @ISCHECKER, ISAUDITOR = @ISAUDITOR,WRONGPWDCOUNT=@WRONGPWDCOUNT,PWDCHGDATE = @PWDCHGDATE WHERE USERID=@USERID          
      END          
    END       
 END
 IF(@ISPASSWORDTRACK = 1)
 BEGIN
	IF(@USERID != 1)   
		BEGIN    
			DECLARE @RETAIN INT  
			DECLARE @PWDCOUNT INT  
			DECLARE @EXISTINGPWDID INT
				IF  EXISTS (SELECT * FROM sys.tables WHERE name = N'PASSWORDHISTORY' AND type = 'U')
					BEGIN
						SELECT @EXISTINGPWDID = PWDHISTORYID FROM PASSWORDHISTORY WITH(NOLOCK) WHERE USERID = @USERID AND PASSWORD = @PASSWORD
						IF (@EXISTINGPWDID IS NULL) 
						BEGIN  
							UPDATE USERMASTER SET PASSWORD=@PASSWORD, WRONGPWDCOUNT=0 WHERE USERID=@USERID
							INSERT INTO PASSWORDHISTORY (USERID, PASSWORD) VALUES (@USERID, @PASSWORD)  
							SELECT @RETAIN = RETAINPREVPWD FROM DEFAULTSETTINGS WITH(NOLOCK) 
							SELECT @PWDCOUNT = COUNT(PWDHISTORYID) FROM PASSWORDHISTORY WITH(NOLOCK) WHERE USERID = @USERID  
								IF @PWDCOUNT > @RETAIN  
								BEGIN  
									SELECT *, ROW_NUMBER() OVER(ORDER BY PWDHISTORYID DESC) ROWNUM INTO #HISTORYREMOVE  
									FROM PASSWORDHISTORY WITH(NOLOCK)  
									WHERE USERID = @USERID  
									DELETE FROM PASSWORDHISTORY   
									WHERE USERID = @USERID AND  
									PWDHISTORYID IN   
									(SELECT PWDHISTORYID FROM #HISTORYREMOVE WITH(NOLOCK) WHERE ROWNUM > @RETAIN)  
								END  
								UPDATE USERMASTER SET PWDCHGDATE = GETDATE() WHERE USERID = @USERID
								SELECT @@ROWCOUNT
								SELECT @EXISTINGPWDID
						END
					END
		END
END          
 SELECT (@USERID)userID          
END 
GO


IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_UpdateUserDetails')
DROP PROCEDURE USP_TDS_UpdateUserDetails
GO
CREATE PROCEDURE USP_TDS_UpdateUserDetails
	@userName VARCHAR(20),
	@password NVARCHAR(200),
	@oldUserName VARCHAR(20) = NULL
AS
BEGIN
	IF EXISTS(SELECT * FROM USERMASTER WHERE USERNAME = @userName)
	BEGIN
		UPDATE USERMASTER
		SET [PASSWORD] = @password
		WHERE USERNAME = @userName
	END
	ELSE
	BEGIN
		IF EXISTS(SELECT * FROM USERMASTER WHERE USERNAME = @oldUserName)
		BEGIN
			UPDATE USERMASTER
			SET [PASSWORD] = @password,
			USERNAME = @userName
			WHERE USERNAME = @oldUserName
		END
	END
END
GO

/****** Object:  StoredProcedure [dbo].[USP_TDS_SaveUsers]    Script Date: 10/22/2012 17:09:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveUsers')
DROP PROCEDURE [USP_TDS_SaveUsers]
GO  
CREATE PROC [dbo].[USP_TDS_SaveUsers]        
 @USERID INT,        
 @USERNAME VARCHAR(20),        
 @PASSWORD VARCHAR(200),        
 @ISSUPERADMIN BIT,        
 @ISBRANCHADMIN BIT,        
 @ISACTIVE BIT,        
 @BRANCHID INT,        
 @LastLoginTime DateTime = NULL,  
 @ISCHECKER BIT=NULL        
AS        
BEGIN        
 INSERT INTO dbo.USERMASTER([USERNAME],PASSWORD,BRANCHID,ISSUPERADMIN,ISBRANCHADMIN,ISACTIVE,LastLoginTime,ISCHECKER)        
 VALUES(@USERNAME,@PASSWORD,@BRANCHID,@ISSUPERADMIN,@ISBRANCHADMIN,@ISACTIVE,@LastLoginTime,@ISCHECKER)        
   SET @USERID=SCOPE_IDENTITY();        
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetChallanStatus')
DROP PROCEDURE USP_TDS_GetChallanStatus
GO
CREATE PROCEDURE USP_TDS_GetChallanStatus  
@CHALLANID INT      
AS      
BEGIN      
   DECLARE @ISUSED BIT   
   
   IF((SELECT COUNT(CDA.AUDITID) 
	   FROM CHALLANDETAIL CD  WITH(NOLOCK)  
			INNER JOIN CHALLANDETAILAUDIT CDA WITH(NOLOCK) 
				ON CD.CHALLANID=CDA.RECORDID 
		WHERE CD.CHALLANID=@CHALLANID 
			AND CDA.TRANSSTATUS=2 ) > 0)    
		 BEGIN      
			SET @ISUSED=1  
		 END      
     ELSE      
		 BEGIN      
			SET @ISUSED=0  
		 END      
     SELECT @ISUSED       
END
GO  
  

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GETDEDUCTEEIDBASEDONREFERENCEANDBRANCH')
DROP PROCEDURE USP_TDS_GETDEDUCTEEIDBASEDONREFERENCEANDBRANCH
GO
CREATE PROCEDURE USP_TDS_GETDEDUCTEEIDBASEDONREFERENCEANDBRANCH 
	@BRANCHCODES NVARCHAR(MAX),
	@REFERENCENO NVARCHAR(MAX),                    
	@ISDEDUCTEE BIT          
AS          
	BEGIN          
		DECLARE @QUERY NVARCHAR(MAX)          
		DECLARE @JION VARCHAR(20);

		SELECT DISTINCT * INTO #TEMPBR FROM DBO.UDF_TDS_SPLITSTRING(@BRANCHCODES,',') 
		SELECT DISTINCT * INTO #TEMPREF FROM DBO.UDF_TDS_SPLITSTRING(@REFERENCENO,',')
		
		SELECT BRANCHID, BRANCHCODE INTO #COMPANYBRANCH FROM COMPANYBRANCH WITH (NOLOCK)
		SELECT DEDUCTEEID INTO #NONEMPLOYEE FROM NONEMPLOYEE WITH (NOLOCK)
		SELECT DEDUCTEEID INTO #EMPLOYEE FROM EMPLOYEE WITH(NOLOCK)
		SELECT BRANCHID, DEDUCTEEID, REFERENCENO, PAN, PANREFERENCE 
			INTO #DEDUCTEE
			FROM DEDUCTEE WITH (NOLOCK)
		
		SELECT D.BRANCHID,C.BRANCHCODE,D.DEDUCTEEID,D.REFERENCENO,D.PAN,D.PANREFERENCE 
		INTO #DEDTOUSE 
		FROM #DEDUCTEE D 
			INNER JOIN #COMPANYBRANCH C ON D.BRANCHID = C.BRANCHID
			INNER JOIN #TEMPBR TB ON TB.DATA = C.BRANCHCODE
			INNER JOIN #TEMPREF TR ON TR.DATA = D.REFERENCENO    
		WHERE DEDUCTEEID NOT IN (SELECT DEDUCTEEID FROM #EMPLOYEE)
		
		SELECT BRANCHID, BRANCHCODE, DEDUCTEEID, ISNULL(REFERENCENO, '') REFERENCENO, 
			   PAN, ISNULL(PANREFERENCE, '') PANREFERENCE
		INTO #DEDMST
		FROM #DEDTOUSE
		WHERE REFERENCENO <> ''
		
		DROP TABLE #DEDTOUSE
		
		IF @ISDEDUCTEE = 1 
			BEGIN
				SELECT  D.REFERENCENO, D.BRANCHCODE, D.BRANCHID,
					MAX(D.DEDUCTEEID) DEDUCTEEID, MAX(D.PAN) PAN, MAX(D.PANREFERENCE) PANREFERENCE
				FROM #DEDMST D  
					INNER JOIN #NONEMPLOYEE NE ON NE.DEDUCTEEID = D.DEDUCTEEID        
				GROUP BY D.REFERENCENO, D.BRANCHCODE, D.BRANCHID 
				ORDER BY D.BRANCHCODE 
			END                  
		ELSE
			BEGIN
				SELECT  D.REFERENCENO, D.BRANCHCODE, D.BRANCHID,
					MAX(D.DEDUCTEEID) DEDUCTEEID, MAX(D.PAN) PAN, MAX(D.PANREFERENCE) PANREFERENCE
				FROM #DEDMST D  
					LEFT JOIN #NONEMPLOYEE NE ON NE.DEDUCTEEID = D.DEDUCTEEID        
				GROUP BY D.REFERENCENO, D.BRANCHCODE, D.BRANCHID 
				ORDER BY D.BRANCHCODE 
			END                 
       		
	DROP TABLE #DEDMST
	DROP TABLE #TEMPBR	              
	DROP TABLE #TEMPREF	
	DROP TABLE #COMPANYBRANCH	
	DROP TABLE #NONEMPLOYEE		        
	DROP TABLE #EMPLOYEE		        
	DROP TABLE #DEDUCTEE
END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetNonEmpMaxSrNo') 
DROP PROCEDURE USP_TDS_GetNonEmpMaxSrNo
GO
CREATE PROCEDURE USP_TDS_GetNonEmpMaxSrNo  
	@BRANCHCODES NVARCHAR(MAX)               
AS        
	BEGIN
		SELECT * INTO #BRANCHES FROM DBO.UDF_TDS_SplitString(@BRANCHCODES,',')

		SELECT BRANCHID, BRANCHCODE, 0 AS SERIALNO 
		INTO #COMPANY 
		FROM COMPANYBRANCH WITH(NOLOCK)
			INNER JOIN #BRANCHES B ON B.DATA = BRANCHCODE
		
		SELECT MAX(SERIALNO)SERIALNO , BRANCHCODE 
		FROM
		(	
			SELECT C.BRANCHCODE, NE.SERIALNO
			FROM NONEMPLOYEE NE WITH(NOLOCK) 
				INNER JOIN DEDUCTEE D WITH (NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID
				INNER JOIN #COMPANY C ON C.BRANCHID = D.BRANCHID
			UNION 
			SELECT BRANCHCODE, SERIALNO 
			FROM #COMPANY
		)D
		GROUP BY BRANCHCODE    
		
		DROP TABLE #COMPANY
		DROP TABLE #BRANCHES  
		 
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetChallanBasedOnChallanID')
DROP PROCEDURE USP_TDS_GetChallanBasedOnChallanID
GO
CREATE PROCEDURE USP_TDS_GetChallanBasedOnChallanID 
	@CHALLANID INT      
AS      
	BEGIN      
		DECLARE @TOTALDEDUCTED NUMERIC(13,2) = 0;
		DECLARE @EXCLUDEDAMOUNT NUMERIC(13,2) = 0;

		SELECT BRANCHID,CHALLANID,CD.FORMID AS FORMTYPE,[QUARTER],ERETURNID,LINKDEDCOUNT AS LINKDEDUCTIONCOUNT,
			   ISNILCHALLAN AS ISNILLCHALLAN,ISUPDATECHALLAN, MODEOFPAYMENT,BANKCHALLANNO AS BANKCHALLANNUMBER,
			   LASTBANKCHALLANNO AS LASTBANKCHALLANNUMBER,TRNVOUCHERNO AS TRANSFERVOUCHERNUMBER, 
			   LASTTRNVOUCHERNO AS LASTTRANSFERVOUCHERNUMBER,CD.BANKID,CD.LASTBANKID, CHALLANPAIDDATE,
			   LASTCHALLANPAIDDATE,DATEOFDEBIT,CD.SECTIONID, TS.SECTIONNAME,INCOMETAX,SURCHARGE, EDUCATIONCESS,
			   INTEREST,OTHERS,PENALTY,CHALLANTOTAL AS CHALLANTOTALAMOUNT,LASTCHALLANTOTAL AS LASTCHALLANTOTALAMOUNT,
			   ISCOMPANY ,CHEQUENO AS CHEQUENUMBER,CHEQUEDATE, CHEQUEDRAWNON,TRANREFNO AS TRANSFERREFERENCENUMBER,
			   MINORHEAD, ISNULL(CD.SERIALNO,'') AS SERIALNUMBER, RB.BSRCODE AS BANKBSRCODE,
			   ISNULL(CD.TVRECEIPTNUMBER,'') AS TVRECEIPTNUMBER,FEE, 
			   'FALSE' ISLINKED,
			   ISNULL(CD.CINSTATUS,'') AS CINSTATUS, @TOTALDEDUCTED AS TOTALDEDUCTED, 
			   @EXCLUDEDAMOUNT AS EXCLUDEDAMOUNT, TRANSSTATUS
		FROM CHALLANDETAIL CD WITH(NOLOCK) 
			INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON  CD.SECTIONID = TS.SECTIONID      
			INNER JOIN REMITTINGBANK RB WITH(NOLOCK) ON CD.BANKID=RB.BANKID       
		WHERE CHALLANID=@CHALLANID  
		
	END  
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetTotalDeductedBasedOnChallanID')
DROP PROCEDURE USP_TDS_GetTotalDeductedBasedOnChallanID
GO
CREATE PROCEDURE USP_TDS_GetTotalDeductedBasedOnChallanID 
	@CHALLANID INT      
AS      
	BEGIN 			
		DECLARE @TOTALDEDUCTED NUMERIC(13,2) = 0;
	
		SELECT BRANCHID, BANKCHALLANNO, CHALLANPAIDDATE, BANKID
		INTO #CHALLANTOUSE
		FROM CHALLANDETAIL WITH(NOLOCK)
		WHERE CHALLANID = @CHALLANID
		 
		SELECT CHALLANID, CD.BRANCHID
		INTO #CHALLANMULTI
		FROM CHALLANDETAIL CD WITH(NOLOCK)
			INNER JOIN #CHALLANTOUSE CU
				ON CU.BRANCHID = CD.BRANCHID
					AND CU.BANKCHALLANNO COLLATE SQL_Latin1_General_CP1_CI_AS = CD.BANKCHALLANNO COLLATE SQL_Latin1_General_CP1_CI_AS
					AND CU.BANKID = CD.BANKID

		SELECT DEDUCTIONID
		INTO #DEDTOUSE
		FROM DEDCHALINK WITH(NOLOCK)
		WHERE CHALLANID IN (SELECT CHALLANID FROM #CHALLANMULTI)

		SELECT @TOTALDEDUCTED = ISNULL(SUM(TOTALDEDUCTED),0) 
		FROM DEDUCTIONDETAIL WITH(NOLOCK)
		WHERE DEDUCTIONID IN (SELECT DEDUCTIONID FROM #DEDTOUSE)
		
		SELECT INCOMETAX, SURCHARGE, EDUCATIONCESS,
		       @TOTALDEDUCTED AS TOTALDEDUCTED 
			   FROM CHALLANDETAIL CD WITH(NOLOCK) 
		INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON  CD.SECTIONID = TS.SECTIONID      
		INNER JOIN REMITTINGBANK RB WITH(NOLOCK) ON CD.BANKID=RB.BANKID       
		WHERE CHALLANID=@CHALLANID  
		
		DROP TABLE #CHALLANMULTI
		DROP TABLE #DEDTOUSE
		DROP TABLE #CHALLANTOUSE
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetReliefUS89FinancialYears')
DROP PROCEDURE USP_TDS_GetReliefUS89FinancialYears
GO
CREATE PROCEDURE USP_TDS_GetReliefUS89FinancialYears
AS      
	BEGIN  
		SELECT CONVERT(NVARCHAR,FINYEAR) + '-' + 
			   SUBSTRING(CONVERT(NVARCHAR,FINYEAR + 1),3,2) AS DISPLAYFINYEAR,
			   FINYEAR
		INTO #RATESLAB
		FROM RATESLAB WITH (NOLOCK) 
		GROUP BY FINYEAR 
		ORDER BY FINYEAR
		
		INSERT INTO #RATESLAB VALUES('-SELECT-',-1)
		
		SELECT * FROM #RATESLAB ORDER BY FINYEAR
		
		DROP TABLE #RATESLAB
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetReliefUS89Details')
DROP PROCEDURE USP_TDS_GetReliefUS89Details
GO
CREATE PROCEDURE USP_TDS_GetReliefUS89Details
	@SALARYDETAILID INT
AS
	BEGIN
		SELECT RELIEF89DETAILID, REL.SALARYDETAILID AS SALARYDETAILID, 
			   CONVERT(NVARCHAR,FINANCIALYEAR) + '-' + 
			   SUBSTRING(CONVERT(NVARCHAR,FINANCIALYEAR + 1),3,2) AS FINANCIALYEAR,
			   FINANCIALYEAR AS FINYEAR, TAXABLEINCOME, ARREARRECEIVED, RELIEFAMOUNT
		FROM RELIEF89DETAIL REL WITH(NOLOCK)
				INNER JOIN SALARYDETAIL SS ON SS.SALARYDETAILID = REL.SALARYDETAILID
		WHERE REL.SALARYDETAILID=@SALARYDETAILID;
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_DeleteReliefUS89Details')
DROP PROCEDURE USP_TDS_DeleteReliefUS89Details
GO
CREATE PROCEDURE USP_TDS_DeleteReliefUS89Details
	@SALARYDETAILID INT
AS
	BEGIN
		DELETE FROM RELIEF89DETAIL WHERE SALARYDETAILID=@SALARYDETAILID;
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SaveReliefUS89Details')
DROP PROCEDURE USP_TDS_SaveReliefUS89Details
GO
CREATE PROCEDURE USP_TDS_SaveReliefUS89Details
	@SALARYDETAILID INT,
	@FINANCIALYEAR INT,
	@TAXABLEINCOME NUMERIC(13,2),
	@ARREARRECEIVED NUMERIC(13,2),
	@RELIEFAMOUNT NUMERIC(13,2)
AS
	BEGIN
		 INSERT INTO RELIEF89DETAIL(SALARYDETAILID,FINANCIALYEAR,TAXABLEINCOME,ARREARRECEIVED,RELIEFAMOUNT) 
		 VALUES (@SALARYDETAILID,@FINANCIALYEAR,@TAXABLEINCOME,@ARREARRECEIVED,@RELIEFAMOUNT);	
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetRateSlabDetails')
DROP PROCEDURE USP_TDS_GetRateSlabDetails
GO
CREATE PROCEDURE USP_TDS_GetRateSlabDetails
@FINYEAR INT,
@CATID INT
AS      
	BEGIN  
		SELECT *
		FROM RATESLAB WITH (NOLOCK)
		WHERE FINYEAR = @FINYEAR AND CATID = @CATID 
		ORDER BY DSLNUM		
	END
GO

------------------------------------------------------------------------------------------------------------

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_DeleteExistingRecordsForSalary')
DROP PROCEDURE USP_TDS_DeleteExistingRecordsForSalary
GO
CREATE PROC USP_TDS_DeleteExistingRecordsForSalary
@DATA VARCHAR(MAX)  
AS  
	BEGIN  
		DECLARE @STRING VARCHAR(MAX);  
		DECLARE @STRING1 VARCHAR(MAX);  
		DECLARE @SLICE1 INT;  
		DECLARE @SLICE2 VARCHAR(MAX);  
		DECLARE @INDEX INT;  
		DECLARE @DEDUCTEEID INT;  
		DECLARE @SALARYDETAILID INT;  
		DECLARE @RETURNVALUE INT;  
		SET @INDEX=1;  
		BEGIN   
			WHILE(@INDEX<>0)  
				BEGIN  
					SET @INDEX=charindex(',',@DATA);  
					IF (@INDEX=0)SET @DATA= @DATA +',';  
						SET @INDEX=charindex(',',@DATA);  
					IF(@INDEX<>0)  
						BEGIN   
							SET @STRING= LEFT(@DATA,@INDEX -1);  
							SET @STRING1=LEFT(@DATA,charindex(',',@DATA)-1)   
							SET @SLICE1=LEFT(@STRING1, CHARINDEX('|', @STRING1)-1)  
							SET @SLICE2= SUBSTRING(@STRING,CHARINDEX('|',@STRING)+1, 100)   
						END  
					ELSE  
						BEGIN  
							SET @SLICE1='';  
							SET @SLICE2='';  
						END  

					if(len(@SLICE1)>0 AND len(@SLICE2)> 0 )    
						BEGIN  
							SELECT @DEDUCTEEID=DEDUCTEEID FROM DEDUCTEE D WHERE D.BRANCHID=@SLICE1 AND D.REFERENCENO=@SLICE2  

							DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SDE INNER JOIN SALARYDETAIL SD   
							ON   
							SDE.SALARYDETAILID=SD.SALARYDETAILID WHERE   
							SD.BRANCHID=@SLICE1 AND   
							SD.DEDUCTEEID=@DEDUCTEEID  
							
							DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SDE INNER JOIN SALARYDETAIL SD   
							ON   
							SDE.SALARYDETAILID=SD.SALARYDETAILID WHERE   
							SD.BRANCHID=@SLICE1 AND   
							SD.DEDUCTEEID=@DEDUCTEEID  

							DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL CD INNER JOIN SALARYDETAIL SD   
							ON   
							CD.SALARYDETAILID=SD.SALARYDETAILID WHERE   
							SD.BRANCHID=@SLICE1 AND   
							SD.DEDUCTEEID=@DEDUCTEEID  
							
							DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD INNER JOIN SALARYDETAIL SD   
							ON   
							RD.SALARYDETAILID=SD.SALARYDETAILID WHERE   
							SD.BRANCHID=@SLICE1 AND   
							SD.DEDUCTEEID=@DEDUCTEEID  

							DELETE FROM SALARYDETAIL WHERE BRANCHID=@SLICE1 AND DEDUCTEEID=@DEDUCTEEID               							
						END  

					SET @DATA = RIGHT(@DATA,len(@DATA) - @INDEX)         
					if len(@DATA) = 0 BREAK;  
				END  
			END  
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SALARYDETAILBULKDELETEPENSIONER')
DROP PROCEDURE USP_TDS_SALARYDETAILBULKDELETEPENSIONER
GO
CREATE PROCEDURE USP_TDS_SALARYDETAILBULKDELETEPENSIONER
 @BRANCHID INT    
AS  
 BEGIN  
    /* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID */  
    DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID
    INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = SD.DEDUCTEEID
    INNER JOIN EMPLOYEE E ON D.DEDUCTEEID = E.DEDUCTEEID  
    WHERE  SD.BRANCHID = @BRANCHID AND ISNULL(D.EMPTYPE,0) = 1;  
    
    /* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */  
    DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SEC16 INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID=SD.SALARYDETAILID  
    INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = SD.DEDUCTEEID
    INNER JOIN EMPLOYEE E ON D.DEDUCTEEID = E.DEDUCTEEID  
    WHERE  SD.BRANCHID = @BRANCHID AND ISNULL(D.EMPTYPE,0) = 1;  
    
    /* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */  
    DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SEC10 INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID=SD.SALARYDETAILID  
    INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = SD.DEDUCTEEID
    INNER JOIN EMPLOYEE E ON D.DEDUCTEEID = E.DEDUCTEEID  
    WHERE  SD.BRANCHID = @BRANCHID AND ISNULL(D.EMPTYPE,0) = 1;  
    
    /* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */  
    DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID=SD.SALARYDETAILID  
    INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = SD.DEDUCTEEID
    INNER JOIN EMPLOYEE E ON D.DEDUCTEEID = E.DEDUCTEEID  
    WHERE  SD.BRANCHID = @BRANCHID AND ISNULL(D.EMPTYPE,0) = 1;  
    
    /* DELETE FROM SALARYDETAIL BASED ON BRANCHID */  
    DELETE FROM SALARYDETAIL FROM SALARYDETAIL SD
    INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = SD.DEDUCTEEID
    INNER JOIN EMPLOYEE E ON D.DEDUCTEEID = E.DEDUCTEEID  
    WHERE SD.BRANCHID = @BRANCHID AND ISNULL(D.EMPTYPE,0) = 1;   
 END  
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_EMPLOYEEBULKDELETE')
DROP PROCEDURE USP_TDS_EMPLOYEEBULKDELETE
GO
CREATE PROCEDURE USP_TDS_EMPLOYEEBULKDELETE      
	@BRANCHID INT,      
	@DEDUCTEEID INT = NULL,      
	@ISQUARTERLOCKED BIT = 0 ,      
	@LOCKEDQUARTERS VARCHAR(50)= ''      
AS      
	BEGIN      
		DECLARE @SQLQUERY NVARCHAR(MAX) ;      
		IF(@ISQUARTERLOCKED = 0)      
			BEGIN      
				IF (@DEDUCTEEID IS NULL)      
				BEGIN      
					/* DELETE FROM DEDCHALINK BASED ON BRANCHID */      
					DELETE FROM DEDCHALINK FROM DEDCHALINK AS DCL INNER JOIN DEDUCTIONDETAIL AS DD ON DCL.DEDUCTIONID = DD.DEDUCTIONID      
					INNER JOIN DEDUCTEE AS D ON DD.DEDUCTEEID = D.DEDUCTEEID      
					INNER JOIN EMPLOYEE AS E ON D.DEDUCTEEID = E.DEDUCTEEID      
					WHERE  DCL.BRANCHID = @BRANCHID;      
					
					/* DELETE FROM PARTPAYMENTDETAILS BASED ON BRANCHID */      
					DELETE FROM PARTPAYMENTDETAILS FROM PARTPAYMENTDETAILS WHERE BRANCHID = @BRANCHID;      
					
					/* DELETE FROM DEDUCTIONDETAIL BASED ON BRANCHID */      
					DELETE FROM DEDUCTIONDETAIL FROM DEDUCTIONDETAIL WHERE BRANCHID = @BRANCHID AND FORMID = 1;      
					
					/* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID */      
					DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL AS VIA INNER JOIN SALARYDETAIL AS SD ON VIA.SALARYDETAILID = SD.SALARYDETAILID      
					WHERE  SD.BRANCHID = @BRANCHID;      
					
					/* DELETE FROM SECTION16DETAIL BASED ON BRANCHID */      
					DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL AS SEC16 INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID = SD.SALARYDETAILID      
					WHERE  SD.BRANCHID = @BRANCHID;      
					
					/* DELETE FROM SECTION10DETAIL BASED ON BRANCHID */      
					DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL AS SEC10 INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID = SD.SALARYDETAILID      
					WHERE  SD.BRANCHID = @BRANCHID;      
					
					/* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID */      
					DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL AS RD INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID = SD.SALARYDETAILID      
					WHERE  SD.BRANCHID = @BRANCHID;      
					
					/* DELETE FROM SALARYDETAIL BASED ON BRANCHID */      
					DELETE FROM SALARYDETAIL WHERE BRANCHID = @BRANCHID;      
					DELETE FROM LINKTOTC     
					FROM LINKTOTC LC    
					INNER JOIN EMPLOYEE E ON LC.EMPLOYEEID = E.EMPLOYEEID    
					INNER JOIN DEDUCTEE D ON D.DEDUCTEEID = E.DEDUCTEEID    
					WHERE D.BRANCHID =@BRANCHID  
					
					/* DELETE FROM EMPLOYEE BASED ON BRANCHID */      
					DELETE FROM EMPLOYEE FROM EMPLOYEE AS E INNER JOIN DEDUCTEE AS D ON E.DEDUCTEEID = D.DEDUCTEEID WHERE D.BRANCHID = @BRANCHID;      
					
					/*DELETE FROM DEDUCTEE BASED ON BRANCHID */      
					DELETE FROM DEDUCTEE WHERE BRANCHID = @BRANCHID AND DEDUCTEEID NOT IN (SELECT D.DEDUCTEEID      
					FROM   DEDUCTEE D WITH(NOLOCK) INNER JOIN NONEMPLOYEE NE WITH(NOLOCK) ON D.DEDUCTEEID = NE.DEDUCTEEID AND D.BRANCHID = @BRANCHID)      
				END      
			ELSE      
			BEGIN      
				/* DELETE FROM DEDCHALINK BASED ON BRANCHID & DEDUCTEEID */      
				DELETE FROM DEDCHALINK FROM DEDCHALINK AS DCL INNER JOIN DEDUCTIONDETAIL AS DD ON DCL.DEDUCTIONID = DD.DEDUCTIONID      
				WHERE  DCL.BRANCHID = @BRANCHID AND DD.DEDUCTEEID = @DEDUCTEEID;      
				
				/* DELETE FROM PARTPAYMENTDETAILS BASED ON BRANCHID & DEDUCTEEID */      
				DELETE FROM PARTPAYMENTDETAILS FROM PARTPAYMENTDETAILS PPD INNER JOIN DEDUCTIONDETAIL DD ON PPD.PARTPAYMENTID = DD.PARTPAYMENTID      
				AND PPD.BRANCHID  = DD.BRANCHID AND PPD.FORMID = DD.FORMID AND PPD.QUARTER = DD.QUARTER      
				WHERE  PPD.BRANCHID = @BRANCHID AND PPD.PARTPAYMENTID IN (SELECT PARTPAYMENTID FROM DEDUCTIONDETAIL WITH(NOLOCK) WHERE BRANCHID = @BRANCHID AND FORMID = 1 AND     
				DEDUCTIONID IN (SELECT DEDUCTIONID FROM DEDUCTIONDETAIL WITH(NOLOCK) WHERE BRANCHID = @BRANCHID AND FORMID = 1 AND DEDUCTEEID = @DEDUCTEEID));      

				/* DELETE FROM DEDUCTIONDETAIL BASED ON BRANCHID */      
				DELETE FROM DEDUCTIONDETAIL WHERE BRANCHID = @BRANCHID AND DEDUCTEEID = @DEDUCTEEID;      

				/* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID */      
				DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL AS VI INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID      
				WHERE  SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;      

				/* DELETE FROM SECTION16DETAIL BASED ON BRANCHID */      
				DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL AS SEC16 INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID = SD.SALARYDETAILID      
				WHERE SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;      

				/* DELETE FROM SECTION10DETAIL BASED ON BRANCHID */      
				DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL AS SEC10 INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID = SD.SALARYDETAILID      
				WHERE SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;      
				
				/* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID */      
				DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL AS RD INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID = SD.SALARYDETAILID      
				WHERE SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;      

				/* DELETE FROM SALARYDETAIL BASED ON BRANCHID & DEDUCTEEID */      
				DELETE FROM SALARYDETAIL WHERE BRANCHID = @BRANCHID AND DEDUCTEEID = @DEDUCTEEID;      
				
				/* DELETE FROM LINKTOTC */      
				DELETE FROM LINKTOTC     
				FROM LINKTOTC LC    
				INNER JOIN EMPLOYEE E ON LC.EMPLOYEEID = E.EMPLOYEEID    
				WHERE DEDUCTEEID IN (@DEDUCTEEID)    
				
				/* DELETE FROM EMPLOYEE BASED ON BRANCHID & DEDUCTEEID */      
				DELETE FROM EMPLOYEE WHERE DEDUCTEEID IN (@DEDUCTEEID)      
				
				/*DELETE FROM DEDUCTEE BASED ON BRANCHID & DEDUCTEEID */      
				DELETE FROM DEDUCTEE WHERE DEDUCTEEID IN (@DEDUCTEEID)      
			END      
		END      
		ELSE      
		BEGIN      
			SET @SQLQUERY = 'SELECT D.DEDUCTEEID      
			INTO #DEDUCTEE      
			FROM DEDUCTEE D WITH(NOLOCK)  
			INNER JOIN EMPLOYEE E WITH(NOLOCK) ON D.DEDUCTEEID = E.DEDUCTEEID      
			WHERE D.BRANCHID = '+ CAST(@BRANCHID AS VARCHAR)+' AND D.DEDUCTEEID NOT IN      
			(      
			SELECT DD.DEDUCTEEID FROM DEDUCTIONDETAIL DD WITH(NOLOCK)      
			LEFT JOIN PARTPAYMENTDETAILS PDD WITH(NOLOCK)      
			ON DD.BRANCHID = PDD.BRANCHID AND DD.FORMID = PDD.FORMID AND DD.QUARTER = DD.QUARTER AND DD.PARTPAYMENTID = PDD.PARTPAYMENTID      
			WHERE DD.BRANCHID = '+ CAST(@BRANCHID AS VARCHAR)+' AND DD.FORMID = 1 AND DD.QUARTER IN ('+ CAST(@LOCKEDQUARTERS AS VARCHAR) +')      
			)'      
			SET @SQLQUERY = @SQLQUERY + ';DELETE FROM EMPLOYEE WHERE DEDUCTEEID IN (SELECT DEDUCTEEID FROM #DEDUCTEE);  DELETE FROM DEDUCTEE WHERE DEDUCTEEID IN (SELECT DEDUCTEEID FROM #DEDUCTEE) AND BRANCHID = '+CAST(@BRANCHID AS VARCHAR)      
			EXECUTE SP_EXECUTESQL @SQLQUERY;      
		END      
	END  
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SalaryDetailBulkDelete')
DROP PROCEDURE USP_TDS_SalaryDetailBulkDelete
GO
CREATE PROCEDURE USP_TDS_SalaryDetailBulkDelete
 @BRANCHID INT = NULL,        
 @DEDUCTEEID INT = NULL,      
 @BRANCHIDS NVARCHAR(MAX) = NULL      
AS        
BEGIN    
 IF (@BRANCHIDS = '')
	BEGIN 
		SET @BRANCHIDS = NULL
	END      
 IF (@BRANCHIDS IS NOT NULL)
  BEGIN       
   SELECT * INTO #UPDATEITEMS FROM DBO.UDF_TDS_SPLITSTRING(@BRANCHIDS, ',')        
  
   DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID        
   WHERE  SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)        
     
   /* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */        
   DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SEC16 INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID=SD.SALARYDETAILID        
   WHERE  SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)        
   
   /* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */        
   DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SEC10 INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID=SD.SALARYDETAILID        
   WHERE  SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)  
   
   /* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */        
   DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID=SD.SALARYDETAILID        
   WHERE  SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)            
     
   /* DELETE FROM SALARYDETAIL BASED ON BRANCHID */        
   DELETE FROM SALARYDETAIL WHERE BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)              
  END    
 ELSE   
  BEGIN  
  IF @DEDUCTEEID IS NULL        
    BEGIN        
     /* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID */        
     DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID;        
     
     /* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SEC16 INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID=SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID;        
     
     /* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SEC10 INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID=SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID;    
     
     /* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID=SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID;            
     
     /* DELETE FROM SALARYDETAIL BASED ON BRANCHID */        
     DELETE FROM SALARYDETAIL WHERE BRANCHID = @BRANCHID;        
    END        
   ELSE        
    BEGIN        
     /* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI INNER JOIN SALARYDETAIL SD ON VI.SALARYDETAILID = SD.SALARYDETAILID        
     WHERE SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;        
     
     /* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SEC16 INNER JOIN SALARYDETAIL SD ON SEC16.SALARYDETAILID = SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;        
     
     /* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SEC10 INNER JOIN SALARYDETAIL SD ON SEC10.SALARYDETAILID = SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID;        
     
     /* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD INNER JOIN SALARYDETAIL SD ON RD.SALARYDETAILID = SD.SALARYDETAILID        
     WHERE  SD.BRANCHID = @BRANCHID AND SD.DEDUCTEEID = @DEDUCTEEID; 
     
     /* DELETE FROM SALARYDETAIL BASED ON BRANCHID & DEDUCTEEID */        
     DELETE FROM SALARYDETAIL WHERE BRANCHID = @BRANCHID AND DEDUCTEEID = @DEDUCTEEID;        
    END        
  END      
END 
GO  

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SALARYDETAILBULKDELETEBASEDONBRANCH')
DROP PROCEDURE USP_TDS_SALARYDETAILBULKDELETEBASEDONBRANCH
GO
CREATE PROCEDURE USP_TDS_SALARYDETAILBULKDELETEBASEDONBRANCH  
@BRANCHID NVARCHAR(MAX),  
@REFERENCENO NVARCHAR(MAX)  
AS  
	BEGIN  
		SELECT DISTINCT * INTO #TEMPBR FROM DBO.UDF_TDS_SPLITSTRING(@BRANCHID,',')   
		SELECT DISTINCT * INTO #TEMPREF FROM DBO.UDF_TDS_SPLITSTRING(@REFERENCENO,',')    
		SELECT D.DEDUCTEEID, D.BRANCHID   
			INTO #TEMPDEDUCTEE  
		FROM DEDUCTEE D  
			INNER JOIN #TEMPBR TB   
		ON TB.DATA = D.BRANCHID  
			INNER JOIN #TEMPREF TR  
		ON TR.DATA = D.REFERENCENO     
		
		/* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID */  
		DELETE VI FROM CHAPTERVIADETAIL VI   
			INNER JOIN SALARYDETAIL SD   
		ON VI.SALARYDETAILID = SD.SALARYDETAILID  
			INNER JOIN #TEMPDEDUCTEE TD   
		ON TD.DEDUCTEEID = SD.DEDUCTEEID  
			AND TD.BRANCHID = SD.BRANCHID  
			
		/* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */  
		DELETE SEC16 FROM SECTION16DETAIL SEC16   
			INNER JOIN SALARYDETAIL SD   
		ON SEC16.SALARYDETAILID=SD.SALARYDETAILID  
			INNER JOIN #TEMPDEDUCTEE TD   
		ON TD.DEDUCTEEID = SD.DEDUCTEEID  
			AND TD.BRANCHID = SD.BRANCHID  
			
		/* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */  
		IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'SECTION10DETAIL') 
			BEGIN 	
				DELETE SEC10 FROM SECTION10DETAIL SEC10   
					INNER JOIN SALARYDETAIL SD   
				ON SEC10.SALARYDETAILID=SD.SALARYDETAILID  
					INNER JOIN #TEMPDEDUCTEE TD   
				ON TD.DEDUCTEEID = SD.DEDUCTEEID  
					AND TD.BRANCHID = SD.BRANCHID  
			END	
			
		/* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */  
		IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'RELIEF89DETAIL') 
			BEGIN 	
				DELETE RD FROM RELIEF89DETAIL RD   
					INNER JOIN SALARYDETAIL SD   
				ON RD.SALARYDETAILID=SD.SALARYDETAILID  
					INNER JOIN #TEMPDEDUCTEE TD   
				ON TD.DEDUCTEEID = SD.DEDUCTEEID  
					AND TD.BRANCHID = SD.BRANCHID  
			END
			
		/* DELETE FROM SALARYDETAIL BASED ON BRANCHID */  
		DELETE SD FROM SALARYDETAIL SD  
			INNER JOIN #TEMPDEDUCTEE TD   
		ON TD.DEDUCTEEID = SD.DEDUCTEEID  
			AND TD.BRANCHID = SD.BRANCHID  
	END  
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_SalaryDetailBulkDeleteDeducteeWise')
DROP PROCEDURE USP_TDS_SalaryDetailBulkDeleteDeducteeWise
GO
CREATE PROCEDURE USP_TDS_SalaryDetailBulkDeleteDeducteeWise
 @BRANCHID INT = NULL,        
 @DEDUCTEEID INT = NULL,      
 @BRANCHIDS NVARCHAR(MAX) = NULL,      
 @DEDUCTEEIDS NVARCHAR(MAX) = NULL
AS        
	BEGIN        
		SELECT * INTO #UPDATEITEMS FROM DBO.UDF_TDS_SPLITSTRING(@BRANCHIDS, ',')        
		
		SELECT * INTO #DEDUCTEEIDS FROM DBO.UDF_TDS_SPLITSTRING(@DEDUCTEEIDS, ',')        

		/* DELETE FROM CHAPTERVIADETAIL BASED ON BRANCHID & DEDUCTEEID */        
		DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI 
			INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID									     
		WHERE SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)    
			AND SD.DEDUCTEEID IN (SELECT DATA FROM #DEDUCTEEIDS)                  

		/* DELETE FROM SECTION16DETAIL BASED ON BRANCHID & DEDUCTEEID */        
		DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL SEC16 
			INNER JOIN SALARYDETAIL AS SD ON SEC16.SALARYDETAILID=SD.SALARYDETAILID        
		WHERE SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)        
			AND SD.DEDUCTEEID IN (SELECT DATA FROM #DEDUCTEEIDS)                  
			
		/* DELETE FROM SECTION10DETAIL BASED ON BRANCHID & DEDUCTEEID */        
		DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL SEC10 
			INNER JOIN SALARYDETAIL AS SD ON SEC10.SALARYDETAILID=SD.SALARYDETAILID        
		WHERE SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)        
			AND SD.DEDUCTEEID IN (SELECT DATA FROM #DEDUCTEEIDS)  
			
		/* DELETE FROM RELIEF89DETAIL BASED ON BRANCHID & DEDUCTEEID */        
		DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL RD 
			INNER JOIN SALARYDETAIL AS SD ON RD.SALARYDETAILID=SD.SALARYDETAILID        
		WHERE SD.BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)        
			AND SD.DEDUCTEEID IN (SELECT DATA FROM #DEDUCTEEIDS)                     
				
		/* DELETE FROM SALARYDETAIL BASED ON BRANCHID */        
		DELETE FROM SALARYDETAIL WHERE 
			BRANCHID IN (SELECT DATA FROM #UPDATEITEMS)              
			AND DEDUCTEEID IN (SELECT DATA FROM #DEDUCTEEIDS)              
	END   
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_DeleteSalaryDetail')
DROP PROCEDURE USP_TDS_DeleteSalaryDetail
GO
CREATE PROCEDURE USP_TDS_DeleteSalaryDetail
	@DEDUCTEEID INT
AS
	BEGIN
		DELETE FROM CHAPTERVIADETAIL FROM CHAPTERVIADETAIL VI 
			INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID									     
		WHERE SD.DEDUCTEEID = @DEDUCTEEID
		
		DELETE FROM SECTION16DETAIL FROM SECTION16DETAIL VI 
			INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID									     
		WHERE SD.DEDUCTEEID = @DEDUCTEEID		
		
		DELETE FROM SECTION10DETAIL FROM SECTION10DETAIL VI 
			INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID									     
		WHERE SD.DEDUCTEEID = @DEDUCTEEID		
		
		DELETE FROM RELIEF89DETAIL FROM RELIEF89DETAIL VI 
			INNER JOIN SALARYDETAIL AS SD ON VI.SALARYDETAILID = SD.SALARYDETAILID									     
		WHERE SD.DEDUCTEEID = @DEDUCTEEID
		
		DELETE FROM SALARYDETAIL WHERE DEDUCTEEID=@DEDUCTEEID;	
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_F15GH_BULKERETURNF15GHBRANCHESINITIATE')
DROP PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHESINITIATE
GO
CREATE PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHESINITIATE
	@PAGEINDEX INT,  
	@PAGESIZE INT,  
	@FORMID INT,  
	@QUARTER INT,  
	@BRANCHID INT  
AS  
	BEGIN  
		DECLARE @FIRSTREC INT, @LASTREC INT  
		SELECT @FIRSTREC = (@PAGEINDEX - 1) * @PAGESIZE  
		SELECT @LASTREC = (@PAGEINDEX * @PAGESIZE + 1);  
		DECLARE @SQLQUERY NVARCHAR(MAX);
		DECLARE @TABLENAME VARCHAR(25);
		SELECT BRANCHID, FORMID, QUARTER
		INTO #ERETDONE
		FROM ACKNO15GH
		WHERE LEN(ISNULL(ORGNUM , '')) > 0
			AND FORMID = @FORMID
			AND QUARTER = @QUARTER 

		IF (@FORMID = 1)
			BEGIN
				SELECT BRANCHID, QUARTER, 5 AS FORMID INTO #ERETURNVALIDBRANCHES15G FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC B INNER JOIN FORM15GINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15G
				EXCEPT SELECT BRANCHID, FORMID, QUARTER FROM #ERETDONE
			END
		ELSE
			BEGIN
				SELECT BRANCHID, QUARTER,  6 AS FORMID INTO #ERETURNVALIDBRANCHES15H FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC B INNER JOIN FORM15HINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15H
				EXCEPT SELECT BRANCHID, FORMID, QUARTER FROM #ERETDONE
			END
			IF (@FORMID = 1)
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15G';
				END
			ELSE
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15H';
				END
			SET @SQLQUERY = 'SELECT ID = IDENTITY(INT,1,1),* INTO #VALIDBRANCHES  
					FROM  
					(  
						SELECT BRANCHCODE,BRANCHNAME,EVD.BRANCHID,CASE WHEN EVD.FORMID = 5 THEN 1 ELSE 2 END FORMID,FORMNAME,EVD.QUARTER, ISNULL(ISREQACTIVE,0) ISREQACTIVE FROM COMPANYBRANCH CB WITH(NOLOCK) 
						INNER JOIN ' + @TABLENAME + ' EVD ON EVD.BRANCHID = CB.BRANCHID   
						INNER JOIN FORMDETAILS FD WITH(NOLOCK) ON FD.FORMID = EVD.FORMID  
						LEFT JOIN   
						(  
							SELECT BRANCHID,FORMID,QUARTER,ISREQACTIVE FROM ACKNO15GH WITH(NOLOCK) WHERE ISNULL(ISREQACTIVE,0) <> 0 AND ISNULL(ISVALID, 0) <> 1
						)TEMP ON EVD.BRANCHID = TEMP.BRANCHID AND EVD.FORMID = TEMP.FORMID AND EVD.QUARTER = TEMP.QUARTER  
					WHERE EVD.QUARTER = '+CAST(@QUARTER AS VARCHAR)
					
			IF(@BRANCHID <> -1)  
				BEGIN  
					SET @SQLQUERY = @SQLQUERY + ' AND EVD.BRANCHID = '+CAST(@BRANCHID AS VARCHAR)  
				END
				SET @SQLQUERY = @SQLQUERY + 'GROUP BY BRANCHCODE,BRANCHNAME,EVD.BRANCHID,EVD.FORMID,FORMNAME,EVD.QUARTER,ISREQACTIVE)FINAL ORDER BY BRANCHCODE;SELECT * FROM #VALIDBRANCHES WHERE ID > ' + CAST(@FIRSTREC AS VARCHAR) + ' AND ID < ' + CAST(@LASTREC AS VARCHAR);

			EXEC SP_EXECUTESQL @SQLQUERY;  
		END
	GO
	
	
IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_F15GH_BULKERETURNF15GHBRANCHES')
DROP PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHES
GO
CREATE PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHES
	@PAGEINDEX INT,  
	@PAGESIZE INT,  
	@FORMID INT,  
	@QUARTER INT,  
	@BRANCHID INT  
AS  
	BEGIN  
		DECLARE @FIRSTREC INT, @LASTREC INT  
		SELECT @FIRSTREC = (@PAGEINDEX - 1) * @PAGESIZE  
		SELECT @LASTREC = (@PAGEINDEX * @PAGESIZE + 1);  
		DECLARE @SQLQUERY NVARCHAR(MAX);
		DECLARE @TABLENAME VARCHAR(25);

		IF (@FORMID = 1)
			BEGIN
				SELECT BRANCHID, QUARTER, 5 AS FORMID INTO #ERETURNVALIDBRANCHES15G FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC B INNER JOIN FORM15GINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15G
			END
		ELSE
			BEGIN
				SELECT BRANCHID, QUARTER,  6 AS FORMID INTO #ERETURNVALIDBRANCHES15H FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC B INNER JOIN FORM15HINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15H
			END
			IF (@FORMID = 1)
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15G';
				END
			ELSE
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15H';
				END
			SET @SQLQUERY = 'SELECT ID = IDENTITY(INT,1,1),* INTO #VALIDBRANCHES  
					FROM  
					(  
						SELECT BRANCHCODE,BRANCHNAME,EVD.BRANCHID,CASE WHEN EVD.FORMID = 5 THEN 1 ELSE 2 END FORMID,FORMNAME,EVD.QUARTER, ISNULL(ISREQACTIVE,0) ISREQACTIVE FROM COMPANYBRANCH CB WITH(NOLOCK) 
						INNER JOIN ' + @TABLENAME + ' EVD ON EVD.BRANCHID = CB.BRANCHID   
						INNER JOIN FORMDETAILS FD WITH(NOLOCK) ON FD.FORMID = EVD.FORMID  
						LEFT JOIN   
						(  
							SELECT BRANCHID,FORMID,QUARTER,ISREQACTIVE FROM ACKNO15GH WITH(NOLOCK) WHERE ISNULL(ISREQACTIVE,0) <> 0 AND ISNULL(ISVALID, 0) <> 1
						)TEMP ON EVD.BRANCHID = TEMP.BRANCHID AND EVD.FORMID = TEMP.FORMID AND EVD.QUARTER = TEMP.QUARTER  
					WHERE EVD.QUARTER = '+CAST(@QUARTER AS VARCHAR)
					
			IF(@BRANCHID <> -1)  
				BEGIN  
					SET @SQLQUERY = @SQLQUERY + ' AND EVD.BRANCHID = '+CAST(@BRANCHID AS VARCHAR)  
				END
				SET @SQLQUERY = @SQLQUERY + 'GROUP BY BRANCHCODE,BRANCHNAME,EVD.BRANCHID,EVD.FORMID,FORMNAME,EVD.QUARTER,ISREQACTIVE)FINAL ORDER BY BRANCHCODE;SELECT * FROM #VALIDBRANCHES WHERE ID > ' + CAST(@FIRSTREC AS VARCHAR) + ' AND ID < ' + CAST(@LASTREC AS VARCHAR);

			EXEC SP_EXECUTESQL @SQLQUERY;  
		END
	GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_F15GH_BULKERETURNF15GHBRANCHESCOUNT')
DROP PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHESCOUNT
GO
CREATE PROCEDURE USP_F15GH_BULKERETURNF15GHBRANCHESCOUNT  
	@FORMID INT,  
	@QUARTER INT,  
	@BRANCHID INT  
AS  
	BEGIN    
		DECLARE @SQLQUERY NVARCHAR(MAX);
		DECLARE @TABLENAME VARCHAR(25);

		IF (@FORMID = 1)
			BEGIN
				SELECT BRANCHID, QUARTER, 5 AS FORMID INTO #ERETURNVALIDBRANCHES15G FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15GBASIC B INNER JOIN FORM15GINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15G
			END
		ELSE
			BEGIN
				SELECT BRANCHID, QUARTER,  6 AS FORMID INTO #ERETURNVALIDBRANCHES15H FROM
				(SELECT BASICDET.BRANCHID, BASICDET.QUARTER FROM
				(SELECT COUNT(DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC 
				GROUP BY BRANCHID, QUARTER) BASICDET 
			INNER JOIN 
				(SELECT COUNT(DISTINCT I.DETAILID) DETIDCOUNT, BRANCHID, QUARTER FROM FORM15HBASIC B INNER JOIN FORM15HINCOME I
				ON B.DETAILID = I.DETAILID 
				GROUP BY BRANCHID, QUARTER) INCOMEDET
				ON BASICDET.DETIDCOUNT = INCOMEDET.DETIDCOUNT
				WHERE BASICDET.QUARTER = @QUARTER) FINAL15H
			END
			IF (@FORMID = 1)
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15G';
				END
			ELSE
				BEGIN
					SET @TABLENAME = '#ERETURNVALIDBRANCHES15H';
				END
			SET @SQLQUERY = 'SELECT ID = IDENTITY(INT,1,1),* INTO #VALIDBRANCHES  
					FROM  
					(  
						SELECT BRANCHCODE,BRANCHNAME,EVD.BRANCHID,CASE WHEN EVD.FORMID = 5 THEN 1 ELSE 2 END FORMID,FORMNAME,EVD.QUARTER, ISNULL(ISREQACTIVE,0) ISREQACTIVE FROM COMPANYBRANCH CB WITH(NOLOCK) 
						INNER JOIN ' + @TABLENAME + ' EVD ON EVD.BRANCHID = CB.BRANCHID   
						INNER JOIN FORMDETAILS FD WITH(NOLOCK) ON FD.FORMID = EVD.FORMID  
						LEFT JOIN   
						(  
							SELECT BRANCHID,FORMID,QUARTER,ISREQACTIVE FROM ACKNO15GH WITH(NOLOCK) WHERE ISNULL(ISREQACTIVE,0) <> 0 AND ISNULL(ISVALID, 0) <> 1
						)TEMP ON EVD.BRANCHID = TEMP.BRANCHID AND EVD.FORMID = TEMP.FORMID AND EVD.QUARTER = TEMP.QUARTER  
					WHERE EVD.QUARTER = '+CAST(@QUARTER AS VARCHAR)
					
			IF(@BRANCHID <> -1)  
				BEGIN  
					SET @SQLQUERY = @SQLQUERY + ' AND EVD.BRANCHID = '+CAST(@BRANCHID AS VARCHAR)  
				END
				SET @SQLQUERY = @SQLQUERY + 'GROUP BY BRANCHCODE,BRANCHNAME,EVD.BRANCHID,EVD.FORMID,FORMNAME,EVD.QUARTER,ISREQACTIVE)FINAL ORDER BY BRANCHCODE;SELECT COUNT(BRANCHID) FROM #VALIDBRANCHES' ;

			EXEC SP_EXECUTESQL @SQLQUERY;  
		END
	GO
	
	IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_UpdateExistingDeducteesF005')
DROP PROCEDURE USP_TDS_UpdateExistingDeducteesF005
GO
CREATE PROC USP_TDS_UpdateExistingDeducteesF005   
(            
	@BRANCHID INT,            
	@REFNO VARCHAR(20),            
	@NAME VARCHAR(75),            
	@PAN VARCHAR(10),          
	@PANREFERENCE VARCHAR(10),          
	@ADDRESS1 VARCHAR(25),            
	@ADDRESS2 VARCHAR(25),            
	@ADDRESS3 VARCHAR(25),            
	@ADDRESS4 VARCHAR(25),            
	@ADDRESS5 VARCHAR(25),            
	@PINCODE VARCHAR(6),            
	@STATEID INT,      
	@CODE TINYINT=1           
)            
AS          
	BEGIN        
		DECLARE @DEDUCTEEID INT;      
		
		SELECT @DEDUCTEEID = DEDUCTEEID FROM DEDUCTEE WITH(NOLOCK) WHERE BRANCHID = @BRANCHID AND REFERENCENO = @REFNO ;       
	    DECLARE @SQLQUERY NVARCHAR(MAX)
	    
	    SET @SQLQUERY = 'UPDATE DEDUCTEE WITH (ROWLOCK) SET 
						 NAME = ''' + CAST(@NAME AS VARCHAR) + ''',
						 PAN = ''' + CAST(@PAN AS VARCHAR) + ''',
						 PANREFERENCE = CASE WHEN ISNULL(PANREFERENCE,'''') = '''' THEN ''' + 
						 CAST(@PANREFERENCE AS VARCHAR) + ''' ELSE PANREFERENCE END,'
	    
	    IF(@ADDRESS1 <> '')
			SET @SQLQUERY = @SQLQUERY + 'ADDRESS1 = ''' + CAST(@ADDRESS1 AS VARCHAR) + ''','
		IF(@ADDRESS2 <> '')
			SET @SQLQUERY = @SQLQUERY + 'ADDRESS2 = ''' + CAST(@ADDRESS2 AS VARCHAR) + ''','
		IF(@ADDRESS3 <> '')
			SET @SQLQUERY = @SQLQUERY + 'ADDRESS3 = ''' + CAST(@ADDRESS3 AS VARCHAR) + ''','
		IF(@ADDRESS4 <> '')
			SET @SQLQUERY = @SQLQUERY + 'ADDRESS4 = ''' + CAST(@ADDRESS4 AS VARCHAR) + ''','
		IF(@ADDRESS5 <> '')
			SET @SQLQUERY = @SQLQUERY + 'ADDRESS5 = ''' + CAST(@ADDRESS5 AS VARCHAR) + ''','
		IF(@PINCODE <> '')
			SET @SQLQUERY = @SQLQUERY + 'PINCODE = ''' + CAST(@PINCODE AS VARCHAR) + ''','
		
		SET @SQLQUERY = @SQLQUERY + 'STATEID = ' + CAST(@STATEID AS VARCHAR) + ',
									 CODE = ' + CAST(@CODE AS VARCHAR) + '
									 WHERE DEDUCTEEID = ' + CAST(@DEDUCTEEID AS VARCHAR) 
		
		EXEC SP_EXECUTESQL @SQLQUERY
			
		UPDATE NONEMPLOYEE WITH (ROWLOCK) SET DEDUCTEECODE = @CODE
		WHERE DEDUCTEEID = @DEDUCTEEID
	END
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE type = 'P' AND name = 'USP_TDS_GetForm27QDeductionDetails')
DROP PROCEDURE [USP_TDS_GetForm27QDeductionDetails]
GO
CREATE PROCEDURE [USP_TDS_GetForm27QDeductionDetails] 
@QUARTER AS INT,
@COUNTRYID AS INT,
@TAXRATE AS NUMERIC(7,4),
@FORMID AS INT
AS
	BEGIN
		DECLARE @QUERY NVARCHAR(MAX)
	
	
	    SET @QUERY = 'SELECT CB.BRANCHCODE, CM.COUNTRYNAME, DE.REFERENCENO, DE.NAME, DE.PAN, TS.SECTIONNAME, DD.PAYMENTMADE, 
					DD.PAYMENTDATE, DD.TAXRATE, DD.TOTALDEDUCTED,
				CASE WHEN DD.TDSRATEASPER <> ''''
				THEN 
				CASE DD.TDSRATEASPER
				WHEN ''A'' THEN ''IT Act''
				WHEN ''B'' THEN ''DTAA''
				ELSE ''''
				END
				END AS TDSRATEASPER  
			FROM DEDUCTIONDETAIL DD WITH(NOLOCK)
			INNER JOIN COMPANYBRANCH CB WITH(NOLOCK) ON CB.BRANCHID = DD.BRANCHID 
			INNER JOIN DEDUCTEE DE WITH(NOLOCK) ON DE.DEDUCTEEID = DD.DEDUCTEEID
			INNER JOIN TAXSECTIONS TS WITH(NOLOCK) ON TS.SECTIONID = DD.SECTIONID
			INNER JOIN COUNTRYMASTER CM WITH(NOLOCK) ON CM.COUNTRYCODE = DD.COUNTRYID
			WHERE DD.FORMID = ' + CAST (@FORMID	AS VARCHAR(1)) + '
			AND DD.QUARTER = ' + CAST (@QUARTER AS VARCHAR(1)) + '	
			AND DD.TAXRATE <> ' + CAST (@TAXRATE AS NVARCHAR(15)) + ''
			
			IF(@COUNTRYID <> '-1')
				BEGIN			
					SET @QUERY = @QUERY + ' AND DD.COUNTRYID = ' + CAST(@COUNTRYID AS VARCHAR(5))+ ' ' ;
				END				
					SET @QUERY = @QUERY + '	ORDER BY CB.BRANCHCODE,DD.PAYMENTDATE'				
			--PRINT @QUERY
			EXEC SP_EXECUTESQL @QUERY;			
		END
GO